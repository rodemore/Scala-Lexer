Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    EQ
    EQUALS
    INCREMENT
    ISEMPTY
    LIST
    LM
    MOD
    OBJECT
    PRINTLN
    RETURN
    REVERSE
    SEMICOLON
    THIS
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> for
Rule 8     declararConstante -> VAL ID COLON tipoValueCons
Rule 9     declararConstante -> VAL ID COLON tipo
Rule 10    declararConstante -> VAL ID EQUAL valueCons
Rule 11    declararConstante -> VAL ID EQUAL expression
Rule 12    declararVariable -> VAR ID COLON tipoValue
Rule 13    declararVariable -> VAR ID COLON tipo
Rule 14    declararVariable -> VAR ID EQUAL value
Rule 15    declararVariable -> VAR ID EQUAL expression
Rule 16    value -> string
Rule 17    value -> booleano
Rule 18    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 19    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 20    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 22    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 23    elementosInternos -> elementosInternosInt
Rule 24    elementosInternos -> elementosInternosDouble
Rule 25    elementosInternos -> elementosInternosBool
Rule 26    elementosInternos -> elementosInternosString
Rule 27    elementosInternosInt -> int
Rule 28    elementosInternosInt -> int COMMA elementosInternosInt
Rule 29    elementosInternosDouble -> double
Rule 30    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 31    elementosInternosBool -> booleano
Rule 32    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 33    elementosInternosString -> string
Rule 34    elementosInternosString -> string COMMA elementosInternosString
Rule 35    elementosInternos2 -> int
Rule 36    elementosInternos2 -> double
Rule 37    elementosInternos2 -> booleano
Rule 38    elementosInternos2 -> string
Rule 39    elementosInternos2 -> int COMMA elementosInternos2
Rule 40    elementosInternos2 -> double COMMA elementosInternos2
Rule 41    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 42    elementosInternos2 -> string COMMA elementosInternos2
Rule 43    valueCons -> string
Rule 44    valueCons -> booleano
Rule 45    valueCons -> tupla
Rule 46    tipo -> INT
Rule 47    tipo -> DOUBLE
Rule 48    tipo -> BOOL
Rule 49    tipo -> STRING_TYPE
Rule 50    tipoValue -> STRING_TYPE EQUAL string
Rule 51    tipoValue -> BOOL EQUAL booleano
Rule 52    tipoValue -> INT EQUAL int
Rule 53    tipoValue -> DOUBLE EQUAL double
Rule 54    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 55    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 56    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 57    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 58    tipoValueCons -> STRING_TYPE EQUAL string
Rule 59    tipoValueCons -> BOOL EQUAL booleano
Rule 60    tipoValueCons -> INT EQUAL int
Rule 61    tipoValueCons -> DOUBLE EQUAL double
Rule 62    tupla -> LPAREN elementosInternos2 RPAREN
Rule 63    funcionesTupla -> tuplaSwap
Rule 64    funcionesTupla -> tuplaToString
Rule 65    funcionesTupla -> tuplaProductIterator
Rule 66    tuplaSwap -> ID DOT SWAP
Rule 67    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 68    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 69    funcionesArray -> arrayHead
Rule 70    funcionesArray -> arrayTail
Rule 71    funcionesArray -> arrayLength
Rule 72    arrayHead -> ID DOT HEAD
Rule 73    arrayTail -> ID DOT TAIL
Rule 74    arrayLength -> ID DOT LENGTH
Rule 75    expression -> expression PLUS term
Rule 76    expression -> expression MINUS term
Rule 77    expression -> term
Rule 78    term -> term TIMES factor
Rule 79    term -> term DIVIDE factor
Rule 80    term -> factor
Rule 81    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 82    for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE
Rule 83    comparacion -> GT
Rule 84    comparacion -> GE
Rule 85    comparacion -> LT
Rule 86    comparacion -> LE
Rule 87    comparacion -> EQUAL2
Rule 88    factor -> INT_NUMBER
Rule 89    factor -> DOUBLE_NUMBER
Rule 90    booleano -> TRUE
Rule 91    booleano -> FALSE
Rule 92    string -> STRING
Rule 93    double -> DOUBLE_NUMBER
Rule 94    int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 18 19 20 21 22 54 54 55 55 56 56 57 57
BOOL                 : 20 48 51 56 56 59
CLASS                : 
COLON                : 8 9 12 13
COMMA                : 28 30 32 34 39 40 41 42
DECREMENT            : 
DEF                  : 
DIVIDE               : 79
DOT                  : 66 67 68 72 73 74
DOUBLE               : 19 47 53 55 55 61
DOUBLE_NUMBER        : 89 93
ELSE                 : 
EQ                   : 
EQUAL                : 10 11 14 15 50 51 52 53 54 55 56 57 58 59 60 61
EQUAL2               : 87
EQUALS               : 
FALSE                : 91
FOR                  : 82
GE                   : 84
GT                   : 83
HEAD                 : 72
ID                   : 8 9 10 11 12 13 14 15 66 67 68 72 73 74
IF                   : 81
INCREMENT            : 
INT                  : 18 46 52 54 54 60
INT_NUMBER           : 88 94
ISEMPTY              : 
LBRACE               : 81 82 82
LBRACK               : 18 19 20 21 54 54 55 55 56 56 57 57
LE                   : 86
LENGTH               : 74
LIST                 : 
LM                   : 
LPAREN               : 18 19 20 21 22 54 55 56 57 62 67 82
LT                   : 85
MINUS                : 76
MOD                  : 
NEW                  : 18 19 20 21 54 55 56 57
OBJECT               : 
PLUS                 : 75
PRINTLN              : 
PRODUCTITERATOR      : 68
RBRACE               : 81 82
RBRACK               : 18 19 20 21 54 54 55 55 56 56 57 57
RETURN               : 
REVERSE              : 
RPAREN               : 18 19 20 21 22 54 55 56 57 62 67 82
SEMICOLON            : 
STRING               : 92
STRING_TYPE          : 21 49 50 57 57 58
SWAP                 : 66
TAIL                 : 73
THIS                 : 
TIMES                : 78
TOSTRING             : 67
TRUE                 : 90
VAL                  : 8 9 10 11
VAR                  : 12 13 14 15
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 69
arrayLength          : 71
arrayTail            : 70
booleano             : 17 31 32 37 41 44 51 59
comparacion          : 81
cuerpo               : 81 0
declararConstante    : 4
declararVariable     : 3
double               : 29 30 36 40 53 61
elementosInternos    : 22
elementosInternos2   : 39 40 41 42 62
elementosInternosBool : 25 32
elementosInternosDouble : 24 30
elementosInternosInt : 23 28
elementosInternosString : 26 34
expression           : 1 11 15 75 76
factor               : 78 79 80 81 81
for                  : 7
funcionesArray       : 6
funcionesTupla       : 5
int                  : 18 19 20 21 27 28 35 39 52 54 55 56 57 60
sentencia            : 2
string               : 16 33 34 38 42 43 50 58
term                 : 75 76 77 78 79
tipo                 : 9 13
tipoValue            : 12
tipoValueCons        : 8
tupla                : 45
tuplaProductIterator : 65
tuplaSwap            : 63
tuplaToString        : 64
value                : 14
valueCons            : 10

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (81) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (12) declararVariable -> . VAR ID COLON tipoValue
    (13) declararVariable -> . VAR ID COLON tipo
    (14) declararVariable -> . VAR ID EQUAL value
    (15) declararVariable -> . VAR ID EQUAL expression
    (8) declararConstante -> . VAL ID COLON tipoValueCons
    (9) declararConstante -> . VAL ID COLON tipo
    (10) declararConstante -> . VAL ID EQUAL valueCons
    (11) declararConstante -> . VAL ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (82) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (72) arrayHead -> . ID DOT HEAD
    (73) arrayTail -> . ID DOT TAIL
    (74) arrayLength -> . ID DOT LENGTH
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 10
    VAR             shift and go to state 12
    VAL             shift and go to state 14
    FOR             shift and go to state 21
    ID              shift and go to state 13
    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 11
    tuplaSwap                      shift and go to state 15
    tuplaToString                  shift and go to state 16
    tuplaProductIterator           shift and go to state 17
    arrayHead                      shift and go to state 18
    arrayTail                      shift and go to state 19
    arrayLength                    shift and go to state 20

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (75) expression -> expression . PLUS term
    (76) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesArray .

    $end            reduce using rule 6 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesArray .)


state 8

    (7) cuerpo -> for .

    $end            reduce using rule 7 (cuerpo -> for .)
    RBRACE          reduce using rule 7 (cuerpo -> for .)


state 9

    (77) expression -> term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 77 (expression -> term .)
    MINUS           reduce using rule 77 (expression -> term .)
    $end            reduce using rule 77 (expression -> term .)
    RBRACE          reduce using rule 77 (expression -> term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 10

    (81) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    factor                         shift and go to state 28

state 11

    (80) term -> factor .

    TIMES           reduce using rule 80 (term -> factor .)
    DIVIDE          reduce using rule 80 (term -> factor .)
    PLUS            reduce using rule 80 (term -> factor .)
    MINUS           reduce using rule 80 (term -> factor .)
    $end            reduce using rule 80 (term -> factor .)
    RBRACE          reduce using rule 80 (term -> factor .)


state 12

    (12) declararVariable -> VAR . ID COLON tipoValue
    (13) declararVariable -> VAR . ID COLON tipo
    (14) declararVariable -> VAR . ID EQUAL value
    (15) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 29


state 13

    (66) tuplaSwap -> ID . DOT SWAP
    (67) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (68) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (72) arrayHead -> ID . DOT HEAD
    (73) arrayTail -> ID . DOT TAIL
    (74) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 30


state 14

    (8) declararConstante -> VAL . ID COLON tipoValueCons
    (9) declararConstante -> VAL . ID COLON tipo
    (10) declararConstante -> VAL . ID EQUAL valueCons
    (11) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 31


state 15

    (63) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 63 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 63 (funcionesTupla -> tuplaSwap .)


state 16

    (64) funcionesTupla -> tuplaToString .

    $end            reduce using rule 64 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 64 (funcionesTupla -> tuplaToString .)


state 17

    (65) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)


state 18

    (69) funcionesArray -> arrayHead .

    $end            reduce using rule 69 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 69 (funcionesArray -> arrayHead .)


state 19

    (70) funcionesArray -> arrayTail .

    $end            reduce using rule 70 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 70 (funcionesArray -> arrayTail .)


state 20

    (71) funcionesArray -> arrayLength .

    $end            reduce using rule 71 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 71 (funcionesArray -> arrayLength .)


state 21

    (82) for -> FOR . LPAREN RPAREN LBRACE LBRACE RBRACE

    LPAREN          shift and go to state 32


state 22

    (88) factor -> INT_NUMBER .

    TIMES           reduce using rule 88 (factor -> INT_NUMBER .)
    DIVIDE          reduce using rule 88 (factor -> INT_NUMBER .)
    PLUS            reduce using rule 88 (factor -> INT_NUMBER .)
    MINUS           reduce using rule 88 (factor -> INT_NUMBER .)
    $end            reduce using rule 88 (factor -> INT_NUMBER .)
    GT              reduce using rule 88 (factor -> INT_NUMBER .)
    GE              reduce using rule 88 (factor -> INT_NUMBER .)
    LT              reduce using rule 88 (factor -> INT_NUMBER .)
    LE              reduce using rule 88 (factor -> INT_NUMBER .)
    EQUAL2          reduce using rule 88 (factor -> INT_NUMBER .)
    RBRACE          reduce using rule 88 (factor -> INT_NUMBER .)
    LBRACE          reduce using rule 88 (factor -> INT_NUMBER .)


state 23

    (89) factor -> DOUBLE_NUMBER .

    TIMES           reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    $end            reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    GT              reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    GE              reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    LT              reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    LE              reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 89 (factor -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 89 (factor -> DOUBLE_NUMBER .)


state 24

    (75) expression -> expression PLUS . term
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    term                           shift and go to state 33
    factor                         shift and go to state 11

state 25

    (76) expression -> expression MINUS . term
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    term                           shift and go to state 34
    factor                         shift and go to state 11

state 26

    (78) term -> term TIMES . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    factor                         shift and go to state 35

state 27

    (79) term -> term DIVIDE . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    factor                         shift and go to state 36

state 28

    (81) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (83) comparacion -> . GT
    (84) comparacion -> . GE
    (85) comparacion -> . LT
    (86) comparacion -> . LE
    (87) comparacion -> . EQUAL2

    GT              shift and go to state 38
    GE              shift and go to state 39
    LT              shift and go to state 40
    LE              shift and go to state 41
    EQUAL2          shift and go to state 42

    comparacion                    shift and go to state 37

state 29

    (12) declararVariable -> VAR ID . COLON tipoValue
    (13) declararVariable -> VAR ID . COLON tipo
    (14) declararVariable -> VAR ID . EQUAL value
    (15) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 43
    EQUAL           shift and go to state 44


state 30

    (66) tuplaSwap -> ID DOT . SWAP
    (67) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (68) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (72) arrayHead -> ID DOT . HEAD
    (73) arrayTail -> ID DOT . TAIL
    (74) arrayLength -> ID DOT . LENGTH

    SWAP            shift and go to state 45
    TOSTRING        shift and go to state 46
    PRODUCTITERATOR shift and go to state 47
    HEAD            shift and go to state 48
    TAIL            shift and go to state 49
    LENGTH          shift and go to state 50


state 31

    (8) declararConstante -> VAL ID . COLON tipoValueCons
    (9) declararConstante -> VAL ID . COLON tipo
    (10) declararConstante -> VAL ID . EQUAL valueCons
    (11) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 51
    EQUAL           shift and go to state 52


state 32

    (82) for -> FOR LPAREN . RPAREN LBRACE LBRACE RBRACE

    RPAREN          shift and go to state 53


state 33

    (75) expression -> expression PLUS term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 75 (expression -> expression PLUS term .)
    MINUS           reduce using rule 75 (expression -> expression PLUS term .)
    $end            reduce using rule 75 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 75 (expression -> expression PLUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 34

    (76) expression -> expression MINUS term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 76 (expression -> expression MINUS term .)
    MINUS           reduce using rule 76 (expression -> expression MINUS term .)
    $end            reduce using rule 76 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 76 (expression -> expression MINUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 35

    (78) term -> term TIMES factor .

    TIMES           reduce using rule 78 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 78 (term -> term TIMES factor .)
    PLUS            reduce using rule 78 (term -> term TIMES factor .)
    MINUS           reduce using rule 78 (term -> term TIMES factor .)
    $end            reduce using rule 78 (term -> term TIMES factor .)
    RBRACE          reduce using rule 78 (term -> term TIMES factor .)


state 36

    (79) term -> term DIVIDE factor .

    TIMES           reduce using rule 79 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 79 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 79 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 79 (term -> term DIVIDE factor .)
    $end            reduce using rule 79 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 79 (term -> term DIVIDE factor .)


state 37

    (81) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    factor                         shift and go to state 54

state 38

    (83) comparacion -> GT .

    INT_NUMBER      reduce using rule 83 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 83 (comparacion -> GT .)


state 39

    (84) comparacion -> GE .

    INT_NUMBER      reduce using rule 84 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 84 (comparacion -> GE .)


state 40

    (85) comparacion -> LT .

    INT_NUMBER      reduce using rule 85 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 85 (comparacion -> LT .)


state 41

    (86) comparacion -> LE .

    INT_NUMBER      reduce using rule 86 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 86 (comparacion -> LE .)


state 42

    (87) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 87 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 87 (comparacion -> EQUAL2 .)


state 43

    (12) declararVariable -> VAR ID COLON . tipoValue
    (13) declararVariable -> VAR ID COLON . tipo
    (50) tipoValue -> . STRING_TYPE EQUAL string
    (51) tipoValue -> . BOOL EQUAL booleano
    (52) tipoValue -> . INT EQUAL int
    (53) tipoValue -> . DOUBLE EQUAL double
    (54) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (46) tipo -> . INT
    (47) tipo -> . DOUBLE
    (48) tipo -> . BOOL
    (49) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 57
    BOOL            shift and go to state 58
    INT             shift and go to state 59
    DOUBLE          shift and go to state 60
    ARRAY           shift and go to state 61

    tipoValue                      shift and go to state 55
    tipo                           shift and go to state 56

state 44

    (14) declararVariable -> VAR ID EQUAL . value
    (15) declararVariable -> VAR ID EQUAL . expression
    (16) value -> . string
    (17) value -> . booleano
    (18) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (22) value -> . ARRAY LPAREN elementosInternos RPAREN
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (92) string -> . STRING
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    NEW             shift and go to state 66
    ARRAY           shift and go to state 67
    STRING          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    value                          shift and go to state 62
    expression                     shift and go to state 63
    string                         shift and go to state 64
    booleano                       shift and go to state 65
    term                           shift and go to state 9
    factor                         shift and go to state 11

state 45

    (66) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)


state 46

    (67) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 71


state 47

    (68) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 48

    (72) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 72 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 72 (arrayHead -> ID DOT HEAD .)


state 49

    (73) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 73 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 73 (arrayTail -> ID DOT TAIL .)


state 50

    (74) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 74 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 74 (arrayLength -> ID DOT LENGTH .)


state 51

    (8) declararConstante -> VAL ID COLON . tipoValueCons
    (9) declararConstante -> VAL ID COLON . tipo
    (58) tipoValueCons -> . STRING_TYPE EQUAL string
    (59) tipoValueCons -> . BOOL EQUAL booleano
    (60) tipoValueCons -> . INT EQUAL int
    (61) tipoValueCons -> . DOUBLE EQUAL double
    (46) tipo -> . INT
    (47) tipo -> . DOUBLE
    (48) tipo -> . BOOL
    (49) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 74
    BOOL            shift and go to state 75
    INT             shift and go to state 76
    DOUBLE          shift and go to state 77

    tipoValueCons                  shift and go to state 72
    tipo                           shift and go to state 73

state 52

    (10) declararConstante -> VAL ID EQUAL . valueCons
    (11) declararConstante -> VAL ID EQUAL . expression
    (43) valueCons -> . string
    (44) valueCons -> . booleano
    (45) valueCons -> . tupla
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (92) string -> . STRING
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (62) tupla -> . LPAREN elementosInternos2 RPAREN
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    STRING          shift and go to state 68
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    LPAREN          shift and go to state 83
    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    valueCons                      shift and go to state 78
    expression                     shift and go to state 79
    string                         shift and go to state 80
    booleano                       shift and go to state 81
    tupla                          shift and go to state 82
    term                           shift and go to state 9
    factor                         shift and go to state 11

state 53

    (82) for -> FOR LPAREN RPAREN . LBRACE LBRACE RBRACE

    LBRACE          shift and go to state 84


state 54

    (81) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 85


state 55

    (12) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 12 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 12 (declararVariable -> VAR ID COLON tipoValue .)


state 56

    (13) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 13 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 13 (declararVariable -> VAR ID COLON tipo .)


state 57

    (50) tipoValue -> STRING_TYPE . EQUAL string
    (49) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 86
    $end            reduce using rule 49 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 49 (tipo -> STRING_TYPE .)


state 58

    (51) tipoValue -> BOOL . EQUAL booleano
    (48) tipo -> BOOL .

    EQUAL           shift and go to state 87
    $end            reduce using rule 48 (tipo -> BOOL .)
    RBRACE          reduce using rule 48 (tipo -> BOOL .)


state 59

    (52) tipoValue -> INT . EQUAL int
    (46) tipo -> INT .

    EQUAL           shift and go to state 88
    $end            reduce using rule 46 (tipo -> INT .)
    RBRACE          reduce using rule 46 (tipo -> INT .)


state 60

    (53) tipoValue -> DOUBLE . EQUAL double
    (47) tipo -> DOUBLE .

    EQUAL           shift and go to state 89
    $end            reduce using rule 47 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 47 (tipo -> DOUBLE .)


state 61

    (54) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 90


state 62

    (14) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 14 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 14 (declararVariable -> VAR ID EQUAL value .)


state 63

    (15) declararVariable -> VAR ID EQUAL expression .
    (75) expression -> expression . PLUS term
    (76) expression -> expression . MINUS term

    $end            reduce using rule 15 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 15 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 64

    (16) value -> string .

    $end            reduce using rule 16 (value -> string .)
    RBRACE          reduce using rule 16 (value -> string .)


state 65

    (17) value -> booleano .

    $end            reduce using rule 17 (value -> booleano .)
    RBRACE          reduce using rule 17 (value -> booleano .)


state 66

    (18) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 91


state 67

    (22) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 92


state 68

    (92) string -> STRING .

    $end            reduce using rule 92 (string -> STRING .)
    RBRACE          reduce using rule 92 (string -> STRING .)
    COMMA           reduce using rule 92 (string -> STRING .)
    RPAREN          reduce using rule 92 (string -> STRING .)


state 69

    (90) booleano -> TRUE .

    $end            reduce using rule 90 (booleano -> TRUE .)
    RBRACE          reduce using rule 90 (booleano -> TRUE .)
    COMMA           reduce using rule 90 (booleano -> TRUE .)
    RPAREN          reduce using rule 90 (booleano -> TRUE .)


state 70

    (91) booleano -> FALSE .

    $end            reduce using rule 91 (booleano -> FALSE .)
    RBRACE          reduce using rule 91 (booleano -> FALSE .)
    COMMA           reduce using rule 91 (booleano -> FALSE .)
    RPAREN          reduce using rule 91 (booleano -> FALSE .)


state 71

    (67) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 93


state 72

    (8) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 8 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 8 (declararConstante -> VAL ID COLON tipoValueCons .)


state 73

    (9) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 9 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 9 (declararConstante -> VAL ID COLON tipo .)


state 74

    (58) tipoValueCons -> STRING_TYPE . EQUAL string
    (49) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 94
    $end            reduce using rule 49 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 49 (tipo -> STRING_TYPE .)


state 75

    (59) tipoValueCons -> BOOL . EQUAL booleano
    (48) tipo -> BOOL .

    EQUAL           shift and go to state 95
    $end            reduce using rule 48 (tipo -> BOOL .)
    RBRACE          reduce using rule 48 (tipo -> BOOL .)


state 76

    (60) tipoValueCons -> INT . EQUAL int
    (46) tipo -> INT .

    EQUAL           shift and go to state 96
    $end            reduce using rule 46 (tipo -> INT .)
    RBRACE          reduce using rule 46 (tipo -> INT .)


state 77

    (61) tipoValueCons -> DOUBLE . EQUAL double
    (47) tipo -> DOUBLE .

    EQUAL           shift and go to state 97
    $end            reduce using rule 47 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 47 (tipo -> DOUBLE .)


state 78

    (10) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 10 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 10 (declararConstante -> VAL ID EQUAL valueCons .)


state 79

    (11) declararConstante -> VAL ID EQUAL expression .
    (75) expression -> expression . PLUS term
    (76) expression -> expression . MINUS term

    $end            reduce using rule 11 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 11 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 80

    (43) valueCons -> string .

    $end            reduce using rule 43 (valueCons -> string .)
    RBRACE          reduce using rule 43 (valueCons -> string .)


state 81

    (44) valueCons -> booleano .

    $end            reduce using rule 44 (valueCons -> booleano .)
    RBRACE          reduce using rule 44 (valueCons -> booleano .)


state 82

    (45) valueCons -> tupla .

    $end            reduce using rule 45 (valueCons -> tupla .)
    RBRACE          reduce using rule 45 (valueCons -> tupla .)


state 83

    (62) tupla -> LPAREN . elementosInternos2 RPAREN
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    elementosInternos2             shift and go to state 98
    int                            shift and go to state 99
    double                         shift and go to state 100
    booleano                       shift and go to state 101
    string                         shift and go to state 102

state 84

    (82) for -> FOR LPAREN RPAREN LBRACE . LBRACE RBRACE

    LBRACE          shift and go to state 105


state 85

    (81) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (81) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (12) declararVariable -> . VAR ID COLON tipoValue
    (13) declararVariable -> . VAR ID COLON tipo
    (14) declararVariable -> . VAR ID EQUAL value
    (15) declararVariable -> . VAR ID EQUAL expression
    (8) declararConstante -> . VAL ID COLON tipoValueCons
    (9) declararConstante -> . VAL ID COLON tipo
    (10) declararConstante -> . VAL ID EQUAL valueCons
    (11) declararConstante -> . VAL ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (82) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (72) arrayHead -> . ID DOT HEAD
    (73) arrayTail -> . ID DOT TAIL
    (74) arrayLength -> . ID DOT LENGTH
    (88) factor -> . INT_NUMBER
    (89) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 10
    VAR             shift and go to state 12
    VAL             shift and go to state 14
    FOR             shift and go to state 21
    ID              shift and go to state 13
    INT_NUMBER      shift and go to state 22
    DOUBLE_NUMBER   shift and go to state 23

    factor                         shift and go to state 11
    cuerpo                         shift and go to state 106
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    term                           shift and go to state 9
    tuplaSwap                      shift and go to state 15
    tuplaToString                  shift and go to state 16
    tuplaProductIterator           shift and go to state 17
    arrayHead                      shift and go to state 18
    arrayTail                      shift and go to state 19
    arrayLength                    shift and go to state 20

state 86

    (50) tipoValue -> STRING_TYPE EQUAL . string
    (92) string -> . STRING

    STRING          shift and go to state 68

    string                         shift and go to state 107

state 87

    (51) tipoValue -> BOOL EQUAL . booleano
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE

    TRUE            shift and go to state 69
    FALSE           shift and go to state 70

    booleano                       shift and go to state 108

state 88

    (52) tipoValue -> INT EQUAL . int
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 109

state 89

    (53) tipoValue -> DOUBLE EQUAL . double
    (93) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 104

    double                         shift and go to state 110

state 90

    (54) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 111
    DOUBLE          shift and go to state 112
    BOOL            shift and go to state 113
    STRING_TYPE     shift and go to state 114


state 91

    (18) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 115


state 92

    (22) value -> ARRAY LPAREN . elementosInternos RPAREN
    (23) elementosInternos -> . elementosInternosInt
    (24) elementosInternos -> . elementosInternosDouble
    (25) elementosInternos -> . elementosInternosBool
    (26) elementosInternos -> . elementosInternosString
    (27) elementosInternosInt -> . int
    (28) elementosInternosInt -> . int COMMA elementosInternosInt
    (29) elementosInternosDouble -> . double
    (30) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (31) elementosInternosBool -> . booleano
    (32) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (33) elementosInternosString -> . string
    (34) elementosInternosString -> . string COMMA elementosInternosString
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    elementosInternos              shift and go to state 116
    elementosInternosInt           shift and go to state 117
    elementosInternosDouble        shift and go to state 118
    elementosInternosBool          shift and go to state 119
    elementosInternosString        shift and go to state 120
    int                            shift and go to state 121
    double                         shift and go to state 122
    booleano                       shift and go to state 123
    string                         shift and go to state 124

state 93

    (67) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 67 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 67 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 94

    (58) tipoValueCons -> STRING_TYPE EQUAL . string
    (92) string -> . STRING

    STRING          shift and go to state 68

    string                         shift and go to state 125

state 95

    (59) tipoValueCons -> BOOL EQUAL . booleano
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE

    TRUE            shift and go to state 69
    FALSE           shift and go to state 70

    booleano                       shift and go to state 126

state 96

    (60) tipoValueCons -> INT EQUAL . int
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 127

state 97

    (61) tipoValueCons -> DOUBLE EQUAL . double
    (93) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 104

    double                         shift and go to state 128

state 98

    (62) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 129


state 99

    (35) elementosInternos2 -> int .
    (39) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 35 (elementosInternos2 -> int .)
    COMMA           shift and go to state 130


state 100

    (36) elementosInternos2 -> double .
    (40) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 36 (elementosInternos2 -> double .)
    COMMA           shift and go to state 131


state 101

    (37) elementosInternos2 -> booleano .
    (41) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 37 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 132


state 102

    (38) elementosInternos2 -> string .
    (42) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 38 (elementosInternos2 -> string .)
    COMMA           shift and go to state 133


state 103

    (94) int -> INT_NUMBER .

    COMMA           reduce using rule 94 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 94 (int -> INT_NUMBER .)
    $end            reduce using rule 94 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 94 (int -> INT_NUMBER .)


state 104

    (93) double -> DOUBLE_NUMBER .

    COMMA           reduce using rule 93 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 93 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 93 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 93 (double -> DOUBLE_NUMBER .)


state 105

    (82) for -> FOR LPAREN RPAREN LBRACE LBRACE . RBRACE

    RBRACE          shift and go to state 134


state 106

    (81) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 135


state 107

    (50) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 50 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 50 (tipoValue -> STRING_TYPE EQUAL string .)


state 108

    (51) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 51 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 51 (tipoValue -> BOOL EQUAL booleano .)


state 109

    (52) tipoValue -> INT EQUAL int .

    $end            reduce using rule 52 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 52 (tipoValue -> INT EQUAL int .)


state 110

    (53) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 53 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 53 (tipoValue -> DOUBLE EQUAL double .)


state 111

    (54) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 136


state 112

    (55) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 137


state 113

    (56) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 138


state 114

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 139


state 115

    (18) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (19) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 140
    DOUBLE          shift and go to state 141
    BOOL            shift and go to state 142
    STRING_TYPE     shift and go to state 143


state 116

    (22) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 144


state 117

    (23) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 23 (elementosInternos -> elementosInternosInt .)


state 118

    (24) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 24 (elementosInternos -> elementosInternosDouble .)


state 119

    (25) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 25 (elementosInternos -> elementosInternosBool .)


state 120

    (26) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 26 (elementosInternos -> elementosInternosString .)


state 121

    (27) elementosInternosInt -> int .
    (28) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 27 (elementosInternosInt -> int .)
    COMMA           shift and go to state 145


state 122

    (29) elementosInternosDouble -> double .
    (30) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 29 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 146


state 123

    (31) elementosInternosBool -> booleano .
    (32) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 31 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 147


state 124

    (33) elementosInternosString -> string .
    (34) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 33 (elementosInternosString -> string .)
    COMMA           shift and go to state 148


state 125

    (58) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 58 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 58 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 126

    (59) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 59 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 59 (tipoValueCons -> BOOL EQUAL booleano .)


state 127

    (60) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 60 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 60 (tipoValueCons -> INT EQUAL int .)


state 128

    (61) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 61 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 61 (tipoValueCons -> DOUBLE EQUAL double .)


state 129

    (62) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 62 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 62 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 130

    (39) elementosInternos2 -> int COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    int                            shift and go to state 99
    elementosInternos2             shift and go to state 149
    double                         shift and go to state 100
    booleano                       shift and go to state 101
    string                         shift and go to state 102

state 131

    (40) elementosInternos2 -> double COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    double                         shift and go to state 100
    elementosInternos2             shift and go to state 150
    int                            shift and go to state 99
    booleano                       shift and go to state 101
    string                         shift and go to state 102

state 132

    (41) elementosInternos2 -> booleano COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    booleano                       shift and go to state 101
    elementosInternos2             shift and go to state 151
    int                            shift and go to state 99
    double                         shift and go to state 100
    string                         shift and go to state 102

state 133

    (42) elementosInternos2 -> string COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (94) int -> . INT_NUMBER
    (93) double -> . DOUBLE_NUMBER
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE
    (92) string -> . STRING

    INT_NUMBER      shift and go to state 103
    DOUBLE_NUMBER   shift and go to state 104
    TRUE            shift and go to state 69
    FALSE           shift and go to state 70
    STRING          shift and go to state 68

    string                         shift and go to state 102
    elementosInternos2             shift and go to state 152
    int                            shift and go to state 99
    double                         shift and go to state 100
    booleano                       shift and go to state 101

state 134

    (82) for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .

    $end            reduce using rule 82 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)
    RBRACE          reduce using rule 82 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)


state 135

    (81) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 81 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 81 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 136

    (54) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 153


state 137

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 154


state 138

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 155


state 139

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 156


state 140

    (18) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 157


state 141

    (19) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 158


state 142

    (20) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 159


state 143

    (21) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 160


state 144

    (22) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 22 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 22 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 145

    (28) elementosInternosInt -> int COMMA . elementosInternosInt
    (27) elementosInternosInt -> . int
    (28) elementosInternosInt -> . int COMMA elementosInternosInt
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 121
    elementosInternosInt           shift and go to state 161

state 146

    (30) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (29) elementosInternosDouble -> . double
    (30) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (93) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 104

    double                         shift and go to state 122
    elementosInternosDouble        shift and go to state 162

state 147

    (32) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (31) elementosInternosBool -> . booleano
    (32) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (90) booleano -> . TRUE
    (91) booleano -> . FALSE

    TRUE            shift and go to state 69
    FALSE           shift and go to state 70

    booleano                       shift and go to state 123
    elementosInternosBool          shift and go to state 163

state 148

    (34) elementosInternosString -> string COMMA . elementosInternosString
    (33) elementosInternosString -> . string
    (34) elementosInternosString -> . string COMMA elementosInternosString
    (92) string -> . STRING

    STRING          shift and go to state 68

    string                         shift and go to state 124
    elementosInternosString        shift and go to state 164

state 149

    (39) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 39 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 150

    (40) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 40 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 151

    (41) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 41 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 152

    (42) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 42 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 153

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 165


state 154

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 166


state 155

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 167


state 156

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 168


state 157

    (18) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 169


state 158

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 170


state 159

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 171


state 160

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 172


state 161

    (28) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 28 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 162

    (30) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 30 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 163

    (32) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 32 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 164

    (34) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 34 (elementosInternosString -> string COMMA elementosInternosString .)


state 165

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 173


state 166

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 174


state 167

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 175


state 168

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 176


state 169

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 177

state 170

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 178

state 171

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 179

state 172

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 180

state 173

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 181


state 174

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 182


state 175

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 183


state 176

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 184


state 177

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 185


state 178

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 186


state 179

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 187


state 180

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 188


state 181

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 189


state 182

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 190


state 183

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 191


state 184

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 192


state 185

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 18 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 18 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 186

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 19 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 19 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 187

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 20 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 20 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 188

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 21 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 21 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 189

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 193


state 190

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 194


state 191

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 195


state 192

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 196


state 193

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 197


state 194

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 198


state 195

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 199


state 196

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 200


state 197

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 201

state 198

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 202

state 199

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 203

state 200

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (94) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 103

    int                            shift and go to state 204

state 201

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 205


state 202

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 206


state 203

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 207


state 204

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 208


state 205

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 54 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 54 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 206

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 55 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 55 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 207

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 56 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 56 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 208

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 57 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

