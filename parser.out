Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    DOT
    ELSE
    EQ
    EQUALS
    FOR
    HEAD
    INCREMENT
    ISEMPTY
    LENGTH
    LIST
    MOD
    OBJECT
    PRINTLN
    PRODUCTITERATOR
    RETURN
    REVERSE
    SEMICOLON
    SWAP
    TAIL
    THIS
    TOSTRING
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     declararConstante -> VAL ID COLON tipoValueCons
Rule 6     declararConstante -> VAL ID COLON tipo
Rule 7     declararConstante -> VAL ID EQUAL valueCons
Rule 8     declararConstante -> VAL ID EQUAL expression
Rule 9     declararVariable -> VAR ID COLON tipoValue
Rule 10    declararVariable -> VAR ID COLON tipo
Rule 11    declararVariable -> VAR ID EQUAL value
Rule 12    declararVariable -> VAR ID EQUAL expression
Rule 13    value -> string
Rule 14    value -> booleano
Rule 15    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 16    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 17    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 18    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 19    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 20    elementosInternos -> elementosInternosInt
Rule 21    elementosInternos -> elementosInternosDouble
Rule 22    elementosInternos -> elementosInternosBool
Rule 23    elementosInternos -> elementosInternosString
Rule 24    elementosInternosInt -> int
Rule 25    elementosInternosInt -> int COMMA elementosInternosInt
Rule 26    elementosInternosDouble -> double
Rule 27    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 28    elementosInternosBool -> booleano
Rule 29    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 30    elementosInternosString -> string
Rule 31    elementosInternosString -> string COMMA elementosInternosString
Rule 32    elementosInternos2 -> int
Rule 33    elementosInternos2 -> double
Rule 34    elementosInternos2 -> booleano
Rule 35    elementosInternos2 -> string
Rule 36    elementosInternos2 -> int COMMA elementosInternos2
Rule 37    elementosInternos2 -> double COMMA elementosInternos2
Rule 38    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 39    elementosInternos2 -> string COMMA elementosInternos2
Rule 40    valueCons -> string
Rule 41    valueCons -> booleano
Rule 42    valueCons -> tupla
Rule 43    tipo -> INT
Rule 44    tipo -> DOUBLE
Rule 45    tipo -> BOOL
Rule 46    tipo -> STRING_TYPE
Rule 47    tipoValue -> STRING_TYPE EQUAL string
Rule 48    tipoValue -> BOOL EQUAL booleano
Rule 49    tipoValue -> INT EQUAL int
Rule 50    tipoValue -> DOUBLE EQUAL double
Rule 51    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 52    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 53    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 54    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 55    tipoValueCons -> STRING_TYPE EQUAL string
Rule 56    tipoValueCons -> BOOL EQUAL booleano
Rule 57    tipoValueCons -> INT EQUAL int
Rule 58    tipoValueCons -> DOUBLE EQUAL double
Rule 59    tupla -> LPAREN elementosInternos2 RPAREN
Rule 60    expression -> expression PLUS term
Rule 61    expression -> expression MINUS term
Rule 62    expression -> term
Rule 63    term -> term TIMES factor
Rule 64    term -> term DIVIDE factor
Rule 65    term -> factor
Rule 66    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 67    comparacion -> GT
Rule 68    comparacion -> GE
Rule 69    comparacion -> LT
Rule 70    comparacion -> LE
Rule 71    comparacion -> EQUAL2
Rule 72    factor -> INT_NUMBER
Rule 73    factor -> DOUBLE_NUMBER
Rule 74    booleano -> TRUE
Rule 75    booleano -> FALSE
Rule 76    string -> STRING
Rule 77    double -> DOUBLE_NUMBER
Rule 78    int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 15 16 17 18 19 51 51 52 52 53 53 54 54
BOOL                 : 17 45 48 53 53 56
CLASS                : 
COLON                : 5 6 9 10
COMMA                : 25 27 29 31 36 37 38 39
DECREMENT            : 
DEF                  : 
DIVIDE               : 64
DOT                  : 
DOUBLE               : 16 44 50 52 52 58
DOUBLE_NUMBER        : 73 77
ELSE                 : 
EQ                   : 
EQUAL                : 7 8 11 12 47 48 49 50 51 52 53 54 55 56 57 58
EQUAL2               : 71
EQUALS               : 
FALSE                : 75
FOR                  : 
GE                   : 68
GT                   : 67
HEAD                 : 
ID                   : 5 6 7 8 9 10 11 12
IF                   : 66
INCREMENT            : 
INT                  : 15 43 49 51 51 57
INT_NUMBER           : 72 78
ISEMPTY              : 
LBRACE               : 66
LBRACK               : 15 16 17 18 51 51 52 52 53 53 54 54
LE                   : 70
LENGTH               : 
LIST                 : 
LPAREN               : 15 16 17 18 19 51 52 53 54 59
LT                   : 69
MINUS                : 61
MOD                  : 
NEW                  : 15 16 17 18 51 52 53 54
OBJECT               : 
PLUS                 : 60
PRINTLN              : 
PRODUCTITERATOR      : 
RBRACE               : 66
RBRACK               : 15 16 17 18 51 51 52 52 53 53 54 54
RETURN               : 
REVERSE              : 
RPAREN               : 15 16 17 18 19 51 52 53 54 59
SEMICOLON            : 
STRING               : 76
STRING_TYPE          : 18 46 47 54 54 55
SWAP                 : 
TAIL                 : 
THIS                 : 
TIMES                : 63
TOSTRING             : 
TRUE                 : 74
VAL                  : 5 6 7 8
VAR                  : 9 10 11 12
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

booleano             : 14 28 29 34 38 41 48 56
comparacion          : 66
cuerpo               : 66 0
declararConstante    : 4
declararVariable     : 3
double               : 26 27 33 37 50 58
elementosInternos    : 19
elementosInternos2   : 36 37 38 39 59
elementosInternosBool : 22 29
elementosInternosDouble : 21 27
elementosInternosInt : 20 25
elementosInternosString : 23 31
expression           : 1 8 12 60 61
factor               : 63 64 65 66 66
int                  : 15 16 17 18 24 25 32 36 49 51 52 53 54 57
sentencia            : 2
string               : 13 30 31 35 39 40 47 55
term                 : 60 61 62 63 64
tipo                 : 6 10
tipoValue            : 9
tipoValueCons        : 5
tupla                : 42
value                : 11
valueCons            : 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . term
    (66) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (9) declararVariable -> . VAR ID COLON tipoValue
    (10) declararVariable -> . VAR ID COLON tipo
    (11) declararVariable -> . VAR ID EQUAL value
    (12) declararVariable -> . VAR ID EQUAL expression
    (5) declararConstante -> . VAL ID COLON tipoValueCons
    (6) declararConstante -> . VAL ID COLON tipo
    (7) declararConstante -> . VAL ID EQUAL valueCons
    (8) declararConstante -> . VAL ID EQUAL expression
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 7
    VAR             shift and go to state 9
    VAL             shift and go to state 10
    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (62) expression -> term .
    (63) term -> term . TIMES factor
    (64) term -> term . DIVIDE factor

    PLUS            reduce using rule 62 (expression -> term .)
    MINUS           reduce using rule 62 (expression -> term .)
    $end            reduce using rule 62 (expression -> term .)
    RBRACE          reduce using rule 62 (expression -> term .)
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16


state 7

    (66) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    factor                         shift and go to state 17

state 8

    (65) term -> factor .

    TIMES           reduce using rule 65 (term -> factor .)
    DIVIDE          reduce using rule 65 (term -> factor .)
    PLUS            reduce using rule 65 (term -> factor .)
    MINUS           reduce using rule 65 (term -> factor .)
    $end            reduce using rule 65 (term -> factor .)
    RBRACE          reduce using rule 65 (term -> factor .)


state 9

    (9) declararVariable -> VAR . ID COLON tipoValue
    (10) declararVariable -> VAR . ID COLON tipo
    (11) declararVariable -> VAR . ID EQUAL value
    (12) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 18


state 10

    (5) declararConstante -> VAL . ID COLON tipoValueCons
    (6) declararConstante -> VAL . ID COLON tipo
    (7) declararConstante -> VAL . ID EQUAL valueCons
    (8) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 19


state 11

    (72) factor -> INT_NUMBER .

    TIMES           reduce using rule 72 (factor -> INT_NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> INT_NUMBER .)
    PLUS            reduce using rule 72 (factor -> INT_NUMBER .)
    MINUS           reduce using rule 72 (factor -> INT_NUMBER .)
    $end            reduce using rule 72 (factor -> INT_NUMBER .)
    GT              reduce using rule 72 (factor -> INT_NUMBER .)
    GE              reduce using rule 72 (factor -> INT_NUMBER .)
    LT              reduce using rule 72 (factor -> INT_NUMBER .)
    LE              reduce using rule 72 (factor -> INT_NUMBER .)
    EQUAL2          reduce using rule 72 (factor -> INT_NUMBER .)
    RBRACE          reduce using rule 72 (factor -> INT_NUMBER .)
    LBRACE          reduce using rule 72 (factor -> INT_NUMBER .)


state 12

    (73) factor -> DOUBLE_NUMBER .

    TIMES           reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    $end            reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    GT              reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    GE              reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    LT              reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    LE              reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 73 (factor -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 73 (factor -> DOUBLE_NUMBER .)


state 13

    (60) expression -> expression PLUS . term
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    term                           shift and go to state 20
    factor                         shift and go to state 8

state 14

    (61) expression -> expression MINUS . term
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    term                           shift and go to state 21
    factor                         shift and go to state 8

state 15

    (63) term -> term TIMES . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    factor                         shift and go to state 22

state 16

    (64) term -> term DIVIDE . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    factor                         shift and go to state 23

state 17

    (66) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (67) comparacion -> . GT
    (68) comparacion -> . GE
    (69) comparacion -> . LT
    (70) comparacion -> . LE
    (71) comparacion -> . EQUAL2

    GT              shift and go to state 25
    GE              shift and go to state 26
    LT              shift and go to state 27
    LE              shift and go to state 28
    EQUAL2          shift and go to state 29

    comparacion                    shift and go to state 24

state 18

    (9) declararVariable -> VAR ID . COLON tipoValue
    (10) declararVariable -> VAR ID . COLON tipo
    (11) declararVariable -> VAR ID . EQUAL value
    (12) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 30
    EQUAL           shift and go to state 31


state 19

    (5) declararConstante -> VAL ID . COLON tipoValueCons
    (6) declararConstante -> VAL ID . COLON tipo
    (7) declararConstante -> VAL ID . EQUAL valueCons
    (8) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 32
    EQUAL           shift and go to state 33


state 20

    (60) expression -> expression PLUS term .
    (63) term -> term . TIMES factor
    (64) term -> term . DIVIDE factor

    PLUS            reduce using rule 60 (expression -> expression PLUS term .)
    MINUS           reduce using rule 60 (expression -> expression PLUS term .)
    $end            reduce using rule 60 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 60 (expression -> expression PLUS term .)
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16


state 21

    (61) expression -> expression MINUS term .
    (63) term -> term . TIMES factor
    (64) term -> term . DIVIDE factor

    PLUS            reduce using rule 61 (expression -> expression MINUS term .)
    MINUS           reduce using rule 61 (expression -> expression MINUS term .)
    $end            reduce using rule 61 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 61 (expression -> expression MINUS term .)
    TIMES           shift and go to state 15
    DIVIDE          shift and go to state 16


state 22

    (63) term -> term TIMES factor .

    TIMES           reduce using rule 63 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 63 (term -> term TIMES factor .)
    PLUS            reduce using rule 63 (term -> term TIMES factor .)
    MINUS           reduce using rule 63 (term -> term TIMES factor .)
    $end            reduce using rule 63 (term -> term TIMES factor .)
    RBRACE          reduce using rule 63 (term -> term TIMES factor .)


state 23

    (64) term -> term DIVIDE factor .

    TIMES           reduce using rule 64 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 64 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 64 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 64 (term -> term DIVIDE factor .)
    $end            reduce using rule 64 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 64 (term -> term DIVIDE factor .)


state 24

    (66) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    factor                         shift and go to state 34

state 25

    (67) comparacion -> GT .

    INT_NUMBER      reduce using rule 67 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 67 (comparacion -> GT .)


state 26

    (68) comparacion -> GE .

    INT_NUMBER      reduce using rule 68 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 68 (comparacion -> GE .)


state 27

    (69) comparacion -> LT .

    INT_NUMBER      reduce using rule 69 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 69 (comparacion -> LT .)


state 28

    (70) comparacion -> LE .

    INT_NUMBER      reduce using rule 70 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 70 (comparacion -> LE .)


state 29

    (71) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 71 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 71 (comparacion -> EQUAL2 .)


state 30

    (9) declararVariable -> VAR ID COLON . tipoValue
    (10) declararVariable -> VAR ID COLON . tipo
    (47) tipoValue -> . STRING_TYPE EQUAL string
    (48) tipoValue -> . BOOL EQUAL booleano
    (49) tipoValue -> . INT EQUAL int
    (50) tipoValue -> . DOUBLE EQUAL double
    (51) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (52) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (53) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (54) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (43) tipo -> . INT
    (44) tipo -> . DOUBLE
    (45) tipo -> . BOOL
    (46) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 37
    BOOL            shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    ARRAY           shift and go to state 41

    tipoValue                      shift and go to state 35
    tipo                           shift and go to state 36

state 31

    (11) declararVariable -> VAR ID EQUAL . value
    (12) declararVariable -> VAR ID EQUAL . expression
    (13) value -> . string
    (14) value -> . booleano
    (15) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (16) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (17) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (18) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (19) value -> . ARRAY LPAREN elementosInternos RPAREN
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . term
    (76) string -> . STRING
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    NEW             shift and go to state 46
    ARRAY           shift and go to state 47
    STRING          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    value                          shift and go to state 42
    expression                     shift and go to state 43
    string                         shift and go to state 44
    booleano                       shift and go to state 45
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 32

    (5) declararConstante -> VAL ID COLON . tipoValueCons
    (6) declararConstante -> VAL ID COLON . tipo
    (55) tipoValueCons -> . STRING_TYPE EQUAL string
    (56) tipoValueCons -> . BOOL EQUAL booleano
    (57) tipoValueCons -> . INT EQUAL int
    (58) tipoValueCons -> . DOUBLE EQUAL double
    (43) tipo -> . INT
    (44) tipo -> . DOUBLE
    (45) tipo -> . BOOL
    (46) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 53
    BOOL            shift and go to state 54
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56

    tipoValueCons                  shift and go to state 51
    tipo                           shift and go to state 52

state 33

    (7) declararConstante -> VAL ID EQUAL . valueCons
    (8) declararConstante -> VAL ID EQUAL . expression
    (40) valueCons -> . string
    (41) valueCons -> . booleano
    (42) valueCons -> . tupla
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . term
    (76) string -> . STRING
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (59) tupla -> . LPAREN elementosInternos2 RPAREN
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    STRING          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    LPAREN          shift and go to state 62
    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    valueCons                      shift and go to state 57
    expression                     shift and go to state 58
    string                         shift and go to state 59
    booleano                       shift and go to state 60
    tupla                          shift and go to state 61
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 34

    (66) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 63


state 35

    (9) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 9 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 9 (declararVariable -> VAR ID COLON tipoValue .)


state 36

    (10) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 10 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 10 (declararVariable -> VAR ID COLON tipo .)


state 37

    (47) tipoValue -> STRING_TYPE . EQUAL string
    (46) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 64
    $end            reduce using rule 46 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 46 (tipo -> STRING_TYPE .)


state 38

    (48) tipoValue -> BOOL . EQUAL booleano
    (45) tipo -> BOOL .

    EQUAL           shift and go to state 65
    $end            reduce using rule 45 (tipo -> BOOL .)
    RBRACE          reduce using rule 45 (tipo -> BOOL .)


state 39

    (49) tipoValue -> INT . EQUAL int
    (43) tipo -> INT .

    EQUAL           shift and go to state 66
    $end            reduce using rule 43 (tipo -> INT .)
    RBRACE          reduce using rule 43 (tipo -> INT .)


state 40

    (50) tipoValue -> DOUBLE . EQUAL double
    (44) tipo -> DOUBLE .

    EQUAL           shift and go to state 67
    $end            reduce using rule 44 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 44 (tipo -> DOUBLE .)


state 41

    (51) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (52) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (53) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (54) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 68


state 42

    (11) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 11 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 11 (declararVariable -> VAR ID EQUAL value .)


state 43

    (12) declararVariable -> VAR ID EQUAL expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term

    $end            reduce using rule 12 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 12 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14


state 44

    (13) value -> string .

    $end            reduce using rule 13 (value -> string .)
    RBRACE          reduce using rule 13 (value -> string .)


state 45

    (14) value -> booleano .

    $end            reduce using rule 14 (value -> booleano .)
    RBRACE          reduce using rule 14 (value -> booleano .)


state 46

    (15) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (16) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (17) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (18) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 69


state 47

    (19) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 70


state 48

    (76) string -> STRING .

    $end            reduce using rule 76 (string -> STRING .)
    RBRACE          reduce using rule 76 (string -> STRING .)
    COMMA           reduce using rule 76 (string -> STRING .)
    RPAREN          reduce using rule 76 (string -> STRING .)


state 49

    (74) booleano -> TRUE .

    $end            reduce using rule 74 (booleano -> TRUE .)
    RBRACE          reduce using rule 74 (booleano -> TRUE .)
    COMMA           reduce using rule 74 (booleano -> TRUE .)
    RPAREN          reduce using rule 74 (booleano -> TRUE .)


state 50

    (75) booleano -> FALSE .

    $end            reduce using rule 75 (booleano -> FALSE .)
    RBRACE          reduce using rule 75 (booleano -> FALSE .)
    COMMA           reduce using rule 75 (booleano -> FALSE .)
    RPAREN          reduce using rule 75 (booleano -> FALSE .)


state 51

    (5) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 5 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 5 (declararConstante -> VAL ID COLON tipoValueCons .)


state 52

    (6) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 6 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 6 (declararConstante -> VAL ID COLON tipo .)


state 53

    (55) tipoValueCons -> STRING_TYPE . EQUAL string
    (46) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 71
    $end            reduce using rule 46 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 46 (tipo -> STRING_TYPE .)


state 54

    (56) tipoValueCons -> BOOL . EQUAL booleano
    (45) tipo -> BOOL .

    EQUAL           shift and go to state 72
    $end            reduce using rule 45 (tipo -> BOOL .)
    RBRACE          reduce using rule 45 (tipo -> BOOL .)


state 55

    (57) tipoValueCons -> INT . EQUAL int
    (43) tipo -> INT .

    EQUAL           shift and go to state 73
    $end            reduce using rule 43 (tipo -> INT .)
    RBRACE          reduce using rule 43 (tipo -> INT .)


state 56

    (58) tipoValueCons -> DOUBLE . EQUAL double
    (44) tipo -> DOUBLE .

    EQUAL           shift and go to state 74
    $end            reduce using rule 44 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 44 (tipo -> DOUBLE .)


state 57

    (7) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 7 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 7 (declararConstante -> VAL ID EQUAL valueCons .)


state 58

    (8) declararConstante -> VAL ID EQUAL expression .
    (60) expression -> expression . PLUS term
    (61) expression -> expression . MINUS term

    $end            reduce using rule 8 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 8 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14


state 59

    (40) valueCons -> string .

    $end            reduce using rule 40 (valueCons -> string .)
    RBRACE          reduce using rule 40 (valueCons -> string .)


state 60

    (41) valueCons -> booleano .

    $end            reduce using rule 41 (valueCons -> booleano .)
    RBRACE          reduce using rule 41 (valueCons -> booleano .)


state 61

    (42) valueCons -> tupla .

    $end            reduce using rule 42 (valueCons -> tupla .)
    RBRACE          reduce using rule 42 (valueCons -> tupla .)


state 62

    (59) tupla -> LPAREN . elementosInternos2 RPAREN
    (32) elementosInternos2 -> . int
    (33) elementosInternos2 -> . double
    (34) elementosInternos2 -> . booleano
    (35) elementosInternos2 -> . string
    (36) elementosInternos2 -> . int COMMA elementosInternos2
    (37) elementosInternos2 -> . double COMMA elementosInternos2
    (38) elementosInternos2 -> . booleano COMMA elementosInternos2
    (39) elementosInternos2 -> . string COMMA elementosInternos2
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    elementosInternos2             shift and go to state 75
    int                            shift and go to state 76
    double                         shift and go to state 77
    booleano                       shift and go to state 78
    string                         shift and go to state 79

state 63

    (66) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (60) expression -> . expression PLUS term
    (61) expression -> . expression MINUS term
    (62) expression -> . term
    (66) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (9) declararVariable -> . VAR ID COLON tipoValue
    (10) declararVariable -> . VAR ID COLON tipo
    (11) declararVariable -> . VAR ID EQUAL value
    (12) declararVariable -> . VAR ID EQUAL expression
    (5) declararConstante -> . VAL ID COLON tipoValueCons
    (6) declararConstante -> . VAL ID COLON tipo
    (7) declararConstante -> . VAL ID EQUAL valueCons
    (8) declararConstante -> . VAL ID EQUAL expression
    (63) term -> . term TIMES factor
    (64) term -> . term DIVIDE factor
    (65) term -> . factor
    (72) factor -> . INT_NUMBER
    (73) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 7
    VAR             shift and go to state 9
    VAL             shift and go to state 10
    INT_NUMBER      shift and go to state 11
    DOUBLE_NUMBER   shift and go to state 12

    factor                         shift and go to state 8
    cuerpo                         shift and go to state 82
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    term                           shift and go to state 6

state 64

    (47) tipoValue -> STRING_TYPE EQUAL . string
    (76) string -> . STRING

    STRING          shift and go to state 48

    string                         shift and go to state 83

state 65

    (48) tipoValue -> BOOL EQUAL . booleano
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE

    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    booleano                       shift and go to state 84

state 66

    (49) tipoValue -> INT EQUAL . int
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 85

state 67

    (50) tipoValue -> DOUBLE EQUAL . double
    (77) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 81

    double                         shift and go to state 86

state 68

    (51) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (52) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (53) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (54) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    BOOL            shift and go to state 89
    STRING_TYPE     shift and go to state 90


state 69

    (15) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (16) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (17) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (18) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 91


state 70

    (19) value -> ARRAY LPAREN . elementosInternos RPAREN
    (20) elementosInternos -> . elementosInternosInt
    (21) elementosInternos -> . elementosInternosDouble
    (22) elementosInternos -> . elementosInternosBool
    (23) elementosInternos -> . elementosInternosString
    (24) elementosInternosInt -> . int
    (25) elementosInternosInt -> . int COMMA elementosInternosInt
    (26) elementosInternosDouble -> . double
    (27) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (28) elementosInternosBool -> . booleano
    (29) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (30) elementosInternosString -> . string
    (31) elementosInternosString -> . string COMMA elementosInternosString
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    elementosInternos              shift and go to state 92
    elementosInternosInt           shift and go to state 93
    elementosInternosDouble        shift and go to state 94
    elementosInternosBool          shift and go to state 95
    elementosInternosString        shift and go to state 96
    int                            shift and go to state 97
    double                         shift and go to state 98
    booleano                       shift and go to state 99
    string                         shift and go to state 100

state 71

    (55) tipoValueCons -> STRING_TYPE EQUAL . string
    (76) string -> . STRING

    STRING          shift and go to state 48

    string                         shift and go to state 101

state 72

    (56) tipoValueCons -> BOOL EQUAL . booleano
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE

    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    booleano                       shift and go to state 102

state 73

    (57) tipoValueCons -> INT EQUAL . int
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 103

state 74

    (58) tipoValueCons -> DOUBLE EQUAL . double
    (77) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 81

    double                         shift and go to state 104

state 75

    (59) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 105


state 76

    (32) elementosInternos2 -> int .
    (36) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 32 (elementosInternos2 -> int .)
    COMMA           shift and go to state 106


state 77

    (33) elementosInternos2 -> double .
    (37) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 33 (elementosInternos2 -> double .)
    COMMA           shift and go to state 107


state 78

    (34) elementosInternos2 -> booleano .
    (38) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 34 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 108


state 79

    (35) elementosInternos2 -> string .
    (39) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 35 (elementosInternos2 -> string .)
    COMMA           shift and go to state 109


state 80

    (78) int -> INT_NUMBER .

    COMMA           reduce using rule 78 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 78 (int -> INT_NUMBER .)
    $end            reduce using rule 78 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 78 (int -> INT_NUMBER .)


state 81

    (77) double -> DOUBLE_NUMBER .

    COMMA           reduce using rule 77 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 77 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 77 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 77 (double -> DOUBLE_NUMBER .)


state 82

    (66) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 110


state 83

    (47) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 47 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 47 (tipoValue -> STRING_TYPE EQUAL string .)


state 84

    (48) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 48 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 48 (tipoValue -> BOOL EQUAL booleano .)


state 85

    (49) tipoValue -> INT EQUAL int .

    $end            reduce using rule 49 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 49 (tipoValue -> INT EQUAL int .)


state 86

    (50) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 50 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 50 (tipoValue -> DOUBLE EQUAL double .)


state 87

    (51) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 111


state 88

    (52) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 112


state 89

    (53) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 113


state 90

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 114


state 91

    (15) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (16) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (17) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (18) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 115
    DOUBLE          shift and go to state 116
    BOOL            shift and go to state 117
    STRING_TYPE     shift and go to state 118


state 92

    (19) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 119


state 93

    (20) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 20 (elementosInternos -> elementosInternosInt .)


state 94

    (21) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 21 (elementosInternos -> elementosInternosDouble .)


state 95

    (22) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 22 (elementosInternos -> elementosInternosBool .)


state 96

    (23) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 23 (elementosInternos -> elementosInternosString .)


state 97

    (24) elementosInternosInt -> int .
    (25) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 24 (elementosInternosInt -> int .)
    COMMA           shift and go to state 120


state 98

    (26) elementosInternosDouble -> double .
    (27) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 26 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 121


state 99

    (28) elementosInternosBool -> booleano .
    (29) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 28 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 122


state 100

    (30) elementosInternosString -> string .
    (31) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 30 (elementosInternosString -> string .)
    COMMA           shift and go to state 123


state 101

    (55) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 55 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 55 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 102

    (56) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 56 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 56 (tipoValueCons -> BOOL EQUAL booleano .)


state 103

    (57) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 57 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 57 (tipoValueCons -> INT EQUAL int .)


state 104

    (58) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 58 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 58 (tipoValueCons -> DOUBLE EQUAL double .)


state 105

    (59) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 59 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 59 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 106

    (36) elementosInternos2 -> int COMMA . elementosInternos2
    (32) elementosInternos2 -> . int
    (33) elementosInternos2 -> . double
    (34) elementosInternos2 -> . booleano
    (35) elementosInternos2 -> . string
    (36) elementosInternos2 -> . int COMMA elementosInternos2
    (37) elementosInternos2 -> . double COMMA elementosInternos2
    (38) elementosInternos2 -> . booleano COMMA elementosInternos2
    (39) elementosInternos2 -> . string COMMA elementosInternos2
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    int                            shift and go to state 76
    elementosInternos2             shift and go to state 124
    double                         shift and go to state 77
    booleano                       shift and go to state 78
    string                         shift and go to state 79

state 107

    (37) elementosInternos2 -> double COMMA . elementosInternos2
    (32) elementosInternos2 -> . int
    (33) elementosInternos2 -> . double
    (34) elementosInternos2 -> . booleano
    (35) elementosInternos2 -> . string
    (36) elementosInternos2 -> . int COMMA elementosInternos2
    (37) elementosInternos2 -> . double COMMA elementosInternos2
    (38) elementosInternos2 -> . booleano COMMA elementosInternos2
    (39) elementosInternos2 -> . string COMMA elementosInternos2
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    double                         shift and go to state 77
    elementosInternos2             shift and go to state 125
    int                            shift and go to state 76
    booleano                       shift and go to state 78
    string                         shift and go to state 79

state 108

    (38) elementosInternos2 -> booleano COMMA . elementosInternos2
    (32) elementosInternos2 -> . int
    (33) elementosInternos2 -> . double
    (34) elementosInternos2 -> . booleano
    (35) elementosInternos2 -> . string
    (36) elementosInternos2 -> . int COMMA elementosInternos2
    (37) elementosInternos2 -> . double COMMA elementosInternos2
    (38) elementosInternos2 -> . booleano COMMA elementosInternos2
    (39) elementosInternos2 -> . string COMMA elementosInternos2
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    booleano                       shift and go to state 78
    elementosInternos2             shift and go to state 126
    int                            shift and go to state 76
    double                         shift and go to state 77
    string                         shift and go to state 79

state 109

    (39) elementosInternos2 -> string COMMA . elementosInternos2
    (32) elementosInternos2 -> . int
    (33) elementosInternos2 -> . double
    (34) elementosInternos2 -> . booleano
    (35) elementosInternos2 -> . string
    (36) elementosInternos2 -> . int COMMA elementosInternos2
    (37) elementosInternos2 -> . double COMMA elementosInternos2
    (38) elementosInternos2 -> . booleano COMMA elementosInternos2
    (39) elementosInternos2 -> . string COMMA elementosInternos2
    (78) int -> . INT_NUMBER
    (77) double -> . DOUBLE_NUMBER
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE
    (76) string -> . STRING

    INT_NUMBER      shift and go to state 80
    DOUBLE_NUMBER   shift and go to state 81
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    STRING          shift and go to state 48

    string                         shift and go to state 79
    elementosInternos2             shift and go to state 127
    int                            shift and go to state 76
    double                         shift and go to state 77
    booleano                       shift and go to state 78

state 110

    (66) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 66 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 66 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 111

    (51) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 128


state 112

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 129


state 113

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 130


state 114

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 131


state 115

    (15) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 132


state 116

    (16) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 133


state 117

    (17) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 134


state 118

    (18) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 135


state 119

    (19) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 19 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 19 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 120

    (25) elementosInternosInt -> int COMMA . elementosInternosInt
    (24) elementosInternosInt -> . int
    (25) elementosInternosInt -> . int COMMA elementosInternosInt
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 97
    elementosInternosInt           shift and go to state 136

state 121

    (27) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (26) elementosInternosDouble -> . double
    (27) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (77) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 81

    double                         shift and go to state 98
    elementosInternosDouble        shift and go to state 137

state 122

    (29) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (28) elementosInternosBool -> . booleano
    (29) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (74) booleano -> . TRUE
    (75) booleano -> . FALSE

    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    booleano                       shift and go to state 99
    elementosInternosBool          shift and go to state 138

state 123

    (31) elementosInternosString -> string COMMA . elementosInternosString
    (30) elementosInternosString -> . string
    (31) elementosInternosString -> . string COMMA elementosInternosString
    (76) string -> . STRING

    STRING          shift and go to state 48

    string                         shift and go to state 100
    elementosInternosString        shift and go to state 139

state 124

    (36) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 36 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 125

    (37) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 37 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 126

    (38) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 38 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 127

    (39) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 39 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 128

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 140


state 129

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 141


state 130

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 142


state 131

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 143


state 132

    (15) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 144


state 133

    (16) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 145


state 134

    (17) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 146


state 135

    (18) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 147


state 136

    (25) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 25 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 137

    (27) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 27 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 138

    (29) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 29 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 139

    (31) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 31 (elementosInternosString -> string COMMA elementosInternosString .)


state 140

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 148


state 141

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 149


state 142

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 150


state 143

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 151


state 144

    (15) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 152

state 145

    (16) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 153

state 146

    (17) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 154

state 147

    (18) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 155

state 148

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 156


state 149

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 157


state 150

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 158


state 151

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 159


state 152

    (15) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 160


state 153

    (16) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 161


state 154

    (17) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 162


state 155

    (18) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 163


state 156

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 164


state 157

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 165


state 158

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 166


state 159

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 167


state 160

    (15) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 15 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 15 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 161

    (16) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 16 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 16 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 162

    (17) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 17 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 17 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 163

    (18) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 18 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 18 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 164

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 168


state 165

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 169


state 166

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 170


state 167

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 171


state 168

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 172


state 169

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 173


state 170

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 174


state 171

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 175


state 172

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 176

state 173

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 177

state 174

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 178

state 175

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (78) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 80

    int                            shift and go to state 179

state 176

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 180


state 177

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 181


state 178

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 182


state 179

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 183


state 180

    (51) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 51 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 51 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 181

    (52) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 52 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 52 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 182

    (53) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 53 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 53 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 183

    (54) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 54 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 54 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

