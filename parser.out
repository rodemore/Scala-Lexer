Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    EQ
    EQUALS
    INCREMENT
    ISEMPTY
    LM
    MOD
    OBJECT
    RETURN
    REVERSE
    SEMICOLON
    THIS
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> for
Rule 8     cuerpo -> funcionesPropias
Rule 9     cuerpo -> while
Rule 10    declararConstante -> VAL ID COLON tipoValueCons
Rule 11    declararConstante -> VAL ID COLON tipo
Rule 12    declararConstante -> VAL ID EQUAL valueCons
Rule 13    declararConstante -> VAL ID EQUAL expression
Rule 14    declararVariable -> VAR ID COLON tipoValue
Rule 15    declararVariable -> VAR ID COLON tipo
Rule 16    declararVariable -> VAR ID EQUAL value
Rule 17    declararVariable -> VAR ID EQUAL expression
Rule 18    value -> string
Rule 19    value -> booleano
Rule 20    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 22    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 23    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 24    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 25    value -> LIST LPAREN elementosInternos RPAREN
Rule 26    elementosInternos -> elementosInternosInt
Rule 27    elementosInternos -> elementosInternosDouble
Rule 28    elementosInternos -> elementosInternosBool
Rule 29    elementosInternos -> elementosInternosString
Rule 30    elementosInternosInt -> int
Rule 31    elementosInternosInt -> int COMMA elementosInternosInt
Rule 32    elementosInternosDouble -> double
Rule 33    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 34    elementosInternosBool -> booleano
Rule 35    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 36    elementosInternosString -> string
Rule 37    elementosInternosString -> string COMMA elementosInternosString
Rule 38    elementosInternos2 -> int
Rule 39    elementosInternos2 -> double
Rule 40    elementosInternos2 -> booleano
Rule 41    elementosInternos2 -> string
Rule 42    elementosInternos2 -> int COMMA elementosInternos2
Rule 43    elementosInternos2 -> double COMMA elementosInternos2
Rule 44    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 45    elementosInternos2 -> string COMMA elementosInternos2
Rule 46    valueCons -> string
Rule 47    valueCons -> booleano
Rule 48    valueCons -> tupla
Rule 49    tipo -> INT
Rule 50    tipo -> DOUBLE
Rule 51    tipo -> BOOL
Rule 52    tipo -> STRING_TYPE
Rule 53    tipoValue -> STRING_TYPE EQUAL string
Rule 54    tipoValue -> BOOL EQUAL booleano
Rule 55    tipoValue -> INT EQUAL int
Rule 56    tipoValue -> DOUBLE EQUAL double
Rule 57    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 58    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 59    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 61    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 62    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 63    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 65    tipoValueCons -> STRING_TYPE EQUAL string
Rule 66    tipoValueCons -> BOOL EQUAL booleano
Rule 67    tipoValueCons -> INT EQUAL int
Rule 68    tipoValueCons -> DOUBLE EQUAL double
Rule 69    tupla -> LPAREN elementosInternos2 RPAREN
Rule 70    funcionesTupla -> tuplaSwap
Rule 71    funcionesTupla -> tuplaToString
Rule 72    funcionesTupla -> tuplaProductIterator
Rule 73    tuplaSwap -> ID DOT SWAP
Rule 74    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 75    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 76    funcionesArray -> arrayHead
Rule 77    funcionesArray -> arrayTail
Rule 78    funcionesArray -> arrayLength
Rule 79    funcionesPropias -> INPUT LPAREN RPAREN
Rule 80    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 81    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 82    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 83    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 84    arrayHead -> ID DOT HEAD
Rule 85    arrayTail -> ID DOT TAIL
Rule 86    arrayLength -> ID DOT LENGTH
Rule 87    expression -> expression PLUS term
Rule 88    expression -> expression MINUS term
Rule 89    expression -> term
Rule 90    term -> term TIMES factor
Rule 91    term -> term DIVIDE factor
Rule 92    term -> factor
Rule 93    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 94    while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
Rule 95    whileclause -> factor comparacion factor
Rule 96    whileclause -> ID
Rule 97    for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE
Rule 98    comparacion -> GT
Rule 99    comparacion -> GE
Rule 100   comparacion -> LT
Rule 101   comparacion -> LE
Rule 102   comparacion -> EQUAL2
Rule 103   factor -> int
Rule 104   factor -> double
Rule 105   booleano -> TRUE
Rule 106   booleano -> FALSE
Rule 107   string -> STRING
Rule 108   double -> DOUBLE_NUMBER
Rule 109   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 20 21 22 23 24 57 57 58 58 59 59 60 60
BOOL                 : 22 51 54 59 59 63 66
CLASS                : 
COLON                : 10 11 14 15
COMMA                : 31 33 35 37 42 43 44 45
DECREMENT            : 
DEF                  : 
DIVIDE               : 91
DOT                  : 73 74 75 84 85 86
DOUBLE               : 21 50 56 58 58 62 68
DOUBLE_NUMBER        : 108
ELSE                 : 
EQ                   : 
EQUAL                : 12 13 16 17 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
EQUAL2               : 102
EQUALS               : 
FALSE                : 106
FOR                  : 97
GE                   : 99
GT                   : 98
HEAD                 : 84
ID                   : 10 11 12 13 14 15 16 17 73 74 75 82 84 85 86 96
IF                   : 93
INCREMENT            : 
INPUT                : 79
INT                  : 20 49 55 57 57 61 67
INT_NUMBER           : 109
ISEMPTY              : 
LBRACE               : 93 94 97 97
LBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
LE                   : 101
LENGTH               : 86
LIST                 : 25 61 61 62 62 63 63 64 64
LM                   : 
LPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 94 97
LT                   : 100
MINUS                : 88
MOD                  : 
NEW                  : 20 21 22 23 57 58 59 60
OBJECT               : 
PLUS                 : 87
PRINTLN              : 80 81 82 83
PRODUCTITERATOR      : 75
RBRACE               : 93 94 97
RBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
RETURN               : 
REVERSE              : 
RPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 94 97
SEMICOLON            : 
STRING               : 107
STRING_TYPE          : 23 52 53 60 60 64 65
SWAP                 : 73
TAIL                 : 85
THIS                 : 
TIMES                : 90
TOSTRING             : 74
TRUE                 : 105
VAL                  : 10 11 12 13
VAR                  : 14 15 16 17
WHILE                : 94
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 76
arrayLength          : 78
arrayTail            : 77
booleano             : 19 34 35 40 44 47 54 66 81
comparacion          : 93 95
cuerpo               : 93 94 0
declararConstante    : 4
declararVariable     : 3
double               : 32 33 39 43 56 68 104
elementosInternos    : 24 25 61 62 63 64
elementosInternos2   : 42 43 44 45 69
elementosInternosBool : 28 35
elementosInternosDouble : 27 33
elementosInternosInt : 26 31
elementosInternosString : 29 37
expression           : 1 13 17 83 87 88
factor               : 90 91 92 93 93 95 95
for                  : 7
funcionesArray       : 6
funcionesPropias     : 8
funcionesTupla       : 5
int                  : 20 21 22 23 30 31 38 42 55 57 58 59 60 67 103
sentencia            : 2
string               : 18 36 37 41 45 46 53 65 80
term                 : 87 88 89 90 91
tipo                 : 11 15
tipoValue            : 14
tipoValueCons        : 10
tupla                : 48
tuplaProductIterator : 72
tuplaSwap            : 70
tuplaToString        : 71
value                : 16
valueCons            : 12
while                : 9
whileclause          : 94

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (97) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (94) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    while                          shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 13
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 27
    double                         shift and go to state 28

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesArray .

    $end            reduce using rule 6 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesArray .)


state 8

    (7) cuerpo -> for .

    $end            reduce using rule 7 (cuerpo -> for .)
    RBRACE          reduce using rule 7 (cuerpo -> for .)


state 9

    (8) cuerpo -> funcionesPropias .

    $end            reduce using rule 8 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 8 (cuerpo -> funcionesPropias .)


state 10

    (9) cuerpo -> while .

    $end            reduce using rule 9 (cuerpo -> while .)
    RBRACE          reduce using rule 9 (cuerpo -> while .)


state 11

    (89) expression -> term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 89 (expression -> term .)
    MINUS           reduce using rule 89 (expression -> term .)
    $end            reduce using rule 89 (expression -> term .)
    RPAREN          reduce using rule 89 (expression -> term .)
    RBRACE          reduce using rule 89 (expression -> term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 12

    (93) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 35
    int                            shift and go to state 27
    double                         shift and go to state 28

state 13

    (92) term -> factor .

    TIMES           reduce using rule 92 (term -> factor .)
    DIVIDE          reduce using rule 92 (term -> factor .)
    PLUS            reduce using rule 92 (term -> factor .)
    MINUS           reduce using rule 92 (term -> factor .)
    $end            reduce using rule 92 (term -> factor .)
    RPAREN          reduce using rule 92 (term -> factor .)
    RBRACE          reduce using rule 92 (term -> factor .)


state 14

    (14) declararVariable -> VAR . ID COLON tipoValue
    (15) declararVariable -> VAR . ID COLON tipo
    (16) declararVariable -> VAR . ID EQUAL value
    (17) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 36


state 15

    (73) tuplaSwap -> ID . DOT SWAP
    (74) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (84) arrayHead -> ID . DOT HEAD
    (85) arrayTail -> ID . DOT TAIL
    (86) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 37


state 16

    (10) declararConstante -> VAL . ID COLON tipoValueCons
    (11) declararConstante -> VAL . ID COLON tipo
    (12) declararConstante -> VAL . ID EQUAL valueCons
    (13) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 38


state 17

    (70) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 70 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 70 (funcionesTupla -> tuplaSwap .)


state 18

    (71) funcionesTupla -> tuplaToString .

    $end            reduce using rule 71 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 71 (funcionesTupla -> tuplaToString .)


state 19

    (72) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 72 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 72 (funcionesTupla -> tuplaProductIterator .)


state 20

    (76) funcionesArray -> arrayHead .

    $end            reduce using rule 76 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 76 (funcionesArray -> arrayHead .)


state 21

    (77) funcionesArray -> arrayTail .

    $end            reduce using rule 77 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 77 (funcionesArray -> arrayTail .)


state 22

    (78) funcionesArray -> arrayLength .

    $end            reduce using rule 78 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 78 (funcionesArray -> arrayLength .)


state 23

    (97) for -> FOR . LPAREN RPAREN LBRACE LBRACE RBRACE

    LPAREN          shift and go to state 39


state 24

    (79) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 40


state 25

    (80) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (81) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (82) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (83) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 41


state 26

    (94) while -> WHILE . LPAREN whileclause RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 42


state 27

    (103) factor -> int .

    TIMES           reduce using rule 103 (factor -> int .)
    DIVIDE          reduce using rule 103 (factor -> int .)
    PLUS            reduce using rule 103 (factor -> int .)
    MINUS           reduce using rule 103 (factor -> int .)
    $end            reduce using rule 103 (factor -> int .)
    GT              reduce using rule 103 (factor -> int .)
    GE              reduce using rule 103 (factor -> int .)
    LT              reduce using rule 103 (factor -> int .)
    LE              reduce using rule 103 (factor -> int .)
    EQUAL2          reduce using rule 103 (factor -> int .)
    RPAREN          reduce using rule 103 (factor -> int .)
    RBRACE          reduce using rule 103 (factor -> int .)
    LBRACE          reduce using rule 103 (factor -> int .)


state 28

    (104) factor -> double .

    TIMES           reduce using rule 104 (factor -> double .)
    DIVIDE          reduce using rule 104 (factor -> double .)
    PLUS            reduce using rule 104 (factor -> double .)
    MINUS           reduce using rule 104 (factor -> double .)
    $end            reduce using rule 104 (factor -> double .)
    GT              reduce using rule 104 (factor -> double .)
    GE              reduce using rule 104 (factor -> double .)
    LT              reduce using rule 104 (factor -> double .)
    LE              reduce using rule 104 (factor -> double .)
    EQUAL2          reduce using rule 104 (factor -> double .)
    RPAREN          reduce using rule 104 (factor -> double .)
    RBRACE          reduce using rule 104 (factor -> double .)
    LBRACE          reduce using rule 104 (factor -> double .)


state 29

    (109) int -> INT_NUMBER .

    TIMES           reduce using rule 109 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 109 (int -> INT_NUMBER .)
    PLUS            reduce using rule 109 (int -> INT_NUMBER .)
    MINUS           reduce using rule 109 (int -> INT_NUMBER .)
    $end            reduce using rule 109 (int -> INT_NUMBER .)
    GT              reduce using rule 109 (int -> INT_NUMBER .)
    GE              reduce using rule 109 (int -> INT_NUMBER .)
    LT              reduce using rule 109 (int -> INT_NUMBER .)
    LE              reduce using rule 109 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 109 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 109 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 109 (int -> INT_NUMBER .)
    LBRACE          reduce using rule 109 (int -> INT_NUMBER .)
    COMMA           reduce using rule 109 (int -> INT_NUMBER .)


state 30

    (108) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 108 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 108 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 108 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 108 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 108 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 108 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 108 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 108 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 108 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 108 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 108 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 108 (double -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 108 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 108 (double -> DOUBLE_NUMBER .)


state 31

    (87) expression -> expression PLUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    term                           shift and go to state 43
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28

state 32

    (88) expression -> expression MINUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    term                           shift and go to state 44
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28

state 33

    (90) term -> term TIMES . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 45
    int                            shift and go to state 27
    double                         shift and go to state 28

state 34

    (91) term -> term DIVIDE . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 46
    int                            shift and go to state 27
    double                         shift and go to state 28

state 35

    (93) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (98) comparacion -> . GT
    (99) comparacion -> . GE
    (100) comparacion -> . LT
    (101) comparacion -> . LE
    (102) comparacion -> . EQUAL2

    GT              shift and go to state 48
    GE              shift and go to state 49
    LT              shift and go to state 50
    LE              shift and go to state 51
    EQUAL2          shift and go to state 52

    comparacion                    shift and go to state 47

state 36

    (14) declararVariable -> VAR ID . COLON tipoValue
    (15) declararVariable -> VAR ID . COLON tipo
    (16) declararVariable -> VAR ID . EQUAL value
    (17) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 53
    EQUAL           shift and go to state 54


state 37

    (73) tuplaSwap -> ID DOT . SWAP
    (74) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (84) arrayHead -> ID DOT . HEAD
    (85) arrayTail -> ID DOT . TAIL
    (86) arrayLength -> ID DOT . LENGTH

    SWAP            shift and go to state 55
    TOSTRING        shift and go to state 56
    PRODUCTITERATOR shift and go to state 57
    HEAD            shift and go to state 58
    TAIL            shift and go to state 59
    LENGTH          shift and go to state 60


state 38

    (10) declararConstante -> VAL ID . COLON tipoValueCons
    (11) declararConstante -> VAL ID . COLON tipo
    (12) declararConstante -> VAL ID . EQUAL valueCons
    (13) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 61
    EQUAL           shift and go to state 62


state 39

    (97) for -> FOR LPAREN . RPAREN LBRACE LBRACE RBRACE

    RPAREN          shift and go to state 63


state 40

    (79) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 64


state 41

    (80) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (81) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (82) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (83) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (107) string -> . STRING
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    ID              shift and go to state 67
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    string                         shift and go to state 65
    booleano                       shift and go to state 66
    expression                     shift and go to state 68
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28

state 42

    (94) while -> WHILE LPAREN . whileclause RPAREN LBRACE cuerpo RBRACE
    (95) whileclause -> . factor comparacion factor
    (96) whileclause -> . ID
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    ID              shift and go to state 74
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    whileclause                    shift and go to state 72
    factor                         shift and go to state 73
    int                            shift and go to state 27
    double                         shift and go to state 28

state 43

    (87) expression -> expression PLUS term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 87 (expression -> expression PLUS term .)
    MINUS           reduce using rule 87 (expression -> expression PLUS term .)
    $end            reduce using rule 87 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 87 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 87 (expression -> expression PLUS term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 44

    (88) expression -> expression MINUS term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 88 (expression -> expression MINUS term .)
    MINUS           reduce using rule 88 (expression -> expression MINUS term .)
    $end            reduce using rule 88 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 88 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 88 (expression -> expression MINUS term .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 45

    (90) term -> term TIMES factor .

    TIMES           reduce using rule 90 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 90 (term -> term TIMES factor .)
    PLUS            reduce using rule 90 (term -> term TIMES factor .)
    MINUS           reduce using rule 90 (term -> term TIMES factor .)
    $end            reduce using rule 90 (term -> term TIMES factor .)
    RPAREN          reduce using rule 90 (term -> term TIMES factor .)
    RBRACE          reduce using rule 90 (term -> term TIMES factor .)


state 46

    (91) term -> term DIVIDE factor .

    TIMES           reduce using rule 91 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 91 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 91 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 91 (term -> term DIVIDE factor .)
    $end            reduce using rule 91 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 91 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 91 (term -> term DIVIDE factor .)


state 47

    (93) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 75
    int                            shift and go to state 27
    double                         shift and go to state 28

state 48

    (98) comparacion -> GT .

    INT_NUMBER      reduce using rule 98 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 98 (comparacion -> GT .)


state 49

    (99) comparacion -> GE .

    INT_NUMBER      reduce using rule 99 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 99 (comparacion -> GE .)


state 50

    (100) comparacion -> LT .

    INT_NUMBER      reduce using rule 100 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 100 (comparacion -> LT .)


state 51

    (101) comparacion -> LE .

    INT_NUMBER      reduce using rule 101 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 101 (comparacion -> LE .)


state 52

    (102) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 102 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 102 (comparacion -> EQUAL2 .)


state 53

    (14) declararVariable -> VAR ID COLON . tipoValue
    (15) declararVariable -> VAR ID COLON . tipo
    (53) tipoValue -> . STRING_TYPE EQUAL string
    (54) tipoValue -> . BOOL EQUAL booleano
    (55) tipoValue -> . INT EQUAL int
    (56) tipoValue -> . DOUBLE EQUAL double
    (57) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (61) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 78
    BOOL            shift and go to state 79
    INT             shift and go to state 80
    DOUBLE          shift and go to state 81
    ARRAY           shift and go to state 82
    LIST            shift and go to state 83

    tipoValue                      shift and go to state 76
    tipo                           shift and go to state 77

state 54

    (16) declararVariable -> VAR ID EQUAL . value
    (17) declararVariable -> VAR ID EQUAL . expression
    (18) value -> . string
    (19) value -> . booleano
    (20) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (24) value -> . ARRAY LPAREN elementosInternos RPAREN
    (25) value -> . LIST LPAREN elementosInternos RPAREN
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (107) string -> . STRING
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 88
    ARRAY           shift and go to state 89
    LIST            shift and go to state 90
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    value                          shift and go to state 84
    expression                     shift and go to state 85
    string                         shift and go to state 86
    booleano                       shift and go to state 87
    int                            shift and go to state 27
    term                           shift and go to state 11
    factor                         shift and go to state 13
    double                         shift and go to state 28

state 55

    (73) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 73 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 73 (tuplaSwap -> ID DOT SWAP .)


state 56

    (74) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 91


state 57

    (75) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 75 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 75 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 58

    (84) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 84 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 84 (arrayHead -> ID DOT HEAD .)


state 59

    (85) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 85 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 85 (arrayTail -> ID DOT TAIL .)


state 60

    (86) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 86 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 86 (arrayLength -> ID DOT LENGTH .)


state 61

    (10) declararConstante -> VAL ID COLON . tipoValueCons
    (11) declararConstante -> VAL ID COLON . tipo
    (65) tipoValueCons -> . STRING_TYPE EQUAL string
    (66) tipoValueCons -> . BOOL EQUAL booleano
    (67) tipoValueCons -> . INT EQUAL int
    (68) tipoValueCons -> . DOUBLE EQUAL double
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 94
    BOOL            shift and go to state 95
    INT             shift and go to state 96
    DOUBLE          shift and go to state 97

    tipoValueCons                  shift and go to state 92
    tipo                           shift and go to state 93

state 62

    (12) declararConstante -> VAL ID EQUAL . valueCons
    (13) declararConstante -> VAL ID EQUAL . expression
    (46) valueCons -> . string
    (47) valueCons -> . booleano
    (48) valueCons -> . tupla
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (107) string -> . STRING
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (69) tupla -> . LPAREN elementosInternos2 RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    LPAREN          shift and go to state 103
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    valueCons                      shift and go to state 98
    expression                     shift and go to state 99
    string                         shift and go to state 100
    booleano                       shift and go to state 101
    tupla                          shift and go to state 102
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28

state 63

    (97) for -> FOR LPAREN RPAREN . LBRACE LBRACE RBRACE

    LBRACE          shift and go to state 104


state 64

    (79) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 79 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 79 (funcionesPropias -> INPUT LPAREN RPAREN .)


state 65

    (80) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 105


state 66

    (81) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 106


state 67

    (82) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 107


state 68

    (83) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 69

    (107) string -> STRING .

    RPAREN          reduce using rule 107 (string -> STRING .)
    $end            reduce using rule 107 (string -> STRING .)
    RBRACE          reduce using rule 107 (string -> STRING .)
    COMMA           reduce using rule 107 (string -> STRING .)


state 70

    (105) booleano -> TRUE .

    RPAREN          reduce using rule 105 (booleano -> TRUE .)
    $end            reduce using rule 105 (booleano -> TRUE .)
    RBRACE          reduce using rule 105 (booleano -> TRUE .)
    COMMA           reduce using rule 105 (booleano -> TRUE .)


state 71

    (106) booleano -> FALSE .

    RPAREN          reduce using rule 106 (booleano -> FALSE .)
    $end            reduce using rule 106 (booleano -> FALSE .)
    RBRACE          reduce using rule 106 (booleano -> FALSE .)
    COMMA           reduce using rule 106 (booleano -> FALSE .)


state 72

    (94) while -> WHILE LPAREN whileclause . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 109


state 73

    (95) whileclause -> factor . comparacion factor
    (98) comparacion -> . GT
    (99) comparacion -> . GE
    (100) comparacion -> . LT
    (101) comparacion -> . LE
    (102) comparacion -> . EQUAL2

    GT              shift and go to state 48
    GE              shift and go to state 49
    LT              shift and go to state 50
    LE              shift and go to state 51
    EQUAL2          shift and go to state 52

    comparacion                    shift and go to state 110

state 74

    (96) whileclause -> ID .

    RPAREN          reduce using rule 96 (whileclause -> ID .)


state 75

    (93) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 111


state 76

    (14) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 14 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 14 (declararVariable -> VAR ID COLON tipoValue .)


state 77

    (15) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 15 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 15 (declararVariable -> VAR ID COLON tipo .)


state 78

    (53) tipoValue -> STRING_TYPE . EQUAL string
    (52) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 112
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)


state 79

    (54) tipoValue -> BOOL . EQUAL booleano
    (51) tipo -> BOOL .

    EQUAL           shift and go to state 113
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)


state 80

    (55) tipoValue -> INT . EQUAL int
    (49) tipo -> INT .

    EQUAL           shift and go to state 114
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)


state 81

    (56) tipoValue -> DOUBLE . EQUAL double
    (50) tipo -> DOUBLE .

    EQUAL           shift and go to state 115
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)


state 82

    (57) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 116


state 83

    (61) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    LBRACK          shift and go to state 117


state 84

    (16) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 16 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 16 (declararVariable -> VAR ID EQUAL value .)


state 85

    (17) declararVariable -> VAR ID EQUAL expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 17 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 17 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 86

    (18) value -> string .

    $end            reduce using rule 18 (value -> string .)
    RBRACE          reduce using rule 18 (value -> string .)


state 87

    (19) value -> booleano .

    $end            reduce using rule 19 (value -> booleano .)
    RBRACE          reduce using rule 19 (value -> booleano .)


state 88

    (20) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 118


state 89

    (24) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 119


state 90

    (25) value -> LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 120


state 91

    (74) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 121


state 92

    (10) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 10 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 10 (declararConstante -> VAL ID COLON tipoValueCons .)


state 93

    (11) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 11 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 11 (declararConstante -> VAL ID COLON tipo .)


state 94

    (65) tipoValueCons -> STRING_TYPE . EQUAL string
    (52) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 122
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)


state 95

    (66) tipoValueCons -> BOOL . EQUAL booleano
    (51) tipo -> BOOL .

    EQUAL           shift and go to state 123
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)


state 96

    (67) tipoValueCons -> INT . EQUAL int
    (49) tipo -> INT .

    EQUAL           shift and go to state 124
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)


state 97

    (68) tipoValueCons -> DOUBLE . EQUAL double
    (50) tipo -> DOUBLE .

    EQUAL           shift and go to state 125
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)


state 98

    (12) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 12 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 12 (declararConstante -> VAL ID EQUAL valueCons .)


state 99

    (13) declararConstante -> VAL ID EQUAL expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 13 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 13 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 100

    (46) valueCons -> string .

    $end            reduce using rule 46 (valueCons -> string .)
    RBRACE          reduce using rule 46 (valueCons -> string .)


state 101

    (47) valueCons -> booleano .

    $end            reduce using rule 47 (valueCons -> booleano .)
    RBRACE          reduce using rule 47 (valueCons -> booleano .)


state 102

    (48) valueCons -> tupla .

    $end            reduce using rule 48 (valueCons -> tupla .)
    RBRACE          reduce using rule 48 (valueCons -> tupla .)


state 103

    (69) tupla -> LPAREN . elementosInternos2 RPAREN
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos2             shift and go to state 126
    int                            shift and go to state 127
    double                         shift and go to state 128
    booleano                       shift and go to state 129
    string                         shift and go to state 130

state 104

    (97) for -> FOR LPAREN RPAREN LBRACE . LBRACE RBRACE

    LBRACE          shift and go to state 131


state 105

    (80) funcionesPropias -> PRINTLN LPAREN string RPAREN .

    $end            reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)


state 106

    (81) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .

    $end            reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)


state 107

    (82) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

    $end            reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)


state 108

    (83) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

    $end            reduce using rule 83 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 83 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)


state 109

    (94) while -> WHILE LPAREN whileclause RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 132


state 110

    (95) whileclause -> factor comparacion . factor
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 133
    int                            shift and go to state 27
    double                         shift and go to state 28

state 111

    (93) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (97) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (94) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 13
    cuerpo                         shift and go to state 134
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    while                          shift and go to state 10
    term                           shift and go to state 11
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 27
    double                         shift and go to state 28

state 112

    (53) tipoValue -> STRING_TYPE EQUAL . string
    (107) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 135

state 113

    (54) tipoValue -> BOOL EQUAL . booleano
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 136

state 114

    (55) tipoValue -> INT EQUAL . int
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 137

state 115

    (56) tipoValue -> DOUBLE EQUAL . double
    (108) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 30

    double                         shift and go to state 138

state 116

    (57) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 139
    DOUBLE          shift and go to state 140
    BOOL            shift and go to state 141
    STRING_TYPE     shift and go to state 142


state 117

    (61) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    INT             shift and go to state 143
    DOUBLE          shift and go to state 144
    BOOL            shift and go to state 145
    STRING_TYPE     shift and go to state 146


state 118

    (20) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 147


state 119

    (24) value -> ARRAY LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 148
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 120

    (25) value -> LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 157
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 121

    (74) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 74 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 74 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 122

    (65) tipoValueCons -> STRING_TYPE EQUAL . string
    (107) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 158

state 123

    (66) tipoValueCons -> BOOL EQUAL . booleano
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 159

state 124

    (67) tipoValueCons -> INT EQUAL . int
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 160

state 125

    (68) tipoValueCons -> DOUBLE EQUAL . double
    (108) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 30

    double                         shift and go to state 161

state 126

    (69) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 162


state 127

    (38) elementosInternos2 -> int .
    (42) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 38 (elementosInternos2 -> int .)
    COMMA           shift and go to state 163


state 128

    (39) elementosInternos2 -> double .
    (43) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 39 (elementosInternos2 -> double .)
    COMMA           shift and go to state 164


state 129

    (40) elementosInternos2 -> booleano .
    (44) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 40 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 165


state 130

    (41) elementosInternos2 -> string .
    (45) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 41 (elementosInternos2 -> string .)
    COMMA           shift and go to state 166


state 131

    (97) for -> FOR LPAREN RPAREN LBRACE LBRACE . RBRACE

    RBRACE          shift and go to state 167


state 132

    (94) while -> WHILE LPAREN whileclause RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (97) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (94) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (103) factor -> . int
    (104) factor -> . double
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    cuerpo                         shift and go to state 168
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    while                          shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 13
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 27
    double                         shift and go to state 28

state 133

    (95) whileclause -> factor comparacion factor .

    RPAREN          reduce using rule 95 (whileclause -> factor comparacion factor .)


state 134

    (93) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 169


state 135

    (53) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 53 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 53 (tipoValue -> STRING_TYPE EQUAL string .)


state 136

    (54) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 54 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 54 (tipoValue -> BOOL EQUAL booleano .)


state 137

    (55) tipoValue -> INT EQUAL int .

    $end            reduce using rule 55 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 55 (tipoValue -> INT EQUAL int .)


state 138

    (56) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 56 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 56 (tipoValue -> DOUBLE EQUAL double .)


state 139

    (57) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 170


state 140

    (58) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 171


state 141

    (59) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 172


state 142

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 173


state 143

    (61) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 174


state 144

    (62) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 175


state 145

    (63) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 176


state 146

    (64) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 177


state 147

    (20) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 178
    DOUBLE          shift and go to state 179
    BOOL            shift and go to state 180
    STRING_TYPE     shift and go to state 181


state 148

    (24) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 182


state 149

    (26) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 26 (elementosInternos -> elementosInternosInt .)


state 150

    (27) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 27 (elementosInternos -> elementosInternosDouble .)


state 151

    (28) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 28 (elementosInternos -> elementosInternosBool .)


state 152

    (29) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 29 (elementosInternos -> elementosInternosString .)


state 153

    (30) elementosInternosInt -> int .
    (31) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 30 (elementosInternosInt -> int .)
    COMMA           shift and go to state 183


state 154

    (32) elementosInternosDouble -> double .
    (33) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 32 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 184


state 155

    (34) elementosInternosBool -> booleano .
    (35) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 34 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 185


state 156

    (36) elementosInternosString -> string .
    (37) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 36 (elementosInternosString -> string .)
    COMMA           shift and go to state 186


state 157

    (25) value -> LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 187


state 158

    (65) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 65 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 65 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 159

    (66) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 66 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 66 (tipoValueCons -> BOOL EQUAL booleano .)


state 160

    (67) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 67 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 67 (tipoValueCons -> INT EQUAL int .)


state 161

    (68) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 68 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 68 (tipoValueCons -> DOUBLE EQUAL double .)


state 162

    (69) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 69 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 69 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 163

    (42) elementosInternos2 -> int COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    int                            shift and go to state 127
    elementosInternos2             shift and go to state 188
    double                         shift and go to state 128
    booleano                       shift and go to state 129
    string                         shift and go to state 130

state 164

    (43) elementosInternos2 -> double COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    double                         shift and go to state 128
    elementosInternos2             shift and go to state 189
    int                            shift and go to state 127
    booleano                       shift and go to state 129
    string                         shift and go to state 130

state 165

    (44) elementosInternos2 -> booleano COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    booleano                       shift and go to state 129
    elementosInternos2             shift and go to state 190
    int                            shift and go to state 127
    double                         shift and go to state 128
    string                         shift and go to state 130

state 166

    (45) elementosInternos2 -> string COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    string                         shift and go to state 130
    elementosInternos2             shift and go to state 191
    int                            shift and go to state 127
    double                         shift and go to state 128
    booleano                       shift and go to state 129

state 167

    (97) for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .

    $end            reduce using rule 97 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)
    RBRACE          reduce using rule 97 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)


state 168

    (94) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 192


state 169

    (93) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 93 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 93 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 170

    (57) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 193


state 171

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 194


state 172

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 195


state 173

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 196


state 174

    (61) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 197


state 175

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 198


state 176

    (63) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 199


state 177

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 200


state 178

    (20) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 201


state 179

    (21) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 202


state 180

    (22) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 203


state 181

    (23) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 204


state 182

    (24) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 24 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 24 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 183

    (31) elementosInternosInt -> int COMMA . elementosInternosInt
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 153
    elementosInternosInt           shift and go to state 205

state 184

    (33) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (108) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 30

    double                         shift and go to state 154
    elementosInternosDouble        shift and go to state 206

state 185

    (35) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 155
    elementosInternosBool          shift and go to state 207

state 186

    (37) elementosInternosString -> string COMMA . elementosInternosString
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (107) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 156
    elementosInternosString        shift and go to state 208

state 187

    (25) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 25 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 25 (value -> LIST LPAREN elementosInternos RPAREN .)


state 188

    (42) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 42 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 189

    (43) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 43 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 190

    (44) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 44 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 191

    (45) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 45 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 192

    (94) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 94 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 94 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)


state 193

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 209


state 194

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 210


state 195

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 211


state 196

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 212


state 197

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 213


state 198

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 214


state 199

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 215


state 200

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 216


state 201

    (20) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 217


state 202

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 218


state 203

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 219


state 204

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 220


state 205

    (31) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 31 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 206

    (33) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 33 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 207

    (35) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 35 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 208

    (37) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 37 (elementosInternosString -> string COMMA elementosInternosString .)


state 209

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 221


state 210

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 222


state 211

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 223


state 212

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 224


state 213

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 225


state 214

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 226


state 215

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 227


state 216

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 228


state 217

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 229

state 218

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 230

state 219

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 231

state 220

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 232

state 221

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 233


state 222

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 234


state 223

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 235


state 224

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 236


state 225

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 237
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 226

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 238
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 227

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 239
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 228

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) int -> . INT_NUMBER
    (108) double -> . DOUBLE_NUMBER
    (105) booleano -> . TRUE
    (106) booleano -> . FALSE
    (107) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 240
    elementosInternosInt           shift and go to state 149
    elementosInternosDouble        shift and go to state 150
    elementosInternosBool          shift and go to state 151
    elementosInternosString        shift and go to state 152
    int                            shift and go to state 153
    double                         shift and go to state 154
    booleano                       shift and go to state 155
    string                         shift and go to state 156

state 229

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 241


state 230

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 242


state 231

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 243


state 232

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 244


state 233

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 245


state 234

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 246


state 235

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 247


state 236

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 248


state 237

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 249


state 238

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 250


state 239

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 251


state 240

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 252


state 241

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 20 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 20 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 242

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 21 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 21 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 243

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 22 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 22 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 244

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 23 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 23 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 245

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 253


state 246

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 254


state 247

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 255


state 248

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 256


state 249

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 61 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 61 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 250

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 62 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 62 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 251

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 63 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 63 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 252

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 64 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 64 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 253

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 257


state 254

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 258


state 255

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 259


state 256

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 260


state 257

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 261

state 258

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 262

state 259

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 263

state 260

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (109) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 264

state 261

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 265


state 262

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 266


state 263

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 267


state 264

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 268


state 265

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 57 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 266

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 58 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 58 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 267

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 59 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 59 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 268

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 60 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 60 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

