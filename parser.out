Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    EQ
    EQUALS
    FOR
    INCREMENT
    ISEMPTY
    MOD
    OBJECT
    PRINTLN
    RETURN
    REVERSE
    SEMICOLON
    THIS
    VAL
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> funcionesTupla
Rule 5     cuerpo -> funcionesArray
Rule 6     declararVariable -> VAR ID COLON tipoValue
Rule 7     declararVariable -> VAR ID COLON tipo
Rule 8     declararVariable -> VAR ID EQUAL value
Rule 9     declararVariable -> VAR ID EQUAL expression
Rule 10    value -> string
Rule 11    value -> booleano
Rule 12    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 13    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 14    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 15    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 16    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 17    value -> LIST LPAREN elementosInternos RPAREN
Rule 18    elementosInternos -> elementosInternosInt
Rule 19    elementosInternos -> elementosInternosDouble
Rule 20    elementosInternos -> elementosInternosBool
Rule 21    elementosInternos -> elementosInternosString
Rule 22    elementosInternosInt -> int
Rule 23    elementosInternosInt -> int COMMA elementosInternosInt
Rule 24    elementosInternosDouble -> double
Rule 25    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 26    elementosInternosBool -> booleano
Rule 27    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 28    elementosInternosString -> string
Rule 29    elementosInternosString -> string COMMA elementosInternosString
Rule 30    elementosInternos2 -> int
Rule 31    elementosInternos2 -> double
Rule 32    elementosInternos2 -> booleano
Rule 33    elementosInternos2 -> string
Rule 34    elementosInternos2 -> int COMMA elementosInternos2
Rule 35    elementosInternos2 -> double COMMA elementosInternos2
Rule 36    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 37    elementosInternos2 -> string COMMA elementosInternos2
Rule 38    valueCons -> string
Rule 39    valueCons -> booleano
Rule 40    valueCons -> tupla
Rule 41    tipo -> INT
Rule 42    tipo -> DOUBLE
Rule 43    tipo -> BOOL
Rule 44    tipo -> STRING_TYPE
Rule 45    value -> NEW ARRAY LBRACK tipo RBRACK LPAREN int RPAREN
Rule 46    tipoValue -> STRING_TYPE EQUAL string
Rule 47    tipoValue -> BOOL EQUAL booleano
Rule 48    tipoValue -> INT EQUAL int
Rule 49    tipoValue -> DOUBLE EQUAL double
Rule 50    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 51    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 52    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 53    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 54    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 55    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 56    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 57    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN
Rule 58    tipoValueCons -> STRING_TYPE EQUAL string
Rule 59    tipoValueCons -> BOOL EQUAL booleano
Rule 60    tipoValueCons -> INT EQUAL int
Rule 61    tipoValueCons -> DOUBLE EQUAL double
Rule 62    tupla -> LPAREN elementosInternos2 RPAREN
Rule 63    funcionesTupla -> tuplaSwap
Rule 64    funcionesTupla -> tuplaToString
Rule 65    funcionesTupla -> tuplaProductIterator
Rule 66    tuplaSwap -> ID DOT SWAP
Rule 67    tuplaToString -> ID DOT TOSTRING
Rule 68    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 69    funcionesArray -> arrayHead
Rule 70    funcionesArray -> arrayTail
Rule 71    funcionesArray -> arrayLength
Rule 72    arrayHead -> ID DOT HEAD
Rule 73    arrayTail -> ID DOT TAIL
Rule 74    arrayLength -> ID DOT LENGTH
Rule 75    expression -> expression PLUS term
Rule 76    expression -> expression MINUS term
Rule 77    expression -> term
Rule 78    term -> term TIMES factor
Rule 79    term -> term DIVIDE factor
Rule 80    term -> factor
Rule 81    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 82    comparacion -> GT
Rule 83    comparacion -> GE
Rule 84    comparacion -> LT
Rule 85    comparacion -> LE
Rule 86    comparacion -> EQUAL2
Rule 87    factor -> INT_NUMBER
Rule 88    factor -> DOUBLE_NUMBER
Rule 89    booleano -> TRUE
Rule 90    booleano -> FALSE
Rule 91    string -> STRING
Rule 92    double -> DOUBLE_NUMBER
Rule 93    int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 12 13 14 15 16 45 50 50 51 51 52 52 53 53
BOOL                 : 14 43 47 52 52 56 59
CLASS                : 
COLON                : 6 7
COMMA                : 23 25 27 29 34 35 36 37
DECREMENT            : 
DEF                  : 
DIVIDE               : 79
DOT                  : 66 67 68 72 73 74
DOUBLE               : 13 42 49 51 51 55 61
DOUBLE_NUMBER        : 88 92
ELSE                 : 
EQ                   : 
EQUAL                : 8 9 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
EQUAL2               : 86
EQUALS               : 
FALSE                : 90
FOR                  : 
GE                   : 83
GT                   : 82
HEAD                 : 72
ID                   : 6 7 8 9 66 67 68 72 73 74
IF                   : 81
INCREMENT            : 
INT                  : 12 41 48 50 50 54 60
INT_NUMBER           : 87 93
ISEMPTY              : 
LBRACE               : 81
LBRACK               : 12 13 14 15 45 50 50 51 51 52 52 53 53 54 55 56 57
LE                   : 85
LENGTH               : 74
LIST                 : 17 54 54 55 55 56 56 57
LPAREN               : 12 13 14 15 16 17 45 50 51 52 53 54 55 56 57 62
LT                   : 84
MINUS                : 76
MOD                  : 
NEW                  : 12 13 14 15 45 50 51 52 53
OBJECT               : 
PLUS                 : 75
PRINTLN              : 
PRODUCTITERATOR      : 68
RBRACE               : 81
RBRACK               : 12 13 14 15 45 50 50 51 51 52 52 53 53 54 55 56 57
RETURN               : 
REVERSE              : 
RPAREN               : 12 13 14 15 16 17 45 50 51 52 53 54 55 56 57 62
SEMICOLON            : 
STRING               : 91
STRING_TYPE          : 15 44 46 53 53 57 57 58
SWAP                 : 66
TAIL                 : 73
THIS                 : 
TIMES                : 78
TOSTRING             : 67
TRUE                 : 89
VAL                  : 
VAR                  : 6 7 8 9
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 69
arrayLength          : 71
arrayTail            : 70
booleano             : 11 26 27 32 36 39 47 59
comparacion          : 81
cuerpo               : 81 0
declararVariable     : 3
double               : 24 25 31 35 49 61
elementosInternos    : 16 17 54 55 56 57
elementosInternos2   : 34 35 36 37 62
elementosInternosBool : 20 27
elementosInternosDouble : 19 25
elementosInternosInt : 18 23
elementosInternosString : 21 29
expression           : 1 9 75 76
factor               : 78 79 80 81 81
funcionesArray       : 5
funcionesTupla       : 4
int                  : 12 13 14 15 22 23 30 34 45 48 50 51 52 53 60
sentencia            : 2
string               : 10 28 29 33 37 38 46 58
term                 : 75 76 77 78 79
tipo                 : 7 45
tipoValue            : 6
tipoValueCons        : 
tupla                : 40
tuplaProductIterator : 65
tuplaSwap            : 63
tuplaToString        : 64
value                : 8
valueCons            : 

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . funcionesTupla
    (5) cuerpo -> . funcionesArray
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (81) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (6) declararVariable -> . VAR ID COLON tipoValue
    (7) declararVariable -> . VAR ID COLON tipo
    (8) declararVariable -> . VAR ID EQUAL value
    (9) declararVariable -> . VAR ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (72) arrayHead -> . ID DOT HEAD
    (73) arrayTail -> . ID DOT TAIL
    (74) arrayLength -> . ID DOT LENGTH
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 11
    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    funcionesTupla                 shift and go to state 5
    funcionesArray                 shift and go to state 6
    term                           shift and go to state 7
    factor                         shift and go to state 9
    tuplaSwap                      shift and go to state 12
    tuplaToString                  shift and go to state 13
    tuplaProductIterator           shift and go to state 14
    arrayHead                      shift and go to state 15
    arrayTail                      shift and go to state 16
    arrayLength                    shift and go to state 17

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (75) expression -> expression . PLUS term
    (76) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> funcionesTupla .

    $end            reduce using rule 4 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 4 (cuerpo -> funcionesTupla .)


state 6

    (5) cuerpo -> funcionesArray .

    $end            reduce using rule 5 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesArray .)


state 7

    (77) expression -> term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 77 (expression -> term .)
    MINUS           reduce using rule 77 (expression -> term .)
    $end            reduce using rule 77 (expression -> term .)
    RBRACE          reduce using rule 77 (expression -> term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 8

    (81) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    factor                         shift and go to state 24

state 9

    (80) term -> factor .

    TIMES           reduce using rule 80 (term -> factor .)
    DIVIDE          reduce using rule 80 (term -> factor .)
    PLUS            reduce using rule 80 (term -> factor .)
    MINUS           reduce using rule 80 (term -> factor .)
    $end            reduce using rule 80 (term -> factor .)
    RBRACE          reduce using rule 80 (term -> factor .)


state 10

    (6) declararVariable -> VAR . ID COLON tipoValue
    (7) declararVariable -> VAR . ID COLON tipo
    (8) declararVariable -> VAR . ID EQUAL value
    (9) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 25


state 11

    (66) tuplaSwap -> ID . DOT SWAP
    (67) tuplaToString -> ID . DOT TOSTRING
    (68) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (72) arrayHead -> ID . DOT HEAD
    (73) arrayTail -> ID . DOT TAIL
    (74) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 26


state 12

    (63) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 63 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 63 (funcionesTupla -> tuplaSwap .)


state 13

    (64) funcionesTupla -> tuplaToString .

    $end            reduce using rule 64 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 64 (funcionesTupla -> tuplaToString .)


state 14

    (65) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)


state 15

    (69) funcionesArray -> arrayHead .

    $end            reduce using rule 69 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 69 (funcionesArray -> arrayHead .)


state 16

    (70) funcionesArray -> arrayTail .

    $end            reduce using rule 70 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 70 (funcionesArray -> arrayTail .)


state 17

    (71) funcionesArray -> arrayLength .

    $end            reduce using rule 71 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 71 (funcionesArray -> arrayLength .)


state 18

    (87) factor -> INT_NUMBER .

    TIMES           reduce using rule 87 (factor -> INT_NUMBER .)
    DIVIDE          reduce using rule 87 (factor -> INT_NUMBER .)
    PLUS            reduce using rule 87 (factor -> INT_NUMBER .)
    MINUS           reduce using rule 87 (factor -> INT_NUMBER .)
    $end            reduce using rule 87 (factor -> INT_NUMBER .)
    GT              reduce using rule 87 (factor -> INT_NUMBER .)
    GE              reduce using rule 87 (factor -> INT_NUMBER .)
    LT              reduce using rule 87 (factor -> INT_NUMBER .)
    LE              reduce using rule 87 (factor -> INT_NUMBER .)
    EQUAL2          reduce using rule 87 (factor -> INT_NUMBER .)
    RBRACE          reduce using rule 87 (factor -> INT_NUMBER .)
    LBRACE          reduce using rule 87 (factor -> INT_NUMBER .)


state 19

    (88) factor -> DOUBLE_NUMBER .

    TIMES           reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    $end            reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    GT              reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    GE              reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    LT              reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    LE              reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 88 (factor -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 88 (factor -> DOUBLE_NUMBER .)


state 20

    (75) expression -> expression PLUS . term
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    term                           shift and go to state 27
    factor                         shift and go to state 9

state 21

    (76) expression -> expression MINUS . term
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    term                           shift and go to state 28
    factor                         shift and go to state 9

state 22

    (78) term -> term TIMES . factor
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    factor                         shift and go to state 29

state 23

    (79) term -> term DIVIDE . factor
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    factor                         shift and go to state 30

state 24

    (81) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (82) comparacion -> . GT
    (83) comparacion -> . GE
    (84) comparacion -> . LT
    (85) comparacion -> . LE
    (86) comparacion -> . EQUAL2

    GT              shift and go to state 32
    GE              shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    EQUAL2          shift and go to state 36

    comparacion                    shift and go to state 31

state 25

    (6) declararVariable -> VAR ID . COLON tipoValue
    (7) declararVariable -> VAR ID . COLON tipo
    (8) declararVariable -> VAR ID . EQUAL value
    (9) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 37
    EQUAL           shift and go to state 38


state 26

    (66) tuplaSwap -> ID DOT . SWAP
    (67) tuplaToString -> ID DOT . TOSTRING
    (68) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (72) arrayHead -> ID DOT . HEAD
    (73) arrayTail -> ID DOT . TAIL
    (74) arrayLength -> ID DOT . LENGTH

    SWAP            shift and go to state 39
    TOSTRING        shift and go to state 40
    PRODUCTITERATOR shift and go to state 41
    HEAD            shift and go to state 42
    TAIL            shift and go to state 43
    LENGTH          shift and go to state 44


state 27

    (75) expression -> expression PLUS term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 75 (expression -> expression PLUS term .)
    MINUS           reduce using rule 75 (expression -> expression PLUS term .)
    $end            reduce using rule 75 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 75 (expression -> expression PLUS term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 28

    (76) expression -> expression MINUS term .
    (78) term -> term . TIMES factor
    (79) term -> term . DIVIDE factor

    PLUS            reduce using rule 76 (expression -> expression MINUS term .)
    MINUS           reduce using rule 76 (expression -> expression MINUS term .)
    $end            reduce using rule 76 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 76 (expression -> expression MINUS term .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23


state 29

    (78) term -> term TIMES factor .

    TIMES           reduce using rule 78 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 78 (term -> term TIMES factor .)
    PLUS            reduce using rule 78 (term -> term TIMES factor .)
    MINUS           reduce using rule 78 (term -> term TIMES factor .)
    $end            reduce using rule 78 (term -> term TIMES factor .)
    RBRACE          reduce using rule 78 (term -> term TIMES factor .)


state 30

    (79) term -> term DIVIDE factor .

    TIMES           reduce using rule 79 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 79 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 79 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 79 (term -> term DIVIDE factor .)
    $end            reduce using rule 79 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 79 (term -> term DIVIDE factor .)


state 31

    (81) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    factor                         shift and go to state 45

state 32

    (82) comparacion -> GT .

    INT_NUMBER      reduce using rule 82 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 82 (comparacion -> GT .)


state 33

    (83) comparacion -> GE .

    INT_NUMBER      reduce using rule 83 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 83 (comparacion -> GE .)


state 34

    (84) comparacion -> LT .

    INT_NUMBER      reduce using rule 84 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 84 (comparacion -> LT .)


state 35

    (85) comparacion -> LE .

    INT_NUMBER      reduce using rule 85 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 85 (comparacion -> LE .)


state 36

    (86) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 86 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 86 (comparacion -> EQUAL2 .)


state 37

    (6) declararVariable -> VAR ID COLON . tipoValue
    (7) declararVariable -> VAR ID COLON . tipo
    (46) tipoValue -> . STRING_TYPE EQUAL string
    (47) tipoValue -> . BOOL EQUAL booleano
    (48) tipoValue -> . INT EQUAL int
    (49) tipoValue -> . DOUBLE EQUAL double
    (50) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (51) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (52) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (53) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (54) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (55) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (56) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (57) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN
    (41) tipo -> . INT
    (42) tipo -> . DOUBLE
    (43) tipo -> . BOOL
    (44) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 48
    BOOL            shift and go to state 49
    INT             shift and go to state 50
    DOUBLE          shift and go to state 51
    ARRAY           shift and go to state 52
    LIST            shift and go to state 53

    tipoValue                      shift and go to state 46
    tipo                           shift and go to state 47

state 38

    (8) declararVariable -> VAR ID EQUAL . value
    (9) declararVariable -> VAR ID EQUAL . expression
    (10) value -> . string
    (11) value -> . booleano
    (12) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (13) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (14) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (15) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (16) value -> . ARRAY LPAREN elementosInternos RPAREN
    (17) value -> . LIST LPAREN elementosInternos RPAREN
    (45) value -> . NEW ARRAY LBRACK tipo RBRACK LPAREN int RPAREN
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (91) string -> . STRING
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    NEW             shift and go to state 58
    ARRAY           shift and go to state 59
    LIST            shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    value                          shift and go to state 54
    expression                     shift and go to state 55
    string                         shift and go to state 56
    booleano                       shift and go to state 57
    term                           shift and go to state 7
    factor                         shift and go to state 9

state 39

    (66) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)


state 40

    (67) tuplaToString -> ID DOT TOSTRING .

    $end            reduce using rule 67 (tuplaToString -> ID DOT TOSTRING .)
    RBRACE          reduce using rule 67 (tuplaToString -> ID DOT TOSTRING .)


state 41

    (68) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 42

    (72) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 72 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 72 (arrayHead -> ID DOT HEAD .)


state 43

    (73) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 73 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 73 (arrayTail -> ID DOT TAIL .)


state 44

    (74) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 74 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 74 (arrayLength -> ID DOT LENGTH .)


state 45

    (81) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 64


state 46

    (6) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 6 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 6 (declararVariable -> VAR ID COLON tipoValue .)


state 47

    (7) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 7 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 7 (declararVariable -> VAR ID COLON tipo .)


state 48

    (46) tipoValue -> STRING_TYPE . EQUAL string
    (44) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 65
    $end            reduce using rule 44 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 44 (tipo -> STRING_TYPE .)


state 49

    (47) tipoValue -> BOOL . EQUAL booleano
    (43) tipo -> BOOL .

    EQUAL           shift and go to state 66
    $end            reduce using rule 43 (tipo -> BOOL .)
    RBRACE          reduce using rule 43 (tipo -> BOOL .)


state 50

    (48) tipoValue -> INT . EQUAL int
    (41) tipo -> INT .

    EQUAL           shift and go to state 67
    $end            reduce using rule 41 (tipo -> INT .)
    RBRACE          reduce using rule 41 (tipo -> INT .)


state 51

    (49) tipoValue -> DOUBLE . EQUAL double
    (42) tipo -> DOUBLE .

    EQUAL           shift and go to state 68
    $end            reduce using rule 42 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 42 (tipo -> DOUBLE .)


state 52

    (50) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (51) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (52) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (53) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 69


state 53

    (54) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (55) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (56) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (57) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN

    LBRACK          shift and go to state 70


state 54

    (8) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 8 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 8 (declararVariable -> VAR ID EQUAL value .)


state 55

    (9) declararVariable -> VAR ID EQUAL expression .
    (75) expression -> expression . PLUS term
    (76) expression -> expression . MINUS term

    $end            reduce using rule 9 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 9 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 56

    (10) value -> string .

    $end            reduce using rule 10 (value -> string .)
    RBRACE          reduce using rule 10 (value -> string .)


state 57

    (11) value -> booleano .

    $end            reduce using rule 11 (value -> booleano .)
    RBRACE          reduce using rule 11 (value -> booleano .)


state 58

    (12) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (13) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (14) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (15) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (45) value -> NEW . ARRAY LBRACK tipo RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 71


state 59

    (16) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 72


state 60

    (17) value -> LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 73


state 61

    (91) string -> STRING .

    $end            reduce using rule 91 (string -> STRING .)
    RBRACE          reduce using rule 91 (string -> STRING .)
    COMMA           reduce using rule 91 (string -> STRING .)
    RPAREN          reduce using rule 91 (string -> STRING .)


state 62

    (89) booleano -> TRUE .

    $end            reduce using rule 89 (booleano -> TRUE .)
    RBRACE          reduce using rule 89 (booleano -> TRUE .)
    COMMA           reduce using rule 89 (booleano -> TRUE .)
    RPAREN          reduce using rule 89 (booleano -> TRUE .)


state 63

    (90) booleano -> FALSE .

    $end            reduce using rule 90 (booleano -> FALSE .)
    RBRACE          reduce using rule 90 (booleano -> FALSE .)
    COMMA           reduce using rule 90 (booleano -> FALSE .)
    RPAREN          reduce using rule 90 (booleano -> FALSE .)


state 64

    (81) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . funcionesTupla
    (5) cuerpo -> . funcionesArray
    (75) expression -> . expression PLUS term
    (76) expression -> . expression MINUS term
    (77) expression -> . term
    (81) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (6) declararVariable -> . VAR ID COLON tipoValue
    (7) declararVariable -> . VAR ID COLON tipo
    (8) declararVariable -> . VAR ID EQUAL value
    (9) declararVariable -> . VAR ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (78) term -> . term TIMES factor
    (79) term -> . term DIVIDE factor
    (80) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (72) arrayHead -> . ID DOT HEAD
    (73) arrayTail -> . ID DOT TAIL
    (74) arrayLength -> . ID DOT LENGTH
    (87) factor -> . INT_NUMBER
    (88) factor -> . DOUBLE_NUMBER

    IF              shift and go to state 8
    VAR             shift and go to state 10
    ID              shift and go to state 11
    INT_NUMBER      shift and go to state 18
    DOUBLE_NUMBER   shift and go to state 19

    factor                         shift and go to state 9
    cuerpo                         shift and go to state 74
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    funcionesTupla                 shift and go to state 5
    funcionesArray                 shift and go to state 6
    term                           shift and go to state 7
    tuplaSwap                      shift and go to state 12
    tuplaToString                  shift and go to state 13
    tuplaProductIterator           shift and go to state 14
    arrayHead                      shift and go to state 15
    arrayTail                      shift and go to state 16
    arrayLength                    shift and go to state 17

state 65

    (46) tipoValue -> STRING_TYPE EQUAL . string
    (91) string -> . STRING

    STRING          shift and go to state 61

    string                         shift and go to state 75

state 66

    (47) tipoValue -> BOOL EQUAL . booleano
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE

    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    booleano                       shift and go to state 76

state 67

    (48) tipoValue -> INT EQUAL . int
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 77

state 68

    (49) tipoValue -> DOUBLE EQUAL . double
    (92) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 80

    double                         shift and go to state 79

state 69

    (50) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (51) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (52) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (53) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 81
    DOUBLE          shift and go to state 82
    BOOL            shift and go to state 83
    STRING_TYPE     shift and go to state 84


state 70

    (54) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (55) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (56) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (57) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN

    INT             shift and go to state 85
    DOUBLE          shift and go to state 86
    BOOL            shift and go to state 87
    STRING_TYPE     shift and go to state 88


state 71

    (12) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (13) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (14) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (15) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (45) value -> NEW ARRAY . LBRACK tipo RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 89


state 72

    (16) value -> ARRAY LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 90
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 73

    (17) value -> LIST LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 99
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 74

    (81) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 100


state 75

    (46) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 46 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 46 (tipoValue -> STRING_TYPE EQUAL string .)


state 76

    (47) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 47 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 47 (tipoValue -> BOOL EQUAL booleano .)


state 77

    (48) tipoValue -> INT EQUAL int .

    $end            reduce using rule 48 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 48 (tipoValue -> INT EQUAL int .)


state 78

    (93) int -> INT_NUMBER .

    $end            reduce using rule 93 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 93 (int -> INT_NUMBER .)
    COMMA           reduce using rule 93 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 93 (int -> INT_NUMBER .)


state 79

    (49) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 49 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 49 (tipoValue -> DOUBLE EQUAL double .)


state 80

    (92) double -> DOUBLE_NUMBER .

    $end            reduce using rule 92 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 92 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 92 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 92 (double -> DOUBLE_NUMBER .)


state 81

    (50) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 101


state 82

    (51) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 102


state 83

    (52) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 103


state 84

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 104


state 85

    (54) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 105


state 86

    (55) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 106


state 87

    (56) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 107


state 88

    (57) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 108


state 89

    (12) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (13) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (14) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (15) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN
    (45) value -> NEW ARRAY LBRACK . tipo RBRACK LPAREN int RPAREN
    (41) tipo -> . INT
    (42) tipo -> . DOUBLE
    (43) tipo -> . BOOL
    (44) tipo -> . STRING_TYPE

    INT             shift and go to state 109
    DOUBLE          shift and go to state 110
    BOOL            shift and go to state 111
    STRING_TYPE     shift and go to state 112

    tipo                           shift and go to state 113

state 90

    (16) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 114


state 91

    (18) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 18 (elementosInternos -> elementosInternosInt .)


state 92

    (19) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 19 (elementosInternos -> elementosInternosDouble .)


state 93

    (20) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 20 (elementosInternos -> elementosInternosBool .)


state 94

    (21) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 21 (elementosInternos -> elementosInternosString .)


state 95

    (22) elementosInternosInt -> int .
    (23) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 22 (elementosInternosInt -> int .)
    COMMA           shift and go to state 115


state 96

    (24) elementosInternosDouble -> double .
    (25) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 24 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 116


state 97

    (26) elementosInternosBool -> booleano .
    (27) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 26 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 117


state 98

    (28) elementosInternosString -> string .
    (29) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 28 (elementosInternosString -> string .)
    COMMA           shift and go to state 118


state 99

    (17) value -> LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 119


state 100

    (81) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 81 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 81 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 101

    (50) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 120


state 102

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 121


state 103

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 122


state 104

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 123


state 105

    (54) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 124


state 106

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 125


state 107

    (56) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 126


state 108

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL STRING_TYPE LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 127


state 109

    (12) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN
    (41) tipo -> INT .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 128

  ! RBRACK          [ reduce using rule 41 (tipo -> INT .) ]


state 110

    (13) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN
    (42) tipo -> DOUBLE .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 129

  ! RBRACK          [ reduce using rule 42 (tipo -> DOUBLE .) ]


state 111

    (14) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN
    (43) tipo -> BOOL .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 130

  ! RBRACK          [ reduce using rule 43 (tipo -> BOOL .) ]


state 112

    (15) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN
    (44) tipo -> STRING_TYPE .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 131

  ! RBRACK          [ reduce using rule 44 (tipo -> STRING_TYPE .) ]


state 113

    (45) value -> NEW ARRAY LBRACK tipo . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 132


state 114

    (16) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 16 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 16 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 115

    (23) elementosInternosInt -> int COMMA . elementosInternosInt
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 95
    elementosInternosInt           shift and go to state 133

state 116

    (25) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (92) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 80

    double                         shift and go to state 96
    elementosInternosDouble        shift and go to state 134

state 117

    (27) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE

    TRUE            shift and go to state 62
    FALSE           shift and go to state 63

    booleano                       shift and go to state 97
    elementosInternosBool          shift and go to state 135

state 118

    (29) elementosInternosString -> string COMMA . elementosInternosString
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (91) string -> . STRING

    STRING          shift and go to state 61

    string                         shift and go to state 98
    elementosInternosString        shift and go to state 136

state 119

    (17) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 17 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 17 (value -> LIST LPAREN elementosInternos RPAREN .)


state 120

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 137


state 121

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 138


state 122

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 139


state 123

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 140


state 124

    (54) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 141


state 125

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 142


state 126

    (56) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 143


state 127

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . STRING_TYPE LPAREN elementosInternos RPAREN

    STRING_TYPE     shift and go to state 144


state 128

    (12) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 145


state 129

    (13) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 146


state 130

    (14) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 147


state 131

    (15) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 148


state 132

    (45) value -> NEW ARRAY LBRACK tipo RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 149


state 133

    (23) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 23 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 134

    (25) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 25 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 135

    (27) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 27 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 136

    (29) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 29 (elementosInternosString -> string COMMA elementosInternosString .)


state 137

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 150


state 138

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 151


state 139

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 152


state 140

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 153


state 141

    (54) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 154


state 142

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 155


state 143

    (56) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 156


state 144

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 157


state 145

    (12) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 158

state 146

    (13) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 159

state 147

    (14) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 160

state 148

    (15) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 161

state 149

    (45) value -> NEW ARRAY LBRACK tipo RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 162

state 150

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 163


state 151

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 164


state 152

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 165


state 153

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 166


state 154

    (54) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 167
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 155

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 168
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 156

    (56) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 169
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 157

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN . elementosInternos RPAREN
    (18) elementosInternos -> . elementosInternosInt
    (19) elementosInternos -> . elementosInternosDouble
    (20) elementosInternos -> . elementosInternosBool
    (21) elementosInternos -> . elementosInternosString
    (22) elementosInternosInt -> . int
    (23) elementosInternosInt -> . int COMMA elementosInternosInt
    (24) elementosInternosDouble -> . double
    (25) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (26) elementosInternosBool -> . booleano
    (27) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (28) elementosInternosString -> . string
    (29) elementosInternosString -> . string COMMA elementosInternosString
    (93) int -> . INT_NUMBER
    (92) double -> . DOUBLE_NUMBER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (91) string -> . STRING

    INT_NUMBER      shift and go to state 78
    DOUBLE_NUMBER   shift and go to state 80
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    STRING          shift and go to state 61

    elementosInternos              shift and go to state 170
    elementosInternosInt           shift and go to state 91
    elementosInternosDouble        shift and go to state 92
    elementosInternosBool          shift and go to state 93
    elementosInternosString        shift and go to state 94
    int                            shift and go to state 95
    double                         shift and go to state 96
    booleano                       shift and go to state 97
    string                         shift and go to state 98

state 158

    (12) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 171


state 159

    (13) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 172


state 160

    (14) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 173


state 161

    (15) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 174


state 162

    (45) value -> NEW ARRAY LBRACK tipo RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 175


state 163

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 176


state 164

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 177


state 165

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 178


state 166

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 179


state 167

    (54) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 180


state 168

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 181


state 169

    (56) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 182


state 170

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 183


state 171

    (12) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 12 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 12 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 172

    (13) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 13 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 13 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 173

    (14) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 14 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 14 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 174

    (15) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 15 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 15 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 175

    (45) value -> NEW ARRAY LBRACK tipo RBRACK LPAREN int RPAREN .

    $end            reduce using rule 45 (value -> NEW ARRAY LBRACK tipo RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 45 (value -> NEW ARRAY LBRACK tipo RBRACK LPAREN int RPAREN .)


state 176

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 184


state 177

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 185


state 178

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 186


state 179

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 187


state 180

    (54) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 54 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 54 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 181

    (55) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 55 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 55 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 182

    (56) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 56 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 56 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 183

    (57) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN .

    $end            reduce using rule 57 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL STRING_TYPE LPAREN elementosInternos RPAREN .)


state 184

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 188


state 185

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 189


state 186

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 190


state 187

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 191


state 188

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 192

state 189

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 193

state 190

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 194

state 191

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (93) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 78

    int                            shift and go to state 195

state 192

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 196


state 193

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 197


state 194

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 198


state 195

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 199


state 196

    (50) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 50 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 50 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 197

    (51) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 51 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 51 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 198

    (52) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 52 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 52 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 199

    (53) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 53 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 53 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACK in state 109 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 110 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 111 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 112 resolved as shift
