Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    EQ
    EQUALS
    INCREMENT
    ISEMPTY
    LM
    MOD
    OBJECT
    RETURN
    REVERSE
    SEMICOLON
    THIS
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> for
Rule 8     cuerpo -> funcionesPropias
Rule 9     declararConstante -> VAL ID COLON tipoValueCons
Rule 10    declararConstante -> VAL ID COLON tipo
Rule 11    declararConstante -> VAL ID EQUAL valueCons
Rule 12    declararConstante -> VAL ID EQUAL expression
Rule 13    declararVariable -> VAR ID COLON tipoValue
Rule 14    declararVariable -> VAR ID COLON tipo
Rule 15    declararVariable -> VAR ID EQUAL value
Rule 16    declararVariable -> VAR ID EQUAL expression
Rule 17    value -> string
Rule 18    value -> booleano
Rule 19    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 20    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 22    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 23    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 24    value -> LIST LPAREN elementosInternos RPAREN
Rule 25    elementosInternos -> elementosInternosInt
Rule 26    elementosInternos -> elementosInternosDouble
Rule 27    elementosInternos -> elementosInternosBool
Rule 28    elementosInternos -> elementosInternosString
Rule 29    elementosInternosInt -> int
Rule 30    elementosInternosInt -> int COMMA elementosInternosInt
Rule 31    elementosInternosDouble -> double
Rule 32    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 33    elementosInternosBool -> booleano
Rule 34    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 35    elementosInternosString -> string
Rule 36    elementosInternosString -> string COMMA elementosInternosString
Rule 37    elementosInternos2 -> int
Rule 38    elementosInternos2 -> double
Rule 39    elementosInternos2 -> booleano
Rule 40    elementosInternos2 -> string
Rule 41    elementosInternos2 -> int COMMA elementosInternos2
Rule 42    elementosInternos2 -> double COMMA elementosInternos2
Rule 43    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 44    elementosInternos2 -> string COMMA elementosInternos2
Rule 45    valueCons -> string
Rule 46    valueCons -> booleano
Rule 47    valueCons -> tupla
Rule 48    tipo -> INT
Rule 49    tipo -> DOUBLE
Rule 50    tipo -> BOOL
Rule 51    tipo -> STRING_TYPE
Rule 52    tipoValue -> STRING_TYPE EQUAL string
Rule 53    tipoValue -> BOOL EQUAL booleano
Rule 54    tipoValue -> INT EQUAL int
Rule 55    tipoValue -> DOUBLE EQUAL double
Rule 56    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 57    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 58    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 59    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 61    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 62    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 63    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValueCons -> STRING_TYPE EQUAL string
Rule 65    tipoValueCons -> BOOL EQUAL booleano
Rule 66    tipoValueCons -> INT EQUAL int
Rule 67    tipoValueCons -> DOUBLE EQUAL double
Rule 68    tupla -> LPAREN elementosInternos2 RPAREN
Rule 69    funcionesTupla -> tuplaSwap
Rule 70    funcionesTupla -> tuplaToString
Rule 71    funcionesTupla -> tuplaProductIterator
Rule 72    tuplaSwap -> ID DOT SWAP
Rule 73    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 74    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 75    funcionesArray -> arrayHead
Rule 76    funcionesArray -> arrayTail
Rule 77    funcionesArray -> arrayLength
Rule 78    funcionesPropias -> INPUT LPAREN RPAREN
Rule 79    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 80    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 81    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 82    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 83    arrayHead -> ID DOT HEAD
Rule 84    arrayTail -> ID DOT TAIL
Rule 85    arrayLength -> ID DOT LENGTH
Rule 86    expression -> expression PLUS term
Rule 87    expression -> expression MINUS term
Rule 88    expression -> term
Rule 89    term -> term TIMES factor
Rule 90    term -> term DIVIDE factor
Rule 91    term -> factor
Rule 92    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 93    for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE
Rule 94    comparacion -> GT
Rule 95    comparacion -> GE
Rule 96    comparacion -> LT
Rule 97    comparacion -> LE
Rule 98    comparacion -> EQUAL2
Rule 99    factor -> int
Rule 100   factor -> double
Rule 101   booleano -> TRUE
Rule 102   booleano -> FALSE
Rule 103   string -> STRING
Rule 104   double -> DOUBLE_NUMBER
Rule 105   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 19 20 21 22 23 56 56 57 57 58 58 59 59
BOOL                 : 21 50 53 58 58 62 65
CLASS                : 
COLON                : 9 10 13 14
COMMA                : 30 32 34 36 41 42 43 44
DECREMENT            : 
DEF                  : 
DIVIDE               : 90
DOT                  : 72 73 74 83 84 85
DOUBLE               : 20 49 55 57 57 61 67
DOUBLE_NUMBER        : 104
ELSE                 : 
EQ                   : 
EQUAL                : 11 12 15 16 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
EQUAL2               : 98
EQUALS               : 
FALSE                : 102
FOR                  : 93
GE                   : 95
GT                   : 94
HEAD                 : 83
ID                   : 9 10 11 12 13 14 15 16 72 73 74 81 83 84 85
IF                   : 92
INCREMENT            : 
INPUT                : 78
INT                  : 19 48 54 56 56 60 66
INT_NUMBER           : 105
ISEMPTY              : 
LBRACE               : 92 93 93
LBRACK               : 19 20 21 22 56 56 57 57 58 58 59 59 60 61 62 63
LE                   : 97
LENGTH               : 85
LIST                 : 24 60 60 61 61 62 62 63 63
LM                   : 
LPAREN               : 19 20 21 22 23 24 56 57 58 59 60 61 62 63 68 73 78 79 80 81 82 93
LT                   : 96
MINUS                : 87
MOD                  : 
NEW                  : 19 20 21 22 56 57 58 59
OBJECT               : 
PLUS                 : 86
PRINTLN              : 79 80 81 82
PRODUCTITERATOR      : 74
RBRACE               : 92 93
RBRACK               : 19 20 21 22 56 56 57 57 58 58 59 59 60 61 62 63
RETURN               : 
REVERSE              : 
RPAREN               : 19 20 21 22 23 24 56 57 58 59 60 61 62 63 68 73 78 79 80 81 82 93
SEMICOLON            : 
STRING               : 103
STRING_TYPE          : 22 51 52 59 59 63 64
SWAP                 : 72
TAIL                 : 84
THIS                 : 
TIMES                : 89
TOSTRING             : 73
TRUE                 : 101
VAL                  : 9 10 11 12
VAR                  : 13 14 15 16
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 75
arrayLength          : 77
arrayTail            : 76
booleano             : 18 33 34 39 43 46 53 65 80
comparacion          : 92
cuerpo               : 92 0
declararConstante    : 4
declararVariable     : 3
double               : 31 32 38 42 55 67 100
elementosInternos    : 23 24 60 61 62 63
elementosInternos2   : 41 42 43 44 68
elementosInternosBool : 27 34
elementosInternosDouble : 26 32
elementosInternosInt : 25 30
elementosInternosString : 28 36
expression           : 1 12 16 82 86 87
factor               : 89 90 91 92 92
for                  : 7
funcionesArray       : 6
funcionesPropias     : 8
funcionesTupla       : 5
int                  : 19 20 21 22 29 30 37 41 54 56 57 58 59 66 99
sentencia            : 2
string               : 17 35 36 40 44 45 52 64 79
term                 : 86 87 88 89 90
tipo                 : 10 14
tipoValue            : 13
tipoValueCons        : 9
tupla                : 47
tuplaProductIterator : 71
tuplaSwap            : 69
tuplaToString        : 70
value                : 15
valueCons            : 11

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (86) expression -> . expression PLUS term
    (87) expression -> . expression MINUS term
    (88) expression -> . term
    (92) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (13) declararVariable -> . VAR ID COLON tipoValue
    (14) declararVariable -> . VAR ID COLON tipo
    (15) declararVariable -> . VAR ID EQUAL value
    (16) declararVariable -> . VAR ID EQUAL expression
    (9) declararConstante -> . VAL ID COLON tipoValueCons
    (10) declararConstante -> . VAL ID COLON tipo
    (11) declararConstante -> . VAL ID EQUAL valueCons
    (12) declararConstante -> . VAL ID EQUAL expression
    (69) funcionesTupla -> . tuplaSwap
    (70) funcionesTupla -> . tuplaToString
    (71) funcionesTupla -> . tuplaProductIterator
    (75) funcionesArray -> . arrayHead
    (76) funcionesArray -> . arrayTail
    (77) funcionesArray -> . arrayLength
    (93) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (78) funcionesPropias -> . INPUT LPAREN RPAREN
    (79) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (72) tuplaSwap -> . ID DOT SWAP
    (73) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (74) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (83) arrayHead -> . ID DOT HEAD
    (84) arrayTail -> . ID DOT TAIL
    (85) arrayLength -> . ID DOT LENGTH
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    IF              shift and go to state 11
    VAR             shift and go to state 13
    VAL             shift and go to state 15
    FOR             shift and go to state 22
    INPUT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 14
    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 12
    tuplaSwap                      shift and go to state 16
    tuplaToString                  shift and go to state 17
    tuplaProductIterator           shift and go to state 18
    arrayHead                      shift and go to state 19
    arrayTail                      shift and go to state 20
    arrayLength                    shift and go to state 21
    int                            shift and go to state 25
    double                         shift and go to state 26

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (86) expression -> expression . PLUS term
    (87) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesArray .

    $end            reduce using rule 6 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesArray .)


state 8

    (7) cuerpo -> for .

    $end            reduce using rule 7 (cuerpo -> for .)
    RBRACE          reduce using rule 7 (cuerpo -> for .)


state 9

    (8) cuerpo -> funcionesPropias .

    $end            reduce using rule 8 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 8 (cuerpo -> funcionesPropias .)


state 10

    (88) expression -> term .
    (89) term -> term . TIMES factor
    (90) term -> term . DIVIDE factor

    PLUS            reduce using rule 88 (expression -> term .)
    MINUS           reduce using rule 88 (expression -> term .)
    $end            reduce using rule 88 (expression -> term .)
    RPAREN          reduce using rule 88 (expression -> term .)
    RBRACE          reduce using rule 88 (expression -> term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 11

    (92) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    factor                         shift and go to state 33
    int                            shift and go to state 25
    double                         shift and go to state 26

state 12

    (91) term -> factor .

    TIMES           reduce using rule 91 (term -> factor .)
    DIVIDE          reduce using rule 91 (term -> factor .)
    PLUS            reduce using rule 91 (term -> factor .)
    MINUS           reduce using rule 91 (term -> factor .)
    $end            reduce using rule 91 (term -> factor .)
    RPAREN          reduce using rule 91 (term -> factor .)
    RBRACE          reduce using rule 91 (term -> factor .)


state 13

    (13) declararVariable -> VAR . ID COLON tipoValue
    (14) declararVariable -> VAR . ID COLON tipo
    (15) declararVariable -> VAR . ID EQUAL value
    (16) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 34


state 14

    (72) tuplaSwap -> ID . DOT SWAP
    (73) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (74) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (83) arrayHead -> ID . DOT HEAD
    (84) arrayTail -> ID . DOT TAIL
    (85) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 35


state 15

    (9) declararConstante -> VAL . ID COLON tipoValueCons
    (10) declararConstante -> VAL . ID COLON tipo
    (11) declararConstante -> VAL . ID EQUAL valueCons
    (12) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 36


state 16

    (69) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 69 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 69 (funcionesTupla -> tuplaSwap .)


state 17

    (70) funcionesTupla -> tuplaToString .

    $end            reduce using rule 70 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 70 (funcionesTupla -> tuplaToString .)


state 18

    (71) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 71 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 71 (funcionesTupla -> tuplaProductIterator .)


state 19

    (75) funcionesArray -> arrayHead .

    $end            reduce using rule 75 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 75 (funcionesArray -> arrayHead .)


state 20

    (76) funcionesArray -> arrayTail .

    $end            reduce using rule 76 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 76 (funcionesArray -> arrayTail .)


state 21

    (77) funcionesArray -> arrayLength .

    $end            reduce using rule 77 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 77 (funcionesArray -> arrayLength .)


state 22

    (93) for -> FOR . LPAREN RPAREN LBRACE LBRACE RBRACE

    LPAREN          shift and go to state 37


state 23

    (78) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 38


state 24

    (79) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (80) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (81) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (82) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 39


state 25

    (99) factor -> int .

    TIMES           reduce using rule 99 (factor -> int .)
    DIVIDE          reduce using rule 99 (factor -> int .)
    PLUS            reduce using rule 99 (factor -> int .)
    MINUS           reduce using rule 99 (factor -> int .)
    $end            reduce using rule 99 (factor -> int .)
    GT              reduce using rule 99 (factor -> int .)
    GE              reduce using rule 99 (factor -> int .)
    LT              reduce using rule 99 (factor -> int .)
    LE              reduce using rule 99 (factor -> int .)
    EQUAL2          reduce using rule 99 (factor -> int .)
    RPAREN          reduce using rule 99 (factor -> int .)
    RBRACE          reduce using rule 99 (factor -> int .)
    LBRACE          reduce using rule 99 (factor -> int .)


state 26

    (100) factor -> double .

    TIMES           reduce using rule 100 (factor -> double .)
    DIVIDE          reduce using rule 100 (factor -> double .)
    PLUS            reduce using rule 100 (factor -> double .)
    MINUS           reduce using rule 100 (factor -> double .)
    $end            reduce using rule 100 (factor -> double .)
    GT              reduce using rule 100 (factor -> double .)
    GE              reduce using rule 100 (factor -> double .)
    LT              reduce using rule 100 (factor -> double .)
    LE              reduce using rule 100 (factor -> double .)
    EQUAL2          reduce using rule 100 (factor -> double .)
    RPAREN          reduce using rule 100 (factor -> double .)
    RBRACE          reduce using rule 100 (factor -> double .)
    LBRACE          reduce using rule 100 (factor -> double .)


state 27

    (105) int -> INT_NUMBER .

    TIMES           reduce using rule 105 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 105 (int -> INT_NUMBER .)
    PLUS            reduce using rule 105 (int -> INT_NUMBER .)
    MINUS           reduce using rule 105 (int -> INT_NUMBER .)
    $end            reduce using rule 105 (int -> INT_NUMBER .)
    GT              reduce using rule 105 (int -> INT_NUMBER .)
    GE              reduce using rule 105 (int -> INT_NUMBER .)
    LT              reduce using rule 105 (int -> INT_NUMBER .)
    LE              reduce using rule 105 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 105 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 105 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 105 (int -> INT_NUMBER .)
    LBRACE          reduce using rule 105 (int -> INT_NUMBER .)
    COMMA           reduce using rule 105 (int -> INT_NUMBER .)


state 28

    (104) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 104 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 104 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 104 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 104 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 104 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 104 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 104 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 104 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 104 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 104 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 104 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 104 (double -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 104 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 104 (double -> DOUBLE_NUMBER .)


state 29

    (86) expression -> expression PLUS . term
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    term                           shift and go to state 40
    factor                         shift and go to state 12
    int                            shift and go to state 25
    double                         shift and go to state 26

state 30

    (87) expression -> expression MINUS . term
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    term                           shift and go to state 41
    factor                         shift and go to state 12
    int                            shift and go to state 25
    double                         shift and go to state 26

state 31

    (89) term -> term TIMES . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    factor                         shift and go to state 42
    int                            shift and go to state 25
    double                         shift and go to state 26

state 32

    (90) term -> term DIVIDE . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    factor                         shift and go to state 43
    int                            shift and go to state 25
    double                         shift and go to state 26

state 33

    (92) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (94) comparacion -> . GT
    (95) comparacion -> . GE
    (96) comparacion -> . LT
    (97) comparacion -> . LE
    (98) comparacion -> . EQUAL2

    GT              shift and go to state 45
    GE              shift and go to state 46
    LT              shift and go to state 47
    LE              shift and go to state 48
    EQUAL2          shift and go to state 49

    comparacion                    shift and go to state 44

state 34

    (13) declararVariable -> VAR ID . COLON tipoValue
    (14) declararVariable -> VAR ID . COLON tipo
    (15) declararVariable -> VAR ID . EQUAL value
    (16) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 50
    EQUAL           shift and go to state 51


state 35

    (72) tuplaSwap -> ID DOT . SWAP
    (73) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (74) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (83) arrayHead -> ID DOT . HEAD
    (84) arrayTail -> ID DOT . TAIL
    (85) arrayLength -> ID DOT . LENGTH

    SWAP            shift and go to state 52
    TOSTRING        shift and go to state 53
    PRODUCTITERATOR shift and go to state 54
    HEAD            shift and go to state 55
    TAIL            shift and go to state 56
    LENGTH          shift and go to state 57


state 36

    (9) declararConstante -> VAL ID . COLON tipoValueCons
    (10) declararConstante -> VAL ID . COLON tipo
    (11) declararConstante -> VAL ID . EQUAL valueCons
    (12) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 58
    EQUAL           shift and go to state 59


state 37

    (93) for -> FOR LPAREN . RPAREN LBRACE LBRACE RBRACE

    RPAREN          shift and go to state 60


state 38

    (78) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 61


state 39

    (79) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (80) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (81) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (82) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (103) string -> . STRING
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (86) expression -> . expression PLUS term
    (87) expression -> . expression MINUS term
    (88) expression -> . term
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    ID              shift and go to state 64
    STRING          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    string                         shift and go to state 62
    booleano                       shift and go to state 63
    expression                     shift and go to state 65
    term                           shift and go to state 10
    factor                         shift and go to state 12
    int                            shift and go to state 25
    double                         shift and go to state 26

state 40

    (86) expression -> expression PLUS term .
    (89) term -> term . TIMES factor
    (90) term -> term . DIVIDE factor

    PLUS            reduce using rule 86 (expression -> expression PLUS term .)
    MINUS           reduce using rule 86 (expression -> expression PLUS term .)
    $end            reduce using rule 86 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 86 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 86 (expression -> expression PLUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 41

    (87) expression -> expression MINUS term .
    (89) term -> term . TIMES factor
    (90) term -> term . DIVIDE factor

    PLUS            reduce using rule 87 (expression -> expression MINUS term .)
    MINUS           reduce using rule 87 (expression -> expression MINUS term .)
    $end            reduce using rule 87 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 87 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 87 (expression -> expression MINUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 42

    (89) term -> term TIMES factor .

    TIMES           reduce using rule 89 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 89 (term -> term TIMES factor .)
    PLUS            reduce using rule 89 (term -> term TIMES factor .)
    MINUS           reduce using rule 89 (term -> term TIMES factor .)
    $end            reduce using rule 89 (term -> term TIMES factor .)
    RPAREN          reduce using rule 89 (term -> term TIMES factor .)
    RBRACE          reduce using rule 89 (term -> term TIMES factor .)


state 43

    (90) term -> term DIVIDE factor .

    TIMES           reduce using rule 90 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 90 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 90 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 90 (term -> term DIVIDE factor .)
    $end            reduce using rule 90 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 90 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 90 (term -> term DIVIDE factor .)


state 44

    (92) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    factor                         shift and go to state 69
    int                            shift and go to state 25
    double                         shift and go to state 26

state 45

    (94) comparacion -> GT .

    INT_NUMBER      reduce using rule 94 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 94 (comparacion -> GT .)


state 46

    (95) comparacion -> GE .

    INT_NUMBER      reduce using rule 95 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 95 (comparacion -> GE .)


state 47

    (96) comparacion -> LT .

    INT_NUMBER      reduce using rule 96 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 96 (comparacion -> LT .)


state 48

    (97) comparacion -> LE .

    INT_NUMBER      reduce using rule 97 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 97 (comparacion -> LE .)


state 49

    (98) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 98 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 98 (comparacion -> EQUAL2 .)


state 50

    (13) declararVariable -> VAR ID COLON . tipoValue
    (14) declararVariable -> VAR ID COLON . tipo
    (52) tipoValue -> . STRING_TYPE EQUAL string
    (53) tipoValue -> . BOOL EQUAL booleano
    (54) tipoValue -> . INT EQUAL int
    (55) tipoValue -> . DOUBLE EQUAL double
    (56) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (57) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (58) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (59) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (60) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (61) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (48) tipo -> . INT
    (49) tipo -> . DOUBLE
    (50) tipo -> . BOOL
    (51) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 72
    BOOL            shift and go to state 73
    INT             shift and go to state 74
    DOUBLE          shift and go to state 75
    ARRAY           shift and go to state 76
    LIST            shift and go to state 77

    tipoValue                      shift and go to state 70
    tipo                           shift and go to state 71

state 51

    (15) declararVariable -> VAR ID EQUAL . value
    (16) declararVariable -> VAR ID EQUAL . expression
    (17) value -> . string
    (18) value -> . booleano
    (19) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (20) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (22) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (23) value -> . ARRAY LPAREN elementosInternos RPAREN
    (24) value -> . LIST LPAREN elementosInternos RPAREN
    (86) expression -> . expression PLUS term
    (87) expression -> . expression MINUS term
    (88) expression -> . term
    (103) string -> . STRING
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 82
    ARRAY           shift and go to state 83
    LIST            shift and go to state 84
    STRING          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    value                          shift and go to state 78
    expression                     shift and go to state 79
    string                         shift and go to state 80
    booleano                       shift and go to state 81
    int                            shift and go to state 25
    term                           shift and go to state 10
    factor                         shift and go to state 12
    double                         shift and go to state 26

state 52

    (72) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 72 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 72 (tuplaSwap -> ID DOT SWAP .)


state 53

    (73) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 85


state 54

    (74) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 74 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 74 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 55

    (83) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 83 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 83 (arrayHead -> ID DOT HEAD .)


state 56

    (84) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 84 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 84 (arrayTail -> ID DOT TAIL .)


state 57

    (85) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 85 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 85 (arrayLength -> ID DOT LENGTH .)


state 58

    (9) declararConstante -> VAL ID COLON . tipoValueCons
    (10) declararConstante -> VAL ID COLON . tipo
    (64) tipoValueCons -> . STRING_TYPE EQUAL string
    (65) tipoValueCons -> . BOOL EQUAL booleano
    (66) tipoValueCons -> . INT EQUAL int
    (67) tipoValueCons -> . DOUBLE EQUAL double
    (48) tipo -> . INT
    (49) tipo -> . DOUBLE
    (50) tipo -> . BOOL
    (51) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 88
    BOOL            shift and go to state 89
    INT             shift and go to state 90
    DOUBLE          shift and go to state 91

    tipoValueCons                  shift and go to state 86
    tipo                           shift and go to state 87

state 59

    (11) declararConstante -> VAL ID EQUAL . valueCons
    (12) declararConstante -> VAL ID EQUAL . expression
    (45) valueCons -> . string
    (46) valueCons -> . booleano
    (47) valueCons -> . tupla
    (86) expression -> . expression PLUS term
    (87) expression -> . expression MINUS term
    (88) expression -> . term
    (103) string -> . STRING
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (68) tupla -> . LPAREN elementosInternos2 RPAREN
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 97
    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    valueCons                      shift and go to state 92
    expression                     shift and go to state 93
    string                         shift and go to state 94
    booleano                       shift and go to state 95
    tupla                          shift and go to state 96
    term                           shift and go to state 10
    factor                         shift and go to state 12
    int                            shift and go to state 25
    double                         shift and go to state 26

state 60

    (93) for -> FOR LPAREN RPAREN . LBRACE LBRACE RBRACE

    LBRACE          shift and go to state 98


state 61

    (78) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 78 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 78 (funcionesPropias -> INPUT LPAREN RPAREN .)


state 62

    (79) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 99


state 63

    (80) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 100


state 64

    (81) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 101


state 65

    (82) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (86) expression -> expression . PLUS term
    (87) expression -> expression . MINUS term

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30


state 66

    (103) string -> STRING .

    RPAREN          reduce using rule 103 (string -> STRING .)
    $end            reduce using rule 103 (string -> STRING .)
    RBRACE          reduce using rule 103 (string -> STRING .)
    COMMA           reduce using rule 103 (string -> STRING .)


state 67

    (101) booleano -> TRUE .

    RPAREN          reduce using rule 101 (booleano -> TRUE .)
    $end            reduce using rule 101 (booleano -> TRUE .)
    RBRACE          reduce using rule 101 (booleano -> TRUE .)
    COMMA           reduce using rule 101 (booleano -> TRUE .)


state 68

    (102) booleano -> FALSE .

    RPAREN          reduce using rule 102 (booleano -> FALSE .)
    $end            reduce using rule 102 (booleano -> FALSE .)
    RBRACE          reduce using rule 102 (booleano -> FALSE .)
    COMMA           reduce using rule 102 (booleano -> FALSE .)


state 69

    (92) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 103


state 70

    (13) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 13 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 13 (declararVariable -> VAR ID COLON tipoValue .)


state 71

    (14) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 14 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 14 (declararVariable -> VAR ID COLON tipo .)


state 72

    (52) tipoValue -> STRING_TYPE . EQUAL string
    (51) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 104
    $end            reduce using rule 51 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 51 (tipo -> STRING_TYPE .)


state 73

    (53) tipoValue -> BOOL . EQUAL booleano
    (50) tipo -> BOOL .

    EQUAL           shift and go to state 105
    $end            reduce using rule 50 (tipo -> BOOL .)
    RBRACE          reduce using rule 50 (tipo -> BOOL .)


state 74

    (54) tipoValue -> INT . EQUAL int
    (48) tipo -> INT .

    EQUAL           shift and go to state 106
    $end            reduce using rule 48 (tipo -> INT .)
    RBRACE          reduce using rule 48 (tipo -> INT .)


state 75

    (55) tipoValue -> DOUBLE . EQUAL double
    (49) tipo -> DOUBLE .

    EQUAL           shift and go to state 107
    $end            reduce using rule 49 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 49 (tipo -> DOUBLE .)


state 76

    (56) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 108


state 77

    (60) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (61) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    LBRACK          shift and go to state 109


state 78

    (15) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 15 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 15 (declararVariable -> VAR ID EQUAL value .)


state 79

    (16) declararVariable -> VAR ID EQUAL expression .
    (86) expression -> expression . PLUS term
    (87) expression -> expression . MINUS term

    $end            reduce using rule 16 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 16 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30


state 80

    (17) value -> string .

    $end            reduce using rule 17 (value -> string .)
    RBRACE          reduce using rule 17 (value -> string .)


state 81

    (18) value -> booleano .

    $end            reduce using rule 18 (value -> booleano .)
    RBRACE          reduce using rule 18 (value -> booleano .)


state 82

    (19) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (20) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (21) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (22) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 110


state 83

    (23) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 111


state 84

    (24) value -> LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 112


state 85

    (73) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 113


state 86

    (9) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 9 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 9 (declararConstante -> VAL ID COLON tipoValueCons .)


state 87

    (10) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 10 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 10 (declararConstante -> VAL ID COLON tipo .)


state 88

    (64) tipoValueCons -> STRING_TYPE . EQUAL string
    (51) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 114
    $end            reduce using rule 51 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 51 (tipo -> STRING_TYPE .)


state 89

    (65) tipoValueCons -> BOOL . EQUAL booleano
    (50) tipo -> BOOL .

    EQUAL           shift and go to state 115
    $end            reduce using rule 50 (tipo -> BOOL .)
    RBRACE          reduce using rule 50 (tipo -> BOOL .)


state 90

    (66) tipoValueCons -> INT . EQUAL int
    (48) tipo -> INT .

    EQUAL           shift and go to state 116
    $end            reduce using rule 48 (tipo -> INT .)
    RBRACE          reduce using rule 48 (tipo -> INT .)


state 91

    (67) tipoValueCons -> DOUBLE . EQUAL double
    (49) tipo -> DOUBLE .

    EQUAL           shift and go to state 117
    $end            reduce using rule 49 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 49 (tipo -> DOUBLE .)


state 92

    (11) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 11 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 11 (declararConstante -> VAL ID EQUAL valueCons .)


state 93

    (12) declararConstante -> VAL ID EQUAL expression .
    (86) expression -> expression . PLUS term
    (87) expression -> expression . MINUS term

    $end            reduce using rule 12 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 12 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30


state 94

    (45) valueCons -> string .

    $end            reduce using rule 45 (valueCons -> string .)
    RBRACE          reduce using rule 45 (valueCons -> string .)


state 95

    (46) valueCons -> booleano .

    $end            reduce using rule 46 (valueCons -> booleano .)
    RBRACE          reduce using rule 46 (valueCons -> booleano .)


state 96

    (47) valueCons -> tupla .

    $end            reduce using rule 47 (valueCons -> tupla .)
    RBRACE          reduce using rule 47 (valueCons -> tupla .)


state 97

    (68) tupla -> LPAREN . elementosInternos2 RPAREN
    (37) elementosInternos2 -> . int
    (38) elementosInternos2 -> . double
    (39) elementosInternos2 -> . booleano
    (40) elementosInternos2 -> . string
    (41) elementosInternos2 -> . int COMMA elementosInternos2
    (42) elementosInternos2 -> . double COMMA elementosInternos2
    (43) elementosInternos2 -> . booleano COMMA elementosInternos2
    (44) elementosInternos2 -> . string COMMA elementosInternos2
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos2             shift and go to state 118
    int                            shift and go to state 119
    double                         shift and go to state 120
    booleano                       shift and go to state 121
    string                         shift and go to state 122

state 98

    (93) for -> FOR LPAREN RPAREN LBRACE . LBRACE RBRACE

    LBRACE          shift and go to state 123


state 99

    (79) funcionesPropias -> PRINTLN LPAREN string RPAREN .

    $end            reduce using rule 79 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 79 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)


state 100

    (80) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .

    $end            reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)


state 101

    (81) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

    $end            reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)


state 102

    (82) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

    $end            reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)


state 103

    (92) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (86) expression -> . expression PLUS term
    (87) expression -> . expression MINUS term
    (88) expression -> . term
    (92) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (13) declararVariable -> . VAR ID COLON tipoValue
    (14) declararVariable -> . VAR ID COLON tipo
    (15) declararVariable -> . VAR ID EQUAL value
    (16) declararVariable -> . VAR ID EQUAL expression
    (9) declararConstante -> . VAL ID COLON tipoValueCons
    (10) declararConstante -> . VAL ID COLON tipo
    (11) declararConstante -> . VAL ID EQUAL valueCons
    (12) declararConstante -> . VAL ID EQUAL expression
    (69) funcionesTupla -> . tuplaSwap
    (70) funcionesTupla -> . tuplaToString
    (71) funcionesTupla -> . tuplaProductIterator
    (75) funcionesArray -> . arrayHead
    (76) funcionesArray -> . arrayTail
    (77) funcionesArray -> . arrayLength
    (93) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (78) funcionesPropias -> . INPUT LPAREN RPAREN
    (79) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (89) term -> . term TIMES factor
    (90) term -> . term DIVIDE factor
    (91) term -> . factor
    (72) tuplaSwap -> . ID DOT SWAP
    (73) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (74) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (83) arrayHead -> . ID DOT HEAD
    (84) arrayTail -> . ID DOT TAIL
    (85) arrayLength -> . ID DOT LENGTH
    (99) factor -> . int
    (100) factor -> . double
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER

    IF              shift and go to state 11
    VAR             shift and go to state 13
    VAL             shift and go to state 15
    FOR             shift and go to state 22
    INPUT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 14
    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28

    factor                         shift and go to state 12
    cuerpo                         shift and go to state 124
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    term                           shift and go to state 10
    tuplaSwap                      shift and go to state 16
    tuplaToString                  shift and go to state 17
    tuplaProductIterator           shift and go to state 18
    arrayHead                      shift and go to state 19
    arrayTail                      shift and go to state 20
    arrayLength                    shift and go to state 21
    int                            shift and go to state 25
    double                         shift and go to state 26

state 104

    (52) tipoValue -> STRING_TYPE EQUAL . string
    (103) string -> . STRING

    STRING          shift and go to state 66

    string                         shift and go to state 125

state 105

    (53) tipoValue -> BOOL EQUAL . booleano
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    booleano                       shift and go to state 126

state 106

    (54) tipoValue -> INT EQUAL . int
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 127

state 107

    (55) tipoValue -> DOUBLE EQUAL . double
    (104) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 28

    double                         shift and go to state 128

state 108

    (56) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 129
    DOUBLE          shift and go to state 130
    BOOL            shift and go to state 131
    STRING_TYPE     shift and go to state 132


state 109

    (60) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (61) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    INT             shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    STRING_TYPE     shift and go to state 136


state 110

    (19) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 137


state 111

    (23) value -> ARRAY LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 138
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 112

    (24) value -> LIST LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 147
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 113

    (73) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 73 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 73 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 114

    (64) tipoValueCons -> STRING_TYPE EQUAL . string
    (103) string -> . STRING

    STRING          shift and go to state 66

    string                         shift and go to state 148

state 115

    (65) tipoValueCons -> BOOL EQUAL . booleano
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    booleano                       shift and go to state 149

state 116

    (66) tipoValueCons -> INT EQUAL . int
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 150

state 117

    (67) tipoValueCons -> DOUBLE EQUAL . double
    (104) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 28

    double                         shift and go to state 151

state 118

    (68) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 152


state 119

    (37) elementosInternos2 -> int .
    (41) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 37 (elementosInternos2 -> int .)
    COMMA           shift and go to state 153


state 120

    (38) elementosInternos2 -> double .
    (42) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 38 (elementosInternos2 -> double .)
    COMMA           shift and go to state 154


state 121

    (39) elementosInternos2 -> booleano .
    (43) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 39 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 155


state 122

    (40) elementosInternos2 -> string .
    (44) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 40 (elementosInternos2 -> string .)
    COMMA           shift and go to state 156


state 123

    (93) for -> FOR LPAREN RPAREN LBRACE LBRACE . RBRACE

    RBRACE          shift and go to state 157


state 124

    (92) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 158


state 125

    (52) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 52 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 52 (tipoValue -> STRING_TYPE EQUAL string .)


state 126

    (53) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 53 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 53 (tipoValue -> BOOL EQUAL booleano .)


state 127

    (54) tipoValue -> INT EQUAL int .

    $end            reduce using rule 54 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 54 (tipoValue -> INT EQUAL int .)


state 128

    (55) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 55 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 55 (tipoValue -> DOUBLE EQUAL double .)


state 129

    (56) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 159


state 130

    (57) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 160


state 131

    (58) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 161


state 132

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 162


state 133

    (60) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 163


state 134

    (61) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 164


state 135

    (62) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 165


state 136

    (63) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 166


state 137

    (19) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 167
    DOUBLE          shift and go to state 168
    BOOL            shift and go to state 169
    STRING_TYPE     shift and go to state 170


state 138

    (23) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 171


state 139

    (25) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 25 (elementosInternos -> elementosInternosInt .)


state 140

    (26) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 26 (elementosInternos -> elementosInternosDouble .)


state 141

    (27) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 27 (elementosInternos -> elementosInternosBool .)


state 142

    (28) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 28 (elementosInternos -> elementosInternosString .)


state 143

    (29) elementosInternosInt -> int .
    (30) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 29 (elementosInternosInt -> int .)
    COMMA           shift and go to state 172


state 144

    (31) elementosInternosDouble -> double .
    (32) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 31 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 173


state 145

    (33) elementosInternosBool -> booleano .
    (34) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 33 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 174


state 146

    (35) elementosInternosString -> string .
    (36) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 35 (elementosInternosString -> string .)
    COMMA           shift and go to state 175


state 147

    (24) value -> LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 176


state 148

    (64) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 64 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 64 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 149

    (65) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 65 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 65 (tipoValueCons -> BOOL EQUAL booleano .)


state 150

    (66) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 66 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 66 (tipoValueCons -> INT EQUAL int .)


state 151

    (67) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 67 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 67 (tipoValueCons -> DOUBLE EQUAL double .)


state 152

    (68) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 68 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 68 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 153

    (41) elementosInternos2 -> int COMMA . elementosInternos2
    (37) elementosInternos2 -> . int
    (38) elementosInternos2 -> . double
    (39) elementosInternos2 -> . booleano
    (40) elementosInternos2 -> . string
    (41) elementosInternos2 -> . int COMMA elementosInternos2
    (42) elementosInternos2 -> . double COMMA elementosInternos2
    (43) elementosInternos2 -> . booleano COMMA elementosInternos2
    (44) elementosInternos2 -> . string COMMA elementosInternos2
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    int                            shift and go to state 119
    elementosInternos2             shift and go to state 177
    double                         shift and go to state 120
    booleano                       shift and go to state 121
    string                         shift and go to state 122

state 154

    (42) elementosInternos2 -> double COMMA . elementosInternos2
    (37) elementosInternos2 -> . int
    (38) elementosInternos2 -> . double
    (39) elementosInternos2 -> . booleano
    (40) elementosInternos2 -> . string
    (41) elementosInternos2 -> . int COMMA elementosInternos2
    (42) elementosInternos2 -> . double COMMA elementosInternos2
    (43) elementosInternos2 -> . booleano COMMA elementosInternos2
    (44) elementosInternos2 -> . string COMMA elementosInternos2
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    double                         shift and go to state 120
    elementosInternos2             shift and go to state 178
    int                            shift and go to state 119
    booleano                       shift and go to state 121
    string                         shift and go to state 122

state 155

    (43) elementosInternos2 -> booleano COMMA . elementosInternos2
    (37) elementosInternos2 -> . int
    (38) elementosInternos2 -> . double
    (39) elementosInternos2 -> . booleano
    (40) elementosInternos2 -> . string
    (41) elementosInternos2 -> . int COMMA elementosInternos2
    (42) elementosInternos2 -> . double COMMA elementosInternos2
    (43) elementosInternos2 -> . booleano COMMA elementosInternos2
    (44) elementosInternos2 -> . string COMMA elementosInternos2
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    booleano                       shift and go to state 121
    elementosInternos2             shift and go to state 179
    int                            shift and go to state 119
    double                         shift and go to state 120
    string                         shift and go to state 122

state 156

    (44) elementosInternos2 -> string COMMA . elementosInternos2
    (37) elementosInternos2 -> . int
    (38) elementosInternos2 -> . double
    (39) elementosInternos2 -> . booleano
    (40) elementosInternos2 -> . string
    (41) elementosInternos2 -> . int COMMA elementosInternos2
    (42) elementosInternos2 -> . double COMMA elementosInternos2
    (43) elementosInternos2 -> . booleano COMMA elementosInternos2
    (44) elementosInternos2 -> . string COMMA elementosInternos2
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    string                         shift and go to state 122
    elementosInternos2             shift and go to state 180
    int                            shift and go to state 119
    double                         shift and go to state 120
    booleano                       shift and go to state 121

state 157

    (93) for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .

    $end            reduce using rule 93 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)
    RBRACE          reduce using rule 93 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)


state 158

    (92) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 92 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 92 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 159

    (56) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 181


state 160

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 182


state 161

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 183


state 162

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 184


state 163

    (60) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 185


state 164

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 186


state 165

    (62) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 187


state 166

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 188


state 167

    (19) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 189


state 168

    (20) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 190


state 169

    (21) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 191


state 170

    (22) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 192


state 171

    (23) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 23 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 23 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 172

    (30) elementosInternosInt -> int COMMA . elementosInternosInt
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 143
    elementosInternosInt           shift and go to state 193

state 173

    (32) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (104) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 28

    double                         shift and go to state 144
    elementosInternosDouble        shift and go to state 194

state 174

    (34) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    booleano                       shift and go to state 145
    elementosInternosBool          shift and go to state 195

state 175

    (36) elementosInternosString -> string COMMA . elementosInternosString
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (103) string -> . STRING

    STRING          shift and go to state 66

    string                         shift and go to state 146
    elementosInternosString        shift and go to state 196

state 176

    (24) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 24 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 24 (value -> LIST LPAREN elementosInternos RPAREN .)


state 177

    (41) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 41 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 178

    (42) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 42 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 179

    (43) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 43 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 180

    (44) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 44 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 181

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 197


state 182

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 198


state 183

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 199


state 184

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 200


state 185

    (60) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 201


state 186

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 202


state 187

    (62) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 203


state 188

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 204


state 189

    (19) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 205


state 190

    (20) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 206


state 191

    (21) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 207


state 192

    (22) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 208


state 193

    (30) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 30 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 194

    (32) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 32 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 195

    (34) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 34 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 196

    (36) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 36 (elementosInternosString -> string COMMA elementosInternosString .)


state 197

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 209


state 198

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 210


state 199

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 211


state 200

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 212


state 201

    (60) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 213


state 202

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 214


state 203

    (62) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 215


state 204

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 216


state 205

    (19) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 217

state 206

    (20) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 218

state 207

    (21) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 219

state 208

    (22) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 220

state 209

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 221


state 210

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 222


state 211

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 223


state 212

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 224


state 213

    (60) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 225
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 214

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 226
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 215

    (62) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 227
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 216

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (25) elementosInternos -> . elementosInternosInt
    (26) elementosInternos -> . elementosInternosDouble
    (27) elementosInternos -> . elementosInternosBool
    (28) elementosInternos -> . elementosInternosString
    (29) elementosInternosInt -> . int
    (30) elementosInternosInt -> . int COMMA elementosInternosInt
    (31) elementosInternosDouble -> . double
    (32) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (33) elementosInternosBool -> . booleano
    (34) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (35) elementosInternosString -> . string
    (36) elementosInternosString -> . string COMMA elementosInternosString
    (105) int -> . INT_NUMBER
    (104) double -> . DOUBLE_NUMBER
    (101) booleano -> . TRUE
    (102) booleano -> . FALSE
    (103) string -> . STRING

    INT_NUMBER      shift and go to state 27
    DOUBLE_NUMBER   shift and go to state 28
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    STRING          shift and go to state 66

    elementosInternos              shift and go to state 228
    elementosInternosInt           shift and go to state 139
    elementosInternosDouble        shift and go to state 140
    elementosInternosBool          shift and go to state 141
    elementosInternosString        shift and go to state 142
    int                            shift and go to state 143
    double                         shift and go to state 144
    booleano                       shift and go to state 145
    string                         shift and go to state 146

state 217

    (19) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 229


state 218

    (20) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 230


state 219

    (21) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 231


state 220

    (22) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 232


state 221

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 233


state 222

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 234


state 223

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 235


state 224

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 236


state 225

    (60) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 237


state 226

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 238


state 227

    (62) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 239


state 228

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 240


state 229

    (19) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 19 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 19 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 230

    (20) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 20 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 20 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 231

    (21) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 21 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 21 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 232

    (22) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 22 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 22 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 233

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 241


state 234

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 242


state 235

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 243


state 236

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 244


state 237

    (60) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 60 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 60 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 238

    (61) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 61 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 61 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 239

    (62) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 62 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 62 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 240

    (63) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 63 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 63 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 241

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 245


state 242

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 246


state 243

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 247


state 244

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 248


state 245

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 249

state 246

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 250

state 247

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 251

state 248

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (105) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 27

    int                            shift and go to state 252

state 249

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 253


state 250

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 254


state 251

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 255


state 252

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 256


state 253

    (56) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 56 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 56 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 254

    (57) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 57 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 255

    (58) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 58 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 58 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 256

    (59) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 59 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 59 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

