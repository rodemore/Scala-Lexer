Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    INCREMENT
    ISEMPTY
    MOD
    OBJECT
    RETURN
    REVERSE
    SEMICOLON
    THIS
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> for
Rule 8     cuerpo -> funcionesPropias
Rule 9     cuerpo -> comparacionesVar
Rule 10    declararConstante -> VAL ID COLON tipoValueCons
Rule 11    declararConstante -> VAL ID COLON tipo
Rule 12    declararConstante -> VAL ID EQUAL valueCons
Rule 13    declararConstante -> VAL ID EQUAL expression
Rule 14    declararVariable -> VAR ID COLON tipoValue
Rule 15    declararVariable -> VAR ID COLON tipo
Rule 16    declararVariable -> VAR ID EQUAL value
Rule 17    declararVariable -> VAR ID EQUAL expression
Rule 18    value -> string
Rule 19    value -> booleano
Rule 20    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 22    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 23    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 24    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 25    value -> LIST LPAREN elementosInternos RPAREN
Rule 26    elementosInternos -> elementosInternosInt
Rule 27    elementosInternos -> elementosInternosDouble
Rule 28    elementosInternos -> elementosInternosBool
Rule 29    elementosInternos -> elementosInternosString
Rule 30    elementosInternosInt -> int
Rule 31    elementosInternosInt -> int COMMA elementosInternosInt
Rule 32    elementosInternosDouble -> double
Rule 33    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 34    elementosInternosBool -> booleano
Rule 35    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 36    elementosInternosString -> string
Rule 37    elementosInternosString -> string COMMA elementosInternosString
Rule 38    elementosInternos2 -> int
Rule 39    elementosInternos2 -> double
Rule 40    elementosInternos2 -> booleano
Rule 41    elementosInternos2 -> string
Rule 42    elementosInternos2 -> int COMMA elementosInternos2
Rule 43    elementosInternos2 -> double COMMA elementosInternos2
Rule 44    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 45    elementosInternos2 -> string COMMA elementosInternos2
Rule 46    valueCons -> string
Rule 47    valueCons -> booleano
Rule 48    valueCons -> tupla
Rule 49    tipo -> INT
Rule 50    tipo -> DOUBLE
Rule 51    tipo -> BOOL
Rule 52    tipo -> STRING_TYPE
Rule 53    tipoValue -> STRING_TYPE EQUAL string
Rule 54    tipoValue -> BOOL EQUAL booleano
Rule 55    tipoValue -> INT EQUAL int
Rule 56    tipoValue -> DOUBLE EQUAL double
Rule 57    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 58    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 59    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 61    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 62    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 63    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 65    tipoValueCons -> STRING_TYPE EQUAL string
Rule 66    tipoValueCons -> BOOL EQUAL booleano
Rule 67    tipoValueCons -> INT EQUAL int
Rule 68    tipoValueCons -> DOUBLE EQUAL double
Rule 69    tupla -> LPAREN elementosInternos2 RPAREN
Rule 70    funcionesTupla -> tuplaSwap
Rule 71    funcionesTupla -> tuplaToString
Rule 72    funcionesTupla -> tuplaProductIterator
Rule 73    tuplaSwap -> ID DOT SWAP
Rule 74    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 75    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 76    funcionesArray -> arrayHead
Rule 77    funcionesArray -> arrayTail
Rule 78    funcionesArray -> arrayLength
Rule 79    funcionesPropias -> INPUT LPAREN RPAREN
Rule 80    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 81    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 82    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 83    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 84    arrayHead -> ID DOT HEAD
Rule 85    arrayTail -> ID DOT TAIL
Rule 86    arrayLength -> ID DOT LENGTH
Rule 87    expression -> expression PLUS term
Rule 88    expression -> expression MINUS term
Rule 89    expression -> term
Rule 90    term -> term TIMES factor
Rule 91    term -> term DIVIDE factor
Rule 92    term -> factor
Rule 93    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 94    for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
Rule 95    comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN
Rule 96    comparacionesVar -> ID DOT EQ LPAREN ID RPAREN
Rule 97    comparacion -> GT
Rule 98    comparacion -> GE
Rule 99    comparacion -> LT
Rule 100   comparacion -> LE
Rule 101   comparacion -> EQUAL2
Rule 102   factor -> int
Rule 103   factor -> double
Rule 104   booleano -> TRUE
Rule 105   booleano -> FALSE
Rule 106   string -> STRING
Rule 107   double -> DOUBLE_NUMBER
Rule 108   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 20 21 22 23 24 57 57 58 58 59 59 60 60
BOOL                 : 22 51 54 59 59 63 66
CLASS                : 
COLON                : 10 11 14 15
COMMA                : 31 33 35 37 42 43 44 45
DECREMENT            : 
DEF                  : 
DIVIDE               : 91
DOT                  : 73 74 75 84 85 86 95 96
DOUBLE               : 21 50 56 58 58 62 68
DOUBLE_NUMBER        : 107
ELSE                 : 
EQ                   : 96
EQUAL                : 12 13 16 17 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
EQUAL2               : 101
EQUALS               : 95
FALSE                : 105
FOR                  : 94
GE                   : 98
GT                   : 97
HEAD                 : 84
ID                   : 10 11 12 13 14 15 16 17 73 74 75 82 84 85 86 94 94 95 95 96 96
IF                   : 93
INCREMENT            : 
INPUT                : 79
INT                  : 20 49 55 57 57 61 67
INT_NUMBER           : 108
ISEMPTY              : 
LBRACE               : 93 94
LBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
LE                   : 100
LENGTH               : 86
LIST                 : 25 61 61 62 62 63 63 64 64
LM                   : 94
LPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 94 95 96
LT                   : 99
MINUS                : 88
MOD                  : 
NEW                  : 20 21 22 23 57 58 59 60
OBJECT               : 
PLUS                 : 87
PRINTLN              : 80 81 82 83
PRODUCTITERATOR      : 75
RBRACE               : 93 94
RBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
RETURN               : 
REVERSE              : 
RPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 94 95 96
SEMICOLON            : 
STRING               : 106
STRING_TYPE          : 23 52 53 60 60 64 65
SWAP                 : 73
TAIL                 : 85
THIS                 : 
TIMES                : 90
TOSTRING             : 74
TRUE                 : 104
VAL                  : 10 11 12 13
VAR                  : 14 15 16 17
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 76
arrayLength          : 78
arrayTail            : 77
booleano             : 19 34 35 40 44 47 54 66 81
comparacion          : 93
comparacionesVar     : 9
cuerpo               : 93 94 0
declararConstante    : 4
declararVariable     : 3
double               : 32 33 39 43 56 68 103
elementosInternos    : 24 25 61 62 63 64
elementosInternos2   : 42 43 44 45 69
elementosInternosBool : 28 35
elementosInternosDouble : 27 33
elementosInternosInt : 26 31
elementosInternosString : 29 37
expression           : 1 13 17 83 87 88
factor               : 90 91 92 93 93
for                  : 7
funcionesArray       : 6
funcionesPropias     : 8
funcionesTupla       : 5
int                  : 20 21 22 23 30 31 38 42 55 57 58 59 60 67 102
sentencia            : 2
string               : 18 36 37 41 45 46 53 65 80
term                 : 87 88 89 90 91
tipo                 : 11 15
tipoValue            : 14
tipoValueCons        : 10
tupla                : 48
tuplaProductIterator : 72
tuplaSwap            : 70
tuplaToString        : 71
value                : 16
valueCons            : 12

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . comparacionesVar
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (94) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (96) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    comparacionesVar               shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 13
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 26
    double                         shift and go to state 27

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesArray .

    $end            reduce using rule 6 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesArray .)


state 8

    (7) cuerpo -> for .

    $end            reduce using rule 7 (cuerpo -> for .)
    RBRACE          reduce using rule 7 (cuerpo -> for .)


state 9

    (8) cuerpo -> funcionesPropias .

    $end            reduce using rule 8 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 8 (cuerpo -> funcionesPropias .)


state 10

    (9) cuerpo -> comparacionesVar .

    $end            reduce using rule 9 (cuerpo -> comparacionesVar .)
    RBRACE          reduce using rule 9 (cuerpo -> comparacionesVar .)


state 11

    (89) expression -> term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 89 (expression -> term .)
    MINUS           reduce using rule 89 (expression -> term .)
    $end            reduce using rule 89 (expression -> term .)
    RPAREN          reduce using rule 89 (expression -> term .)
    RBRACE          reduce using rule 89 (expression -> term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 12

    (93) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    factor                         shift and go to state 34
    int                            shift and go to state 26
    double                         shift and go to state 27

state 13

    (92) term -> factor .

    TIMES           reduce using rule 92 (term -> factor .)
    DIVIDE          reduce using rule 92 (term -> factor .)
    PLUS            reduce using rule 92 (term -> factor .)
    MINUS           reduce using rule 92 (term -> factor .)
    $end            reduce using rule 92 (term -> factor .)
    RPAREN          reduce using rule 92 (term -> factor .)
    RBRACE          reduce using rule 92 (term -> factor .)


state 14

    (14) declararVariable -> VAR . ID COLON tipoValue
    (15) declararVariable -> VAR . ID COLON tipo
    (16) declararVariable -> VAR . ID EQUAL value
    (17) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 35


state 15

    (95) comparacionesVar -> ID . DOT EQUALS LPAREN ID RPAREN
    (96) comparacionesVar -> ID . DOT EQ LPAREN ID RPAREN
    (73) tuplaSwap -> ID . DOT SWAP
    (74) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (84) arrayHead -> ID . DOT HEAD
    (85) arrayTail -> ID . DOT TAIL
    (86) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 36


state 16

    (10) declararConstante -> VAL . ID COLON tipoValueCons
    (11) declararConstante -> VAL . ID COLON tipo
    (12) declararConstante -> VAL . ID EQUAL valueCons
    (13) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 37


state 17

    (70) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 70 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 70 (funcionesTupla -> tuplaSwap .)


state 18

    (71) funcionesTupla -> tuplaToString .

    $end            reduce using rule 71 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 71 (funcionesTupla -> tuplaToString .)


state 19

    (72) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 72 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 72 (funcionesTupla -> tuplaProductIterator .)


state 20

    (76) funcionesArray -> arrayHead .

    $end            reduce using rule 76 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 76 (funcionesArray -> arrayHead .)


state 21

    (77) funcionesArray -> arrayTail .

    $end            reduce using rule 77 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 77 (funcionesArray -> arrayTail .)


state 22

    (78) funcionesArray -> arrayLength .

    $end            reduce using rule 78 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 78 (funcionesArray -> arrayLength .)


state 23

    (94) for -> FOR . LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 38


state 24

    (79) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 39


state 25

    (80) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (81) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (82) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (83) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 40


state 26

    (102) factor -> int .

    TIMES           reduce using rule 102 (factor -> int .)
    DIVIDE          reduce using rule 102 (factor -> int .)
    PLUS            reduce using rule 102 (factor -> int .)
    MINUS           reduce using rule 102 (factor -> int .)
    $end            reduce using rule 102 (factor -> int .)
    GT              reduce using rule 102 (factor -> int .)
    GE              reduce using rule 102 (factor -> int .)
    LT              reduce using rule 102 (factor -> int .)
    LE              reduce using rule 102 (factor -> int .)
    EQUAL2          reduce using rule 102 (factor -> int .)
    RPAREN          reduce using rule 102 (factor -> int .)
    RBRACE          reduce using rule 102 (factor -> int .)
    LBRACE          reduce using rule 102 (factor -> int .)


state 27

    (103) factor -> double .

    TIMES           reduce using rule 103 (factor -> double .)
    DIVIDE          reduce using rule 103 (factor -> double .)
    PLUS            reduce using rule 103 (factor -> double .)
    MINUS           reduce using rule 103 (factor -> double .)
    $end            reduce using rule 103 (factor -> double .)
    GT              reduce using rule 103 (factor -> double .)
    GE              reduce using rule 103 (factor -> double .)
    LT              reduce using rule 103 (factor -> double .)
    LE              reduce using rule 103 (factor -> double .)
    EQUAL2          reduce using rule 103 (factor -> double .)
    RPAREN          reduce using rule 103 (factor -> double .)
    RBRACE          reduce using rule 103 (factor -> double .)
    LBRACE          reduce using rule 103 (factor -> double .)


state 28

    (108) int -> INT_NUMBER .

    TIMES           reduce using rule 108 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 108 (int -> INT_NUMBER .)
    PLUS            reduce using rule 108 (int -> INT_NUMBER .)
    MINUS           reduce using rule 108 (int -> INT_NUMBER .)
    $end            reduce using rule 108 (int -> INT_NUMBER .)
    GT              reduce using rule 108 (int -> INT_NUMBER .)
    GE              reduce using rule 108 (int -> INT_NUMBER .)
    LT              reduce using rule 108 (int -> INT_NUMBER .)
    LE              reduce using rule 108 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 108 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 108 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 108 (int -> INT_NUMBER .)
    LBRACE          reduce using rule 108 (int -> INT_NUMBER .)
    COMMA           reduce using rule 108 (int -> INT_NUMBER .)


state 29

    (107) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 107 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 107 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 107 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 107 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 107 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 107 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 107 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 107 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 107 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 107 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 107 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 107 (double -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 107 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 107 (double -> DOUBLE_NUMBER .)


state 30

    (87) expression -> expression PLUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    term                           shift and go to state 41
    factor                         shift and go to state 13
    int                            shift and go to state 26
    double                         shift and go to state 27

state 31

    (88) expression -> expression MINUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    term                           shift and go to state 42
    factor                         shift and go to state 13
    int                            shift and go to state 26
    double                         shift and go to state 27

state 32

    (90) term -> term TIMES . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    factor                         shift and go to state 43
    int                            shift and go to state 26
    double                         shift and go to state 27

state 33

    (91) term -> term DIVIDE . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    factor                         shift and go to state 44
    int                            shift and go to state 26
    double                         shift and go to state 27

state 34

    (93) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (97) comparacion -> . GT
    (98) comparacion -> . GE
    (99) comparacion -> . LT
    (100) comparacion -> . LE
    (101) comparacion -> . EQUAL2

    GT              shift and go to state 46
    GE              shift and go to state 47
    LT              shift and go to state 48
    LE              shift and go to state 49
    EQUAL2          shift and go to state 50

    comparacion                    shift and go to state 45

state 35

    (14) declararVariable -> VAR ID . COLON tipoValue
    (15) declararVariable -> VAR ID . COLON tipo
    (16) declararVariable -> VAR ID . EQUAL value
    (17) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 51
    EQUAL           shift and go to state 52


state 36

    (95) comparacionesVar -> ID DOT . EQUALS LPAREN ID RPAREN
    (96) comparacionesVar -> ID DOT . EQ LPAREN ID RPAREN
    (73) tuplaSwap -> ID DOT . SWAP
    (74) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (84) arrayHead -> ID DOT . HEAD
    (85) arrayTail -> ID DOT . TAIL
    (86) arrayLength -> ID DOT . LENGTH

    EQUALS          shift and go to state 53
    EQ              shift and go to state 54
    SWAP            shift and go to state 55
    TOSTRING        shift and go to state 56
    PRODUCTITERATOR shift and go to state 57
    HEAD            shift and go to state 58
    TAIL            shift and go to state 59
    LENGTH          shift and go to state 60


state 37

    (10) declararConstante -> VAL ID . COLON tipoValueCons
    (11) declararConstante -> VAL ID . COLON tipo
    (12) declararConstante -> VAL ID . EQUAL valueCons
    (13) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 61
    EQUAL           shift and go to state 62


state 38

    (94) for -> FOR LPAREN . ID LM ID RPAREN LBRACE cuerpo RBRACE

    ID              shift and go to state 63


state 39

    (79) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 64


state 40

    (80) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (81) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (82) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (83) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (106) string -> . STRING
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    ID              shift and go to state 67
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    string                         shift and go to state 65
    booleano                       shift and go to state 66
    expression                     shift and go to state 68
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 26
    double                         shift and go to state 27

state 41

    (87) expression -> expression PLUS term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 87 (expression -> expression PLUS term .)
    MINUS           reduce using rule 87 (expression -> expression PLUS term .)
    $end            reduce using rule 87 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 87 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 87 (expression -> expression PLUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 42

    (88) expression -> expression MINUS term .
    (90) term -> term . TIMES factor
    (91) term -> term . DIVIDE factor

    PLUS            reduce using rule 88 (expression -> expression MINUS term .)
    MINUS           reduce using rule 88 (expression -> expression MINUS term .)
    $end            reduce using rule 88 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 88 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 88 (expression -> expression MINUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 43

    (90) term -> term TIMES factor .

    TIMES           reduce using rule 90 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 90 (term -> term TIMES factor .)
    PLUS            reduce using rule 90 (term -> term TIMES factor .)
    MINUS           reduce using rule 90 (term -> term TIMES factor .)
    $end            reduce using rule 90 (term -> term TIMES factor .)
    RPAREN          reduce using rule 90 (term -> term TIMES factor .)
    RBRACE          reduce using rule 90 (term -> term TIMES factor .)


state 44

    (91) term -> term DIVIDE factor .

    TIMES           reduce using rule 91 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 91 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 91 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 91 (term -> term DIVIDE factor .)
    $end            reduce using rule 91 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 91 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 91 (term -> term DIVIDE factor .)


state 45

    (93) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    factor                         shift and go to state 72
    int                            shift and go to state 26
    double                         shift and go to state 27

state 46

    (97) comparacion -> GT .

    INT_NUMBER      reduce using rule 97 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 97 (comparacion -> GT .)


state 47

    (98) comparacion -> GE .

    INT_NUMBER      reduce using rule 98 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 98 (comparacion -> GE .)


state 48

    (99) comparacion -> LT .

    INT_NUMBER      reduce using rule 99 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 99 (comparacion -> LT .)


state 49

    (100) comparacion -> LE .

    INT_NUMBER      reduce using rule 100 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 100 (comparacion -> LE .)


state 50

    (101) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 101 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 101 (comparacion -> EQUAL2 .)


state 51

    (14) declararVariable -> VAR ID COLON . tipoValue
    (15) declararVariable -> VAR ID COLON . tipo
    (53) tipoValue -> . STRING_TYPE EQUAL string
    (54) tipoValue -> . BOOL EQUAL booleano
    (55) tipoValue -> . INT EQUAL int
    (56) tipoValue -> . DOUBLE EQUAL double
    (57) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (61) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 75
    BOOL            shift and go to state 76
    INT             shift and go to state 77
    DOUBLE          shift and go to state 78
    ARRAY           shift and go to state 79
    LIST            shift and go to state 80

    tipoValue                      shift and go to state 73
    tipo                           shift and go to state 74

state 52

    (16) declararVariable -> VAR ID EQUAL . value
    (17) declararVariable -> VAR ID EQUAL . expression
    (18) value -> . string
    (19) value -> . booleano
    (20) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (24) value -> . ARRAY LPAREN elementosInternos RPAREN
    (25) value -> . LIST LPAREN elementosInternos RPAREN
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (106) string -> . STRING
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 85
    ARRAY           shift and go to state 86
    LIST            shift and go to state 87
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    value                          shift and go to state 81
    expression                     shift and go to state 82
    string                         shift and go to state 83
    booleano                       shift and go to state 84
    int                            shift and go to state 26
    term                           shift and go to state 11
    factor                         shift and go to state 13
    double                         shift and go to state 27

state 53

    (95) comparacionesVar -> ID DOT EQUALS . LPAREN ID RPAREN

    LPAREN          shift and go to state 88


state 54

    (96) comparacionesVar -> ID DOT EQ . LPAREN ID RPAREN

    LPAREN          shift and go to state 89


state 55

    (73) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 73 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 73 (tuplaSwap -> ID DOT SWAP .)


state 56

    (74) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 90


state 57

    (75) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 75 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 75 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 58

    (84) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 84 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 84 (arrayHead -> ID DOT HEAD .)


state 59

    (85) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 85 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 85 (arrayTail -> ID DOT TAIL .)


state 60

    (86) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 86 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 86 (arrayLength -> ID DOT LENGTH .)


state 61

    (10) declararConstante -> VAL ID COLON . tipoValueCons
    (11) declararConstante -> VAL ID COLON . tipo
    (65) tipoValueCons -> . STRING_TYPE EQUAL string
    (66) tipoValueCons -> . BOOL EQUAL booleano
    (67) tipoValueCons -> . INT EQUAL int
    (68) tipoValueCons -> . DOUBLE EQUAL double
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 93
    BOOL            shift and go to state 94
    INT             shift and go to state 95
    DOUBLE          shift and go to state 96

    tipoValueCons                  shift and go to state 91
    tipo                           shift and go to state 92

state 62

    (12) declararConstante -> VAL ID EQUAL . valueCons
    (13) declararConstante -> VAL ID EQUAL . expression
    (46) valueCons -> . string
    (47) valueCons -> . booleano
    (48) valueCons -> . tupla
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (106) string -> . STRING
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (69) tupla -> . LPAREN elementosInternos2 RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    LPAREN          shift and go to state 102
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    valueCons                      shift and go to state 97
    expression                     shift and go to state 98
    string                         shift and go to state 99
    booleano                       shift and go to state 100
    tupla                          shift and go to state 101
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 26
    double                         shift and go to state 27

state 63

    (94) for -> FOR LPAREN ID . LM ID RPAREN LBRACE cuerpo RBRACE

    LM              shift and go to state 103


state 64

    (79) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 79 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 79 (funcionesPropias -> INPUT LPAREN RPAREN .)


state 65

    (80) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 104


state 66

    (81) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 105


state 67

    (82) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 106


state 68

    (83) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 69

    (106) string -> STRING .

    RPAREN          reduce using rule 106 (string -> STRING .)
    $end            reduce using rule 106 (string -> STRING .)
    RBRACE          reduce using rule 106 (string -> STRING .)
    COMMA           reduce using rule 106 (string -> STRING .)


state 70

    (104) booleano -> TRUE .

    RPAREN          reduce using rule 104 (booleano -> TRUE .)
    $end            reduce using rule 104 (booleano -> TRUE .)
    RBRACE          reduce using rule 104 (booleano -> TRUE .)
    COMMA           reduce using rule 104 (booleano -> TRUE .)


state 71

    (105) booleano -> FALSE .

    RPAREN          reduce using rule 105 (booleano -> FALSE .)
    $end            reduce using rule 105 (booleano -> FALSE .)
    RBRACE          reduce using rule 105 (booleano -> FALSE .)
    COMMA           reduce using rule 105 (booleano -> FALSE .)


state 72

    (93) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 108


state 73

    (14) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 14 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 14 (declararVariable -> VAR ID COLON tipoValue .)


state 74

    (15) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 15 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 15 (declararVariable -> VAR ID COLON tipo .)


state 75

    (53) tipoValue -> STRING_TYPE . EQUAL string
    (52) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 109
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)


state 76

    (54) tipoValue -> BOOL . EQUAL booleano
    (51) tipo -> BOOL .

    EQUAL           shift and go to state 110
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)


state 77

    (55) tipoValue -> INT . EQUAL int
    (49) tipo -> INT .

    EQUAL           shift and go to state 111
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)


state 78

    (56) tipoValue -> DOUBLE . EQUAL double
    (50) tipo -> DOUBLE .

    EQUAL           shift and go to state 112
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)


state 79

    (57) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 113


state 80

    (61) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    LBRACK          shift and go to state 114


state 81

    (16) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 16 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 16 (declararVariable -> VAR ID EQUAL value .)


state 82

    (17) declararVariable -> VAR ID EQUAL expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 17 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 17 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 83

    (18) value -> string .

    $end            reduce using rule 18 (value -> string .)
    RBRACE          reduce using rule 18 (value -> string .)


state 84

    (19) value -> booleano .

    $end            reduce using rule 19 (value -> booleano .)
    RBRACE          reduce using rule 19 (value -> booleano .)


state 85

    (20) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 115


state 86

    (24) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 116


state 87

    (25) value -> LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 117


state 88

    (95) comparacionesVar -> ID DOT EQUALS LPAREN . ID RPAREN

    ID              shift and go to state 118


state 89

    (96) comparacionesVar -> ID DOT EQ LPAREN . ID RPAREN

    ID              shift and go to state 119


state 90

    (74) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 120


state 91

    (10) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 10 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 10 (declararConstante -> VAL ID COLON tipoValueCons .)


state 92

    (11) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 11 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 11 (declararConstante -> VAL ID COLON tipo .)


state 93

    (65) tipoValueCons -> STRING_TYPE . EQUAL string
    (52) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 121
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)


state 94

    (66) tipoValueCons -> BOOL . EQUAL booleano
    (51) tipo -> BOOL .

    EQUAL           shift and go to state 122
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)


state 95

    (67) tipoValueCons -> INT . EQUAL int
    (49) tipo -> INT .

    EQUAL           shift and go to state 123
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)


state 96

    (68) tipoValueCons -> DOUBLE . EQUAL double
    (50) tipo -> DOUBLE .

    EQUAL           shift and go to state 124
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)


state 97

    (12) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 12 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 12 (declararConstante -> VAL ID EQUAL valueCons .)


state 98

    (13) declararConstante -> VAL ID EQUAL expression .
    (87) expression -> expression . PLUS term
    (88) expression -> expression . MINUS term

    $end            reduce using rule 13 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 13 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 99

    (46) valueCons -> string .

    $end            reduce using rule 46 (valueCons -> string .)
    RBRACE          reduce using rule 46 (valueCons -> string .)


state 100

    (47) valueCons -> booleano .

    $end            reduce using rule 47 (valueCons -> booleano .)
    RBRACE          reduce using rule 47 (valueCons -> booleano .)


state 101

    (48) valueCons -> tupla .

    $end            reduce using rule 48 (valueCons -> tupla .)
    RBRACE          reduce using rule 48 (valueCons -> tupla .)


state 102

    (69) tupla -> LPAREN . elementosInternos2 RPAREN
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos2             shift and go to state 125
    int                            shift and go to state 126
    double                         shift and go to state 127
    booleano                       shift and go to state 128
    string                         shift and go to state 129

state 103

    (94) for -> FOR LPAREN ID LM . ID RPAREN LBRACE cuerpo RBRACE

    ID              shift and go to state 130


state 104

    (80) funcionesPropias -> PRINTLN LPAREN string RPAREN .

    $end            reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 80 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)


state 105

    (81) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .

    $end            reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 81 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)


state 106

    (82) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

    $end            reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 82 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)


state 107

    (83) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

    $end            reduce using rule 83 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 83 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)


state 108

    (93) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . comparacionesVar
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (94) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (96) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    factor                         shift and go to state 13
    cuerpo                         shift and go to state 131
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    comparacionesVar               shift and go to state 10
    term                           shift and go to state 11
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 26
    double                         shift and go to state 27

state 109

    (53) tipoValue -> STRING_TYPE EQUAL . string
    (106) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 132

state 110

    (54) tipoValue -> BOOL EQUAL . booleano
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 133

state 111

    (55) tipoValue -> INT EQUAL . int
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 134

state 112

    (56) tipoValue -> DOUBLE EQUAL . double
    (107) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 29

    double                         shift and go to state 135

state 113

    (57) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    STRING_TYPE     shift and go to state 139


state 114

    (61) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    INT             shift and go to state 140
    DOUBLE          shift and go to state 141
    BOOL            shift and go to state 142
    STRING_TYPE     shift and go to state 143


state 115

    (20) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 144


state 116

    (24) value -> ARRAY LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 145
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 117

    (25) value -> LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 154
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 118

    (95) comparacionesVar -> ID DOT EQUALS LPAREN ID . RPAREN

    RPAREN          shift and go to state 155


state 119

    (96) comparacionesVar -> ID DOT EQ LPAREN ID . RPAREN

    RPAREN          shift and go to state 156


state 120

    (74) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 74 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 74 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 121

    (65) tipoValueCons -> STRING_TYPE EQUAL . string
    (106) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 157

state 122

    (66) tipoValueCons -> BOOL EQUAL . booleano
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 158

state 123

    (67) tipoValueCons -> INT EQUAL . int
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 159

state 124

    (68) tipoValueCons -> DOUBLE EQUAL . double
    (107) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 29

    double                         shift and go to state 160

state 125

    (69) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 161


state 126

    (38) elementosInternos2 -> int .
    (42) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 38 (elementosInternos2 -> int .)
    COMMA           shift and go to state 162


state 127

    (39) elementosInternos2 -> double .
    (43) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 39 (elementosInternos2 -> double .)
    COMMA           shift and go to state 163


state 128

    (40) elementosInternos2 -> booleano .
    (44) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 40 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 164


state 129

    (41) elementosInternos2 -> string .
    (45) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 41 (elementosInternos2 -> string .)
    COMMA           shift and go to state 165


state 130

    (94) for -> FOR LPAREN ID LM ID . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 166


state 131

    (93) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 167


state 132

    (53) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 53 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 53 (tipoValue -> STRING_TYPE EQUAL string .)


state 133

    (54) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 54 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 54 (tipoValue -> BOOL EQUAL booleano .)


state 134

    (55) tipoValue -> INT EQUAL int .

    $end            reduce using rule 55 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 55 (tipoValue -> INT EQUAL int .)


state 135

    (56) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 56 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 56 (tipoValue -> DOUBLE EQUAL double .)


state 136

    (57) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 168


state 137

    (58) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 169


state 138

    (59) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 170


state 139

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 171


state 140

    (61) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 172


state 141

    (62) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 173


state 142

    (63) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 174


state 143

    (64) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 175


state 144

    (20) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 176
    DOUBLE          shift and go to state 177
    BOOL            shift and go to state 178
    STRING_TYPE     shift and go to state 179


state 145

    (24) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 180


state 146

    (26) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 26 (elementosInternos -> elementosInternosInt .)


state 147

    (27) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 27 (elementosInternos -> elementosInternosDouble .)


state 148

    (28) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 28 (elementosInternos -> elementosInternosBool .)


state 149

    (29) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 29 (elementosInternos -> elementosInternosString .)


state 150

    (30) elementosInternosInt -> int .
    (31) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 30 (elementosInternosInt -> int .)
    COMMA           shift and go to state 181


state 151

    (32) elementosInternosDouble -> double .
    (33) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 32 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 182


state 152

    (34) elementosInternosBool -> booleano .
    (35) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 34 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 183


state 153

    (36) elementosInternosString -> string .
    (37) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 36 (elementosInternosString -> string .)
    COMMA           shift and go to state 184


state 154

    (25) value -> LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 185


state 155

    (95) comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .

    $end            reduce using rule 95 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)
    RBRACE          reduce using rule 95 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)


state 156

    (96) comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .

    $end            reduce using rule 96 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)
    RBRACE          reduce using rule 96 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)


state 157

    (65) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 65 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 65 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 158

    (66) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 66 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 66 (tipoValueCons -> BOOL EQUAL booleano .)


state 159

    (67) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 67 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 67 (tipoValueCons -> INT EQUAL int .)


state 160

    (68) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 68 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 68 (tipoValueCons -> DOUBLE EQUAL double .)


state 161

    (69) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 69 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 69 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 162

    (42) elementosInternos2 -> int COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    int                            shift and go to state 126
    elementosInternos2             shift and go to state 186
    double                         shift and go to state 127
    booleano                       shift and go to state 128
    string                         shift and go to state 129

state 163

    (43) elementosInternos2 -> double COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    double                         shift and go to state 127
    elementosInternos2             shift and go to state 187
    int                            shift and go to state 126
    booleano                       shift and go to state 128
    string                         shift and go to state 129

state 164

    (44) elementosInternos2 -> booleano COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    booleano                       shift and go to state 128
    elementosInternos2             shift and go to state 188
    int                            shift and go to state 126
    double                         shift and go to state 127
    string                         shift and go to state 129

state 165

    (45) elementosInternos2 -> string COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    string                         shift and go to state 129
    elementosInternos2             shift and go to state 189
    int                            shift and go to state 126
    double                         shift and go to state 127
    booleano                       shift and go to state 128

state 166

    (94) for -> FOR LPAREN ID LM ID RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 190


state 167

    (93) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 93 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 93 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 168

    (57) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 191


state 169

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 192


state 170

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 193


state 171

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 194


state 172

    (61) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 195


state 173

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 196


state 174

    (63) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 197


state 175

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 198


state 176

    (20) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 199


state 177

    (21) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 200


state 178

    (22) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 201


state 179

    (23) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 202


state 180

    (24) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 24 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 24 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 181

    (31) elementosInternosInt -> int COMMA . elementosInternosInt
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 150
    elementosInternosInt           shift and go to state 203

state 182

    (33) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (107) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 29

    double                         shift and go to state 151
    elementosInternosDouble        shift and go to state 204

state 183

    (35) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 152
    elementosInternosBool          shift and go to state 205

state 184

    (37) elementosInternosString -> string COMMA . elementosInternosString
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (106) string -> . STRING

    STRING          shift and go to state 69

    string                         shift and go to state 153
    elementosInternosString        shift and go to state 206

state 185

    (25) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 25 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 25 (value -> LIST LPAREN elementosInternos RPAREN .)


state 186

    (42) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 42 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 187

    (43) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 43 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 188

    (44) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 44 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 189

    (45) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 45 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 190

    (94) for -> FOR LPAREN ID LM ID RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . comparacionesVar
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (94) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (96) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (102) factor -> . int
    (103) factor -> . double
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29

    cuerpo                         shift and go to state 207
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    comparacionesVar               shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 13
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 26
    double                         shift and go to state 27

state 191

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 208


state 192

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 209


state 193

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 210


state 194

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 211


state 195

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 212


state 196

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 213


state 197

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 214


state 198

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 215


state 199

    (20) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 216


state 200

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 217


state 201

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 218


state 202

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 219


state 203

    (31) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 31 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 204

    (33) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 33 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 205

    (35) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 35 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 206

    (37) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 37 (elementosInternosString -> string COMMA elementosInternosString .)


state 207

    (94) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 220


state 208

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 221


state 209

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 222


state 210

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 223


state 211

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 224


state 212

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 225


state 213

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 226


state 214

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 227


state 215

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 228


state 216

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 229

state 217

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 230

state 218

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 231

state 219

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 232

state 220

    (94) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 94 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 94 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)


state 221

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 233


state 222

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 234


state 223

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 235


state 224

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 236


state 225

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 237
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 226

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 238
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 227

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 239
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 228

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (108) int -> . INT_NUMBER
    (107) double -> . DOUBLE_NUMBER
    (104) booleano -> . TRUE
    (105) booleano -> . FALSE
    (106) string -> . STRING

    INT_NUMBER      shift and go to state 28
    DOUBLE_NUMBER   shift and go to state 29
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 240
    elementosInternosInt           shift and go to state 146
    elementosInternosDouble        shift and go to state 147
    elementosInternosBool          shift and go to state 148
    elementosInternosString        shift and go to state 149
    int                            shift and go to state 150
    double                         shift and go to state 151
    booleano                       shift and go to state 152
    string                         shift and go to state 153

state 229

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 241


state 230

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 242


state 231

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 243


state 232

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 244


state 233

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 245


state 234

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 246


state 235

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 247


state 236

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 248


state 237

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 249


state 238

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 250


state 239

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 251


state 240

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 252


state 241

    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 20 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 20 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 242

    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 21 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 21 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 243

    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 22 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 22 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 244

    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 23 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 23 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 245

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 253


state 246

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 254


state 247

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 255


state 248

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 256


state 249

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 61 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 61 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 250

    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 62 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 62 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 251

    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 63 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 63 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 252

    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 64 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 64 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 253

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 257


state 254

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 258


state 255

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 259


state 256

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 260


state 257

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 261

state 258

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 262

state 259

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 263

state 260

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (108) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 28

    int                            shift and go to state 264

state 261

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 265


state 262

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 266


state 263

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 267


state 264

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 268


state 265

    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 57 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 266

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 58 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 58 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 267

    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 59 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 59 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 268

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 60 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 60 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

