Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CLASS
    DECREMENT
    DEF
    INCREMENT
    MOD
    OBJECT
    OR
    RETURN
    SEMICOLON
    THIS
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
<<<<<<< HEAD
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> for
Rule 8     cuerpo -> funcionesPropias
Rule 9     cuerpo -> while
Rule 10    declararConstante -> VAL ID COLON tipoValueCons
Rule 11    declararConstante -> VAL ID COLON tipo
Rule 12    declararConstante -> VAL ID EQUAL valueCons
Rule 13    declararConstante -> VAL ID EQUAL expression
Rule 14    declararVariable -> VAR ID COLON tipoValue
Rule 15    declararVariable -> VAR ID COLON tipo
Rule 16    declararVariable -> VAR ID EQUAL value
Rule 17    declararVariable -> VAR ID EQUAL expression
Rule 18    value -> string
Rule 19    value -> booleano
Rule 20    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 22    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 23    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 24    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 25    value -> LIST LPAREN elementosInternos RPAREN
Rule 26    elementosInternos -> elementosInternosInt
Rule 27    elementosInternos -> elementosInternosDouble
Rule 28    elementosInternos -> elementosInternosBool
Rule 29    elementosInternos -> elementosInternosString
Rule 30    elementosInternosInt -> int
Rule 31    elementosInternosInt -> int COMMA elementosInternosInt
Rule 32    elementosInternosDouble -> double
Rule 33    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 34    elementosInternosBool -> booleano
Rule 35    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 36    elementosInternosString -> string
Rule 37    elementosInternosString -> string COMMA elementosInternosString
Rule 38    elementosInternos2 -> int
Rule 39    elementosInternos2 -> double
Rule 40    elementosInternos2 -> booleano
Rule 41    elementosInternos2 -> string
Rule 42    elementosInternos2 -> int COMMA elementosInternos2
Rule 43    elementosInternos2 -> double COMMA elementosInternos2
Rule 44    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 45    elementosInternos2 -> string COMMA elementosInternos2
Rule 46    valueCons -> string
Rule 47    valueCons -> booleano
Rule 48    valueCons -> tupla
Rule 49    tipo -> INT
Rule 50    tipo -> DOUBLE
Rule 51    tipo -> BOOL
Rule 52    tipo -> STRING_TYPE
Rule 53    tipoValue -> STRING_TYPE EQUAL string
Rule 54    tipoValue -> BOOL EQUAL booleano
Rule 55    tipoValue -> INT EQUAL int
Rule 56    tipoValue -> DOUBLE EQUAL double
Rule 57    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 58    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 59    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 61    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 62    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 63    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 65    tipoValueCons -> STRING_TYPE EQUAL string
Rule 66    tipoValueCons -> BOOL EQUAL booleano
Rule 67    tipoValueCons -> INT EQUAL int
Rule 68    tipoValueCons -> DOUBLE EQUAL double
Rule 69    tupla -> LPAREN elementosInternos2 RPAREN
Rule 70    funcionesTupla -> tuplaSwap
Rule 71    funcionesTupla -> tuplaToString
Rule 72    funcionesTupla -> tuplaProductIterator
Rule 73    tuplaSwap -> ID DOT SWAP
Rule 74    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 75    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 76    funcionesArray -> arrayHead
Rule 77    funcionesArray -> arrayTail
Rule 78    funcionesArray -> arrayLength
Rule 79    funcionesPropias -> INPUT LPAREN RPAREN
Rule 80    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 81    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 82    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 83    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 84    arrayHead -> ID DOT HEAD
Rule 85    arrayTail -> ID DOT TAIL
Rule 86    arrayLength -> ID DOT LENGTH
Rule 87    expression -> expression PLUS term
Rule 88    expression -> expression MINUS term
Rule 89    expression -> term
Rule 90    term -> term TIMES factor
Rule 91    term -> term DIVIDE factor
Rule 92    term -> factor
Rule 93    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 94    comp -> factor comparacion factor
Rule 95    while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
Rule 96    whileclause -> comp
Rule 97    whileclause -> ID
Rule 98    whileclause -> booleano
Rule 99    for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE
Rule 100   comparacion -> GT
Rule 101   comparacion -> GE
Rule 102   comparacion -> LT
Rule 103   comparacion -> LE
Rule 104   comparacion -> EQUAL2
Rule 105   factor -> int
Rule 106   factor -> double
Rule 107   booleano -> TRUE
Rule 108   booleano -> FALSE
Rule 109   string -> STRING
Rule 110   double -> DOUBLE_NUMBER
Rule 111   int -> INT_NUMBER

Terminals, with rules where they appear

AND                  : 
ARRAY                : 20 21 22 23 24 57 57 58 58 59 59 60 60
BOOL                 : 22 51 54 59 59 63 66
=======
Rule 6     cuerpo -> funcionesList
Rule 7     cuerpo -> funcionesArray
Rule 8     cuerpo -> for
Rule 9     cuerpo -> funcionesPropias
Rule 10    cuerpo -> comparacionesVar
Rule 11    cuerpo -> while
Rule 12    declararConstante -> VAL ID COLON tipoValueCons
Rule 13    declararConstante -> VAL ID COLON tipo
Rule 14    declararConstante -> VAL ID EQUAL valueCons
Rule 15    declararConstante -> VAL ID EQUAL expression
Rule 16    declararVariable -> VAR ID COLON tipoValue
Rule 17    declararVariable -> VAR ID COLON tipo
Rule 18    declararVariable -> VAR ID EQUAL value
Rule 19    declararVariable -> VAR ID EQUAL expression
Rule 20    value -> string
Rule 21    value -> booleano
Rule 22    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 23    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 24    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 25    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 26    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 27    value -> LIST LPAREN elementosInternos RPAREN
Rule 28    elementosInternos -> elementosInternosInt
Rule 29    elementosInternos -> elementosInternosDouble
Rule 30    elementosInternos -> elementosInternosBool
Rule 31    elementosInternos -> elementosInternosString
Rule 32    elementosInternosInt -> int
Rule 33    elementosInternosInt -> int COMMA elementosInternosInt
Rule 34    elementosInternosDouble -> double
Rule 35    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 36    elementosInternosBool -> booleano
Rule 37    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 38    elementosInternosString -> string
Rule 39    elementosInternosString -> string COMMA elementosInternosString
Rule 40    elementosInternos2 -> int
Rule 41    elementosInternos2 -> double
Rule 42    elementosInternos2 -> booleano
Rule 43    elementosInternos2 -> string
Rule 44    elementosInternos2 -> int COMMA elementosInternos2
Rule 45    elementosInternos2 -> double COMMA elementosInternos2
Rule 46    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 47    elementosInternos2 -> string COMMA elementosInternos2
Rule 48    valueCons -> string
Rule 49    valueCons -> booleano
Rule 50    valueCons -> tupla
Rule 51    tipo -> INT
Rule 52    tipo -> DOUBLE
Rule 53    tipo -> BOOL
Rule 54    tipo -> STRING_TYPE
Rule 55    tipoValue -> STRING_TYPE EQUAL string
Rule 56    tipoValue -> BOOL EQUAL booleano
Rule 57    tipoValue -> INT EQUAL int
Rule 58    tipoValue -> DOUBLE EQUAL double
Rule 59    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 61    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 62    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 63    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 65    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 66    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 67    tipoValueCons -> STRING_TYPE EQUAL string
Rule 68    tipoValueCons -> BOOL EQUAL booleano
Rule 69    tipoValueCons -> INT EQUAL int
Rule 70    tipoValueCons -> DOUBLE EQUAL double
Rule 71    tupla -> LPAREN elementosInternos2 RPAREN
Rule 72    funcionesTupla -> tuplaSwap
Rule 73    funcionesTupla -> tuplaToString
Rule 74    funcionesTupla -> tuplaProductIterator
Rule 75    tuplaSwap -> ID DOT SWAP
Rule 76    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 77    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 78    funcionesArray -> arrayHead
Rule 79    funcionesArray -> arrayTail
Rule 80    funcionesArray -> arrayLength
Rule 81    funcionesList -> listIsEmpty
Rule 82    funcionesList -> listReverse
Rule 83    funcionesPropias -> INPUT LPAREN RPAREN
Rule 84    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 85    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 86    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 87    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 88    arrayHead -> ID DOT HEAD
Rule 89    arrayTail -> ID DOT TAIL
Rule 90    arrayLength -> ID DOT LENGTH
Rule 91    listReverse -> ID DOT REVERSE
Rule 92    listIsEmpty -> ID DOT ISEMPTY
Rule 93    expression -> expression PLUS term
Rule 94    expression -> expression MINUS term
Rule 95    expression -> term
Rule 96    term -> term TIMES factor
Rule 97    term -> term DIVIDE factor
Rule 98    term -> factor
Rule 99    if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
Rule 100   sentencia -> if
Rule 101   sentencia -> if ELSE LBRACE cuerpo RBRACE
Rule 102   while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
Rule 103   whileclause -> factor comparacion factor
Rule 104   whileclause -> ID
Rule 105   whileclause -> booleano
Rule 106   for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
Rule 107   comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN
Rule 108   comparacionesVar -> ID DOT EQ LPAREN ID RPAREN
Rule 109   comparacion -> GT
Rule 110   comparacion -> GE
Rule 111   comparacion -> LT
Rule 112   comparacion -> LE
Rule 113   comparacion -> EQUAL2
Rule 114   factor -> int
Rule 115   factor -> double
Rule 116   booleano -> TRUE
Rule 117   booleano -> FALSE
Rule 118   string -> STRING
Rule 119   double -> DOUBLE_NUMBER
Rule 120   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 22 23 24 25 26 59 59 60 60 61 61 62 62
BOOL                 : 24 53 56 61 61 65 68
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e
CLASS                : 
COLON                : 12 13 16 17
COMMA                : 33 35 37 39 44 45 46 47
DECREMENT            : 
DEF                  : 
<<<<<<< HEAD
DIVIDE               : 91
DOT                  : 73 74 75 84 85 86
DOUBLE               : 21 50 56 58 58 62 68
DOUBLE_NUMBER        : 110
ELSE                 : 
EQ                   : 
EQUAL                : 12 13 16 17 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
EQUAL2               : 104
EQUALS               : 
FALSE                : 108
FOR                  : 99
GE                   : 101
GT                   : 100
HEAD                 : 84
ID                   : 10 11 12 13 14 15 16 17 73 74 75 82 84 85 86 97
IF                   : 93
INCREMENT            : 
INPUT                : 79
INT                  : 20 49 55 57 57 61 67
INT_NUMBER           : 111
ISEMPTY              : 
LBRACE               : 93 95 99 99
LBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
LE                   : 103
LENGTH               : 86
LIST                 : 25 61 61 62 62 63 63 64 64
LM                   : 
LPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 95 99
LT                   : 102
MINUS                : 88
=======
DIVIDE               : 97
DOT                  : 75 76 77 88 89 90 91 92 107 108
DOUBLE               : 23 52 58 60 60 64 70
DOUBLE_NUMBER        : 119
ELSE                 : 101
EQ                   : 108
EQUAL                : 14 15 18 19 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
EQUAL2               : 113
EQUALS               : 107
FALSE                : 117
FOR                  : 106
GE                   : 110
GT                   : 109
HEAD                 : 88
ID                   : 12 13 14 15 16 17 18 19 75 76 77 86 88 89 90 91 92 104 106 106 107 107 108 108
IF                   : 99
INCREMENT            : 
INPUT                : 83
INT                  : 22 51 57 59 59 63 69
INT_NUMBER           : 120
ISEMPTY              : 92
LBRACE               : 99 101 102 106
LBRACK               : 22 23 24 25 59 59 60 60 61 61 62 62 63 64 65 66
LE                   : 112
LENGTH               : 90
LIST                 : 27 63 63 64 64 65 65 66 66
LM                   : 106
LPAREN               : 22 23 24 25 26 27 59 60 61 62 63 64 65 66 71 76 83 84 85 86 87 99 102 106 107 108
LT                   : 111
MINUS                : 94
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e
MOD                  : 
NEW                  : 22 23 24 25 59 60 61 62
OBJECT               : 
<<<<<<< HEAD
OR                   : 
PLUS                 : 87
PRINTLN              : 80 81 82 83
PRODUCTITERATOR      : 75
RBRACE               : 93 95 99
RBRACK               : 20 21 22 23 57 57 58 58 59 59 60 60 61 62 63 64
RETURN               : 
REVERSE              : 
RPAREN               : 20 21 22 23 24 25 57 58 59 60 61 62 63 64 69 74 79 80 81 82 83 95 99
SEMICOLON            : 
STRING               : 109
STRING_TYPE          : 23 52 53 60 60 64 65
SWAP                 : 73
TAIL                 : 85
THIS                 : 
TIMES                : 90
TOSTRING             : 74
TRUE                 : 107
VAL                  : 10 11 12 13
VAR                  : 14 15 16 17
WHILE                : 95
=======
PLUS                 : 93
PRINTLN              : 84 85 86 87
PRODUCTITERATOR      : 77
RBRACE               : 99 101 102 106
RBRACK               : 22 23 24 25 59 59 60 60 61 61 62 62 63 64 65 66
RETURN               : 
REVERSE              : 91
RPAREN               : 22 23 24 25 26 27 59 60 61 62 63 64 65 66 71 76 83 84 85 86 87 99 102 106 107 108
SEMICOLON            : 
STRING               : 118
STRING_TYPE          : 25 54 55 62 62 66 67
SWAP                 : 75
TAIL                 : 89
THIS                 : 
TIMES                : 96
TOSTRING             : 76
TRUE                 : 116
VAL                  : 12 13 14 15
VAR                  : 16 17 18 19
WHILE                : 102
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e
error                : 
unit                 : 

Nonterminals, with rules where they appear

<<<<<<< HEAD
arrayHead            : 76
arrayLength          : 78
arrayTail            : 77
booleano             : 19 34 35 40 44 47 54 66 81 98
comp                 : 96
comparacion          : 93 94
cuerpo               : 93 95 0
declararConstante    : 4
declararVariable     : 3
double               : 32 33 39 43 56 68 106
elementosInternos    : 24 25 61 62 63 64
elementosInternos2   : 42 43 44 45 69
elementosInternosBool : 28 35
elementosInternosDouble : 27 33
elementosInternosInt : 26 31
elementosInternosString : 29 37
expression           : 1 13 17 83 87 88
factor               : 90 91 92 93 93 94 94
for                  : 7
funcionesArray       : 6
funcionesPropias     : 8
funcionesTupla       : 5
int                  : 20 21 22 23 30 31 38 42 55 57 58 59 60 67 105
sentencia            : 2
string               : 18 36 37 41 45 46 53 65 80
term                 : 87 88 89 90 91
tipo                 : 11 15
tipoValue            : 14
tipoValueCons        : 10
tupla                : 48
tuplaProductIterator : 72
tuplaSwap            : 70
tuplaToString        : 71
value                : 16
valueCons            : 12
while                : 9
whileclause          : 95
=======
arrayHead            : 78
arrayLength          : 80
arrayTail            : 79
booleano             : 21 36 37 42 46 49 56 68 85 105
comparacion          : 99 103
comparacionesVar     : 10
cuerpo               : 99 101 102 106 0
declararConstante    : 4
declararVariable     : 3
double               : 34 35 41 45 58 70 115
elementosInternos    : 26 27 63 64 65 66
elementosInternos2   : 44 45 46 47 71
elementosInternosBool : 30 37
elementosInternosDouble : 29 35
elementosInternosInt : 28 33
elementosInternosString : 31 39
expression           : 1 15 19 87 93 94
factor               : 96 97 98 99 99 103 103
for                  : 8
funcionesArray       : 7
funcionesList        : 6
funcionesPropias     : 9
funcionesTupla       : 5
if                   : 100 101
int                  : 22 23 24 25 32 33 40 44 57 59 60 61 62 69 114
listIsEmpty          : 81
listReverse          : 82
sentencia            : 2
string               : 20 38 39 43 47 48 55 67 84
term                 : 93 94 95 96 97
tipo                 : 13 17
tipoValue            : 16
tipoValueCons        : 12
tupla                : 50
tuplaProductIterator : 74
tuplaSwap            : 72
tuplaToString        : 73
value                : 18
valueCons            : 14
while                : 11
whileclause          : 102
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
<<<<<<< HEAD
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (99) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
=======
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesList .

    $end            reduce using rule 6 (cuerpo -> funcionesList .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesList .)


state 8

    (7) cuerpo -> funcionesArray .

    $end            reduce using rule 7 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 7 (cuerpo -> funcionesArray .)


state 9

    (8) cuerpo -> for .

    $end            reduce using rule 8 (cuerpo -> for .)
    RBRACE          reduce using rule 8 (cuerpo -> for .)


state 10

    (9) cuerpo -> funcionesPropias .

    $end            reduce using rule 9 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 9 (cuerpo -> funcionesPropias .)


state 11

    (10) cuerpo -> comparacionesVar .

    $end            reduce using rule 10 (cuerpo -> comparacionesVar .)
    RBRACE          reduce using rule 10 (cuerpo -> comparacionesVar .)


state 12

<<<<<<< HEAD
    (93) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (11) cuerpo -> while .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 11 (cuerpo -> while .)
    RBRACE          reduce using rule 11 (cuerpo -> while .)


state 13

    (95) expression -> term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 95 (expression -> term .)
    MINUS           reduce using rule 95 (expression -> term .)
    $end            reduce using rule 95 (expression -> term .)
    RPAREN          reduce using rule 95 (expression -> term .)
    RBRACE          reduce using rule 95 (expression -> term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 14

    (100) sentencia -> if .
    (101) sentencia -> if . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 100 (sentencia -> if .)
    RBRACE          reduce using rule 100 (sentencia -> if .)
    ELSE            shift and go to state 40


state 15

    (16) declararVariable -> VAR . ID COLON tipoValue
    (17) declararVariable -> VAR . ID COLON tipo
    (18) declararVariable -> VAR . ID EQUAL value
    (19) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 41


state 16

    (107) comparacionesVar -> ID . DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> ID . DOT EQ LPAREN ID RPAREN
    (75) tuplaSwap -> ID . DOT SWAP
    (76) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (92) listIsEmpty -> ID . DOT ISEMPTY
    (91) listReverse -> ID . DOT REVERSE
    (88) arrayHead -> ID . DOT HEAD
    (89) arrayTail -> ID . DOT TAIL
    (90) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 42


state 17

    (12) declararConstante -> VAL . ID COLON tipoValueCons
    (13) declararConstante -> VAL . ID COLON tipo
    (14) declararConstante -> VAL . ID EQUAL valueCons
    (15) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 43


state 18

    (72) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 72 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 72 (funcionesTupla -> tuplaSwap .)


state 19

    (73) funcionesTupla -> tuplaToString .

    $end            reduce using rule 73 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 73 (funcionesTupla -> tuplaToString .)


state 20

    (74) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 74 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 74 (funcionesTupla -> tuplaProductIterator .)


state 21

    (81) funcionesList -> listIsEmpty .

    $end            reduce using rule 81 (funcionesList -> listIsEmpty .)
    RBRACE          reduce using rule 81 (funcionesList -> listIsEmpty .)


state 22

    (82) funcionesList -> listReverse .

    $end            reduce using rule 82 (funcionesList -> listReverse .)
    RBRACE          reduce using rule 82 (funcionesList -> listReverse .)


state 23

<<<<<<< HEAD
    (99) for -> FOR . LPAREN RPAREN LBRACE LBRACE RBRACE
=======
    (78) funcionesArray -> arrayHead .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 78 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 78 (funcionesArray -> arrayHead .)


state 24

    (79) funcionesArray -> arrayTail .

    $end            reduce using rule 79 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 79 (funcionesArray -> arrayTail .)


state 25

    (80) funcionesArray -> arrayLength .

    $end            reduce using rule 80 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 80 (funcionesArray -> arrayLength .)


state 26

<<<<<<< HEAD
    (95) while -> WHILE . LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
=======
    (106) for -> FOR . LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LPAREN          shift and go to state 44


state 27

<<<<<<< HEAD
    (105) factor -> int .

    TIMES           reduce using rule 105 (factor -> int .)
    DIVIDE          reduce using rule 105 (factor -> int .)
    PLUS            reduce using rule 105 (factor -> int .)
    MINUS           reduce using rule 105 (factor -> int .)
    $end            reduce using rule 105 (factor -> int .)
    GT              reduce using rule 105 (factor -> int .)
    GE              reduce using rule 105 (factor -> int .)
    LT              reduce using rule 105 (factor -> int .)
    LE              reduce using rule 105 (factor -> int .)
    EQUAL2          reduce using rule 105 (factor -> int .)
    RPAREN          reduce using rule 105 (factor -> int .)
    RBRACE          reduce using rule 105 (factor -> int .)
    LBRACE          reduce using rule 105 (factor -> int .)
=======
    (83) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 45
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 28

<<<<<<< HEAD
    (106) factor -> double .

    TIMES           reduce using rule 106 (factor -> double .)
    DIVIDE          reduce using rule 106 (factor -> double .)
    PLUS            reduce using rule 106 (factor -> double .)
    MINUS           reduce using rule 106 (factor -> double .)
    $end            reduce using rule 106 (factor -> double .)
    GT              reduce using rule 106 (factor -> double .)
    GE              reduce using rule 106 (factor -> double .)
    LT              reduce using rule 106 (factor -> double .)
    LE              reduce using rule 106 (factor -> double .)
    EQUAL2          reduce using rule 106 (factor -> double .)
    RPAREN          reduce using rule 106 (factor -> double .)
    RBRACE          reduce using rule 106 (factor -> double .)
    LBRACE          reduce using rule 106 (factor -> double .)
=======
    (84) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (85) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (86) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (87) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 46
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 29

<<<<<<< HEAD
    (111) int -> INT_NUMBER .

    TIMES           reduce using rule 111 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 111 (int -> INT_NUMBER .)
    PLUS            reduce using rule 111 (int -> INT_NUMBER .)
    MINUS           reduce using rule 111 (int -> INT_NUMBER .)
    $end            reduce using rule 111 (int -> INT_NUMBER .)
    GT              reduce using rule 111 (int -> INT_NUMBER .)
    GE              reduce using rule 111 (int -> INT_NUMBER .)
    LT              reduce using rule 111 (int -> INT_NUMBER .)
    LE              reduce using rule 111 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 111 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 111 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 111 (int -> INT_NUMBER .)
    LBRACE          reduce using rule 111 (int -> INT_NUMBER .)
    COMMA           reduce using rule 111 (int -> INT_NUMBER .)
=======
    (102) while -> WHILE . LPAREN whileclause RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 47
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 30

<<<<<<< HEAD
    (110) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 110 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 110 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 110 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 110 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 110 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 110 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 110 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 110 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 110 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 110 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 110 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 110 (double -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 110 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 110 (double -> DOUBLE_NUMBER .)
=======
    (98) term -> factor .

    TIMES           reduce using rule 98 (term -> factor .)
    DIVIDE          reduce using rule 98 (term -> factor .)
    PLUS            reduce using rule 98 (term -> factor .)
    MINUS           reduce using rule 98 (term -> factor .)
    $end            reduce using rule 98 (term -> factor .)
    RPAREN          reduce using rule 98 (term -> factor .)
    RBRACE          reduce using rule 98 (term -> factor .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 31

<<<<<<< HEAD
    (87) expression -> expression PLUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (99) if -> IF . LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LPAREN          shift and go to state 48


state 32

<<<<<<< HEAD
    (88) expression -> expression MINUS . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (114) factor -> int .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    TIMES           reduce using rule 114 (factor -> int .)
    DIVIDE          reduce using rule 114 (factor -> int .)
    PLUS            reduce using rule 114 (factor -> int .)
    MINUS           reduce using rule 114 (factor -> int .)
    $end            reduce using rule 114 (factor -> int .)
    RPAREN          reduce using rule 114 (factor -> int .)
    RBRACE          reduce using rule 114 (factor -> int .)
    GT              reduce using rule 114 (factor -> int .)
    GE              reduce using rule 114 (factor -> int .)
    LT              reduce using rule 114 (factor -> int .)
    LE              reduce using rule 114 (factor -> int .)
    EQUAL2          reduce using rule 114 (factor -> int .)


state 33

<<<<<<< HEAD
    (90) term -> term TIMES . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (115) factor -> double .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    TIMES           reduce using rule 115 (factor -> double .)
    DIVIDE          reduce using rule 115 (factor -> double .)
    PLUS            reduce using rule 115 (factor -> double .)
    MINUS           reduce using rule 115 (factor -> double .)
    $end            reduce using rule 115 (factor -> double .)
    RPAREN          reduce using rule 115 (factor -> double .)
    RBRACE          reduce using rule 115 (factor -> double .)
    GT              reduce using rule 115 (factor -> double .)
    GE              reduce using rule 115 (factor -> double .)
    LT              reduce using rule 115 (factor -> double .)
    LE              reduce using rule 115 (factor -> double .)
    EQUAL2          reduce using rule 115 (factor -> double .)


state 34

<<<<<<< HEAD
    (91) term -> term DIVIDE . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (120) int -> INT_NUMBER .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    TIMES           reduce using rule 120 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 120 (int -> INT_NUMBER .)
    PLUS            reduce using rule 120 (int -> INT_NUMBER .)
    MINUS           reduce using rule 120 (int -> INT_NUMBER .)
    $end            reduce using rule 120 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 120 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 120 (int -> INT_NUMBER .)
    GT              reduce using rule 120 (int -> INT_NUMBER .)
    GE              reduce using rule 120 (int -> INT_NUMBER .)
    LT              reduce using rule 120 (int -> INT_NUMBER .)
    LE              reduce using rule 120 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 120 (int -> INT_NUMBER .)
    COMMA           reduce using rule 120 (int -> INT_NUMBER .)


state 35

<<<<<<< HEAD
    (93) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (100) comparacion -> . GT
    (101) comparacion -> . GE
    (102) comparacion -> . LT
    (103) comparacion -> . LE
    (104) comparacion -> . EQUAL2
=======
    (119) double -> DOUBLE_NUMBER .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    TIMES           reduce using rule 119 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 119 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 119 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 119 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 119 (double -> DOUBLE_NUMBER .)


state 36

    (93) expression -> expression PLUS . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    term                           shift and go to state 49
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 37

    (94) expression -> expression MINUS . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    term                           shift and go to state 50
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 38

    (96) term -> term TIMES . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 51
    int                            shift and go to state 32
    double                         shift and go to state 33

state 39

<<<<<<< HEAD
    (99) for -> FOR LPAREN . RPAREN LBRACE LBRACE RBRACE
=======
    (97) term -> term DIVIDE . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 52
    int                            shift and go to state 32
    double                         shift and go to state 33

state 40

    (101) sentencia -> if ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 53


state 41

<<<<<<< HEAD
    (80) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (81) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (82) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (83) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (109) string -> . STRING
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    ID              shift and go to state 67
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    string                         shift and go to state 65
    booleano                       shift and go to state 66
    expression                     shift and go to state 68
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28
=======
    (16) declararVariable -> VAR ID . COLON tipoValue
    (17) declararVariable -> VAR ID . COLON tipo
    (18) declararVariable -> VAR ID . EQUAL value
    (19) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 54
    EQUAL           shift and go to state 55
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


<<<<<<< HEAD
    (95) while -> WHILE LPAREN . whileclause RPAREN LBRACE cuerpo RBRACE
    (96) whileclause -> . comp
    (97) whileclause -> . ID
    (98) whileclause -> . booleano
    (94) comp -> . factor comparacion factor
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    ID              shift and go to state 74
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    whileclause                    shift and go to state 72
    comp                           shift and go to state 73
    booleano                       shift and go to state 75
    factor                         shift and go to state 76
    int                            shift and go to state 27
    double                         shift and go to state 28
=======
state 42

    (107) comparacionesVar -> ID DOT . EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> ID DOT . EQ LPAREN ID RPAREN
    (75) tuplaSwap -> ID DOT . SWAP
    (76) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (92) listIsEmpty -> ID DOT . ISEMPTY
    (91) listReverse -> ID DOT . REVERSE
    (88) arrayHead -> ID DOT . HEAD
    (89) arrayTail -> ID DOT . TAIL
    (90) arrayLength -> ID DOT . LENGTH

    EQUALS          shift and go to state 56
    EQ              shift and go to state 57
    SWAP            shift and go to state 58
    TOSTRING        shift and go to state 59
    PRODUCTITERATOR shift and go to state 60
    ISEMPTY         shift and go to state 61
    REVERSE         shift and go to state 62
    HEAD            shift and go to state 63
    TAIL            shift and go to state 64
    LENGTH          shift and go to state 65

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 43

    (12) declararConstante -> VAL ID . COLON tipoValueCons
    (13) declararConstante -> VAL ID . COLON tipo
    (14) declararConstante -> VAL ID . EQUAL valueCons
    (15) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 66
    EQUAL           shift and go to state 67


state 44

    (106) for -> FOR LPAREN . ID LM ID RPAREN LBRACE cuerpo RBRACE

    ID              shift and go to state 68


state 45

    (83) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 69


state 46

    (84) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (85) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (86) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (87) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    ID              shift and go to state 72
    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    string                         shift and go to state 70
    booleano                       shift and go to state 71
    expression                     shift and go to state 73
    term                           shift and go to state 13
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 47

<<<<<<< HEAD
    (93) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 77
    int                            shift and go to state 27
    double                         shift and go to state 28

state 48

    (100) comparacion -> GT .

    INT_NUMBER      reduce using rule 100 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 100 (comparacion -> GT .)
=======
    (102) while -> WHILE LPAREN . whileclause RPAREN LBRACE cuerpo RBRACE
    (103) whileclause -> . factor comparacion factor
    (104) whileclause -> . ID
    (105) whileclause -> . booleano
    (114) factor -> . int
    (115) factor -> . double
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    ID              shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    whileclause                    shift and go to state 77
    factor                         shift and go to state 78
    booleano                       shift and go to state 80
    int                            shift and go to state 32
    double                         shift and go to state 33

state 48

    (99) if -> IF LPAREN . factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    factor                         shift and go to state 81
    int                            shift and go to state 32
    double                         shift and go to state 33

state 49

<<<<<<< HEAD
    (101) comparacion -> GE .

    INT_NUMBER      reduce using rule 101 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 101 (comparacion -> GE .)
=======
    (93) expression -> expression PLUS term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 93 (expression -> expression PLUS term .)
    MINUS           reduce using rule 93 (expression -> expression PLUS term .)
    $end            reduce using rule 93 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 93 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 93 (expression -> expression PLUS term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 50

<<<<<<< HEAD
    (102) comparacion -> LT .

    INT_NUMBER      reduce using rule 102 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 102 (comparacion -> LT .)
=======
    (94) expression -> expression MINUS term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 94 (expression -> expression MINUS term .)
    MINUS           reduce using rule 94 (expression -> expression MINUS term .)
    $end            reduce using rule 94 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 94 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 94 (expression -> expression MINUS term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 51

<<<<<<< HEAD
    (103) comparacion -> LE .

    INT_NUMBER      reduce using rule 103 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 103 (comparacion -> LE .)
=======
    (96) term -> term TIMES factor .

    TIMES           reduce using rule 96 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 96 (term -> term TIMES factor .)
    PLUS            reduce using rule 96 (term -> term TIMES factor .)
    MINUS           reduce using rule 96 (term -> term TIMES factor .)
    $end            reduce using rule 96 (term -> term TIMES factor .)
    RPAREN          reduce using rule 96 (term -> term TIMES factor .)
    RBRACE          reduce using rule 96 (term -> term TIMES factor .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 52

<<<<<<< HEAD
    (104) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 104 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 104 (comparacion -> EQUAL2 .)
=======
    (97) term -> term DIVIDE factor .

    TIMES           reduce using rule 97 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 97 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 97 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 97 (term -> term DIVIDE factor .)
    $end            reduce using rule 97 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 97 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 97 (term -> term DIVIDE factor .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 53

<<<<<<< HEAD
    (14) declararVariable -> VAR ID COLON . tipoValue
    (15) declararVariable -> VAR ID COLON . tipo
    (53) tipoValue -> . STRING_TYPE EQUAL string
    (54) tipoValue -> . BOOL EQUAL booleano
    (55) tipoValue -> . INT EQUAL int
    (56) tipoValue -> . DOUBLE EQUAL double
    (57) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (58) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (59) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (60) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (61) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (62) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (63) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 80
    BOOL            shift and go to state 81
    INT             shift and go to state 82
    DOUBLE          shift and go to state 83
    ARRAY           shift and go to state 84
    LIST            shift and go to state 85

    tipoValue                      shift and go to state 78
    tipo                           shift and go to state 79

state 54

    (16) declararVariable -> VAR ID EQUAL . value
    (17) declararVariable -> VAR ID EQUAL . expression
    (18) value -> . string
    (19) value -> . booleano
    (20) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (22) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (23) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (24) value -> . ARRAY LPAREN elementosInternos RPAREN
    (25) value -> . LIST LPAREN elementosInternos RPAREN
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (109) string -> . STRING
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 90
    ARRAY           shift and go to state 91
    LIST            shift and go to state 92
    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    value                          shift and go to state 86
    expression                     shift and go to state 87
    string                         shift and go to state 88
    booleano                       shift and go to state 89
    int                            shift and go to state 27
    term                           shift and go to state 11
    factor                         shift and go to state 13
    double                         shift and go to state 28

state 55
=======
    (101) sentencia -> if ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    if                             shift and go to state 14
    cuerpo                         shift and go to state 82
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 54

    (16) declararVariable -> VAR ID COLON . tipoValue
    (17) declararVariable -> VAR ID COLON . tipo
    (55) tipoValue -> . STRING_TYPE EQUAL string
    (56) tipoValue -> . BOOL EQUAL booleano
    (57) tipoValue -> . INT EQUAL int
    (58) tipoValue -> . DOUBLE EQUAL double
    (59) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (63) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (51) tipo -> . INT
    (52) tipo -> . DOUBLE
    (53) tipo -> . BOOL
    (54) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 85
    BOOL            shift and go to state 86
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    ARRAY           shift and go to state 89
    LIST            shift and go to state 90
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    tipoValue                      shift and go to state 83
    tipo                           shift and go to state 84

state 55

    (18) declararVariable -> VAR ID EQUAL . value
    (19) declararVariable -> VAR ID EQUAL . expression
    (20) value -> . string
    (21) value -> . booleano
    (22) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (26) value -> . ARRAY LPAREN elementosInternos RPAREN
    (27) value -> . LIST LPAREN elementosInternos RPAREN
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 95
    ARRAY           shift and go to state 96
    LIST            shift and go to state 97
    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    value                          shift and go to state 91
    expression                     shift and go to state 92
    string                         shift and go to state 93
    booleano                       shift and go to state 94
    int                            shift and go to state 32
    term                           shift and go to state 13
    factor                         shift and go to state 30
    double                         shift and go to state 33

state 56

    (107) comparacionesVar -> ID DOT EQUALS . LPAREN ID RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 93
=======
    LPAREN          shift and go to state 98
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 57

    (108) comparacionesVar -> ID DOT EQ . LPAREN ID RPAREN

    LPAREN          shift and go to state 99


state 58

    (75) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 75 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 75 (tuplaSwap -> ID DOT SWAP .)


state 59

    (76) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 60

    (77) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 77 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 77 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 61

<<<<<<< HEAD
    (10) declararConstante -> VAL ID COLON . tipoValueCons
    (11) declararConstante -> VAL ID COLON . tipo
    (65) tipoValueCons -> . STRING_TYPE EQUAL string
    (66) tipoValueCons -> . BOOL EQUAL booleano
    (67) tipoValueCons -> . INT EQUAL int
    (68) tipoValueCons -> . DOUBLE EQUAL double
    (49) tipo -> . INT
    (50) tipo -> . DOUBLE
    (51) tipo -> . BOOL
    (52) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 96
    BOOL            shift and go to state 97
    INT             shift and go to state 98
    DOUBLE          shift and go to state 99

    tipoValueCons                  shift and go to state 94
    tipo                           shift and go to state 95

state 62

    (12) declararConstante -> VAL ID EQUAL . valueCons
    (13) declararConstante -> VAL ID EQUAL . expression
    (46) valueCons -> . string
    (47) valueCons -> . booleano
    (48) valueCons -> . tupla
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (109) string -> . STRING
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (69) tupla -> . LPAREN elementosInternos2 RPAREN
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    LPAREN          shift and go to state 105
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    valueCons                      shift and go to state 100
    expression                     shift and go to state 101
    string                         shift and go to state 102
    booleano                       shift and go to state 103
    tupla                          shift and go to state 104
    term                           shift and go to state 11
    factor                         shift and go to state 13
    int                            shift and go to state 27
    double                         shift and go to state 28

state 63

    (99) for -> FOR LPAREN RPAREN . LBRACE LBRACE RBRACE

    LBRACE          shift and go to state 106
=======
    (92) listIsEmpty -> ID DOT ISEMPTY .

    $end            reduce using rule 92 (listIsEmpty -> ID DOT ISEMPTY .)
    RBRACE          reduce using rule 92 (listIsEmpty -> ID DOT ISEMPTY .)


state 62

    (91) listReverse -> ID DOT REVERSE .

    $end            reduce using rule 91 (listReverse -> ID DOT REVERSE .)
    RBRACE          reduce using rule 91 (listReverse -> ID DOT REVERSE .)


state 63

    (88) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 88 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 88 (arrayHead -> ID DOT HEAD .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 64

    (89) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 89 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 89 (arrayTail -> ID DOT TAIL .)


state 65

    (90) arrayLength -> ID DOT LENGTH .

<<<<<<< HEAD
    RPAREN          shift and go to state 107
=======
    $end            reduce using rule 90 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 90 (arrayLength -> ID DOT LENGTH .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 66

<<<<<<< HEAD
    (81) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 108


state 67

    (82) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 109

=======
    (12) declararConstante -> VAL ID COLON . tipoValueCons
    (13) declararConstante -> VAL ID COLON . tipo
    (67) tipoValueCons -> . STRING_TYPE EQUAL string
    (68) tipoValueCons -> . BOOL EQUAL booleano
    (69) tipoValueCons -> . INT EQUAL int
    (70) tipoValueCons -> . DOUBLE EQUAL double
    (51) tipo -> . INT
    (52) tipo -> . DOUBLE
    (53) tipo -> . BOOL
    (54) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 103
    BOOL            shift and go to state 104
    INT             shift and go to state 105
    DOUBLE          shift and go to state 106

    tipoValueCons                  shift and go to state 101
    tipo                           shift and go to state 102

state 67

    (14) declararConstante -> VAL ID EQUAL . valueCons
    (15) declararConstante -> VAL ID EQUAL . expression
    (48) valueCons -> . string
    (49) valueCons -> . booleano
    (50) valueCons -> . tupla
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (71) tupla -> . LPAREN elementosInternos2 RPAREN
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    LPAREN          shift and go to state 112
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    valueCons                      shift and go to state 107
    expression                     shift and go to state 108
    string                         shift and go to state 109
    booleano                       shift and go to state 110
    tupla                          shift and go to state 111
    term                           shift and go to state 13
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 68

    (106) for -> FOR LPAREN ID . LM ID RPAREN LBRACE cuerpo RBRACE

<<<<<<< HEAD
    RPAREN          shift and go to state 110
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
=======
    LM              shift and go to state 113
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 69

<<<<<<< HEAD
    (109) string -> STRING .

    RPAREN          reduce using rule 109 (string -> STRING .)
    $end            reduce using rule 109 (string -> STRING .)
    RBRACE          reduce using rule 109 (string -> STRING .)
    COMMA           reduce using rule 109 (string -> STRING .)
=======
    (83) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 83 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 83 (funcionesPropias -> INPUT LPAREN RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 70

<<<<<<< HEAD
    (107) booleano -> TRUE .

    RPAREN          reduce using rule 107 (booleano -> TRUE .)
    $end            reduce using rule 107 (booleano -> TRUE .)
    RBRACE          reduce using rule 107 (booleano -> TRUE .)
    COMMA           reduce using rule 107 (booleano -> TRUE .)
=======
    (84) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 114
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 71

<<<<<<< HEAD
    (108) booleano -> FALSE .

    RPAREN          reduce using rule 108 (booleano -> FALSE .)
    $end            reduce using rule 108 (booleano -> FALSE .)
    RBRACE          reduce using rule 108 (booleano -> FALSE .)
    COMMA           reduce using rule 108 (booleano -> FALSE .)
=======
    (85) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 115
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 72

<<<<<<< HEAD
    (95) while -> WHILE LPAREN whileclause . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 111
=======
    (86) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 116
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 73

<<<<<<< HEAD
    (96) whileclause -> comp .

    RPAREN          reduce using rule 96 (whileclause -> comp .)
=======
    (87) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 74

<<<<<<< HEAD
    (97) whileclause -> ID .

    RPAREN          reduce using rule 97 (whileclause -> ID .)
=======
    (118) string -> STRING .

    RPAREN          reduce using rule 118 (string -> STRING .)
    $end            reduce using rule 118 (string -> STRING .)
    RBRACE          reduce using rule 118 (string -> STRING .)
    COMMA           reduce using rule 118 (string -> STRING .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 75

<<<<<<< HEAD
    (98) whileclause -> booleano .

    RPAREN          reduce using rule 98 (whileclause -> booleano .)
=======
    (116) booleano -> TRUE .

    RPAREN          reduce using rule 116 (booleano -> TRUE .)
    $end            reduce using rule 116 (booleano -> TRUE .)
    RBRACE          reduce using rule 116 (booleano -> TRUE .)
    COMMA           reduce using rule 116 (booleano -> TRUE .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 76

<<<<<<< HEAD
    (94) comp -> factor . comparacion factor
    (100) comparacion -> . GT
    (101) comparacion -> . GE
    (102) comparacion -> . LT
    (103) comparacion -> . LE
    (104) comparacion -> . EQUAL2

    GT              shift and go to state 48
    GE              shift and go to state 49
    LT              shift and go to state 50
    LE              shift and go to state 51
    EQUAL2          shift and go to state 52

    comparacion                    shift and go to state 112

state 77

    (93) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 113


state 78

    (14) declararVariable -> VAR ID COLON tipoValue .
=======
    (117) booleano -> FALSE .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    RPAREN          reduce using rule 117 (booleano -> FALSE .)
    $end            reduce using rule 117 (booleano -> FALSE .)
    RBRACE          reduce using rule 117 (booleano -> FALSE .)
    COMMA           reduce using rule 117 (booleano -> FALSE .)


state 79

    (102) while -> WHILE LPAREN whileclause . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 118


state 80

    (103) whileclause -> factor . comparacion factor
    (109) comparacion -> . GT
    (110) comparacion -> . GE
    (111) comparacion -> . LT
    (112) comparacion -> . LE
    (113) comparacion -> . EQUAL2

<<<<<<< HEAD
    EQUAL           shift and go to state 114
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)
=======
    GT              shift and go to state 120
    GE              shift and go to state 121
    LT              shift and go to state 122
    LE              shift and go to state 123
    EQUAL2          shift and go to state 124
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    comparacion                    shift and go to state 119

state 81

    (104) whileclause -> ID .

<<<<<<< HEAD
    EQUAL           shift and go to state 115
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)
=======
    RPAREN          reduce using rule 104 (whileclause -> ID .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 82

    (105) whileclause -> booleano .

<<<<<<< HEAD
    EQUAL           shift and go to state 116
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)
=======
    RPAREN          reduce using rule 105 (whileclause -> booleano .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 83

    (99) if -> IF LPAREN factor . comparacion factor RPAREN LBRACE cuerpo RBRACE
    (109) comparacion -> . GT
    (110) comparacion -> . GE
    (111) comparacion -> . LT
    (112) comparacion -> . LE
    (113) comparacion -> . EQUAL2

<<<<<<< HEAD
    EQUAL           shift and go to state 117
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)
=======
    GT              shift and go to state 120
    GE              shift and go to state 121
    LT              shift and go to state 122
    LE              shift and go to state 123
    EQUAL2          shift and go to state 124
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    comparacion                    shift and go to state 125

state 84

    (101) sentencia -> if ELSE LBRACE cuerpo . RBRACE

<<<<<<< HEAD
    LBRACK          shift and go to state 118
=======
    RBRACE          shift and go to state 126
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 85

    (16) declararVariable -> VAR ID COLON tipoValue .

<<<<<<< HEAD
    LBRACK          shift and go to state 119
=======
    $end            reduce using rule 16 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 16 (declararVariable -> VAR ID COLON tipoValue .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 86

    (17) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 17 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 17 (declararVariable -> VAR ID COLON tipo .)


state 87

    (55) tipoValue -> STRING_TYPE . EQUAL string
    (54) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 127
    $end            reduce using rule 54 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 54 (tipo -> STRING_TYPE .)


state 88

    (56) tipoValue -> BOOL . EQUAL booleano
    (53) tipo -> BOOL .

    EQUAL           shift and go to state 128
    $end            reduce using rule 53 (tipo -> BOOL .)
    RBRACE          reduce using rule 53 (tipo -> BOOL .)


state 89

    (57) tipoValue -> INT . EQUAL int
    (51) tipo -> INT .

    EQUAL           shift and go to state 129
    $end            reduce using rule 51 (tipo -> INT .)
    RBRACE          reduce using rule 51 (tipo -> INT .)


state 90

    (58) tipoValue -> DOUBLE . EQUAL double
    (52) tipo -> DOUBLE .

<<<<<<< HEAD
    ARRAY           shift and go to state 120
=======
    EQUAL           shift and go to state 130
    $end            reduce using rule 52 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 52 (tipo -> DOUBLE .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 91

    (59) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 121
=======
    LBRACK          shift and go to state 131
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 92

    (63) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 122
=======
    LBRACK          shift and go to state 132
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 93

    (18) declararVariable -> VAR ID EQUAL value .

<<<<<<< HEAD
    RPAREN          shift and go to state 123
=======
    $end            reduce using rule 18 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 18 (declararVariable -> VAR ID EQUAL value .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 94

    (19) declararVariable -> VAR ID EQUAL expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 19 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 19 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 95

    (20) value -> string .

    $end            reduce using rule 20 (value -> string .)
    RBRACE          reduce using rule 20 (value -> string .)


state 96

    (21) value -> booleano .

<<<<<<< HEAD
    EQUAL           shift and go to state 124
    $end            reduce using rule 52 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 52 (tipo -> STRING_TYPE .)
=======
    $end            reduce using rule 21 (value -> booleano .)
    RBRACE          reduce using rule 21 (value -> booleano .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 97

    (22) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    EQUAL           shift and go to state 125
    $end            reduce using rule 51 (tipo -> BOOL .)
    RBRACE          reduce using rule 51 (tipo -> BOOL .)
=======
    ARRAY           shift and go to state 133
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 98

    (26) value -> ARRAY . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    EQUAL           shift and go to state 126
    $end            reduce using rule 49 (tipo -> INT .)
    RBRACE          reduce using rule 49 (tipo -> INT .)
=======
    LPAREN          shift and go to state 134
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 99

    (27) value -> LIST . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    EQUAL           shift and go to state 127
    $end            reduce using rule 50 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 50 (tipo -> DOUBLE .)
=======
    LPAREN          shift and go to state 135
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 100

    (107) comparacionesVar -> ID DOT EQUALS LPAREN . ID RPAREN

    ID              shift and go to state 136


state 101

    (108) comparacionesVar -> ID DOT EQ LPAREN . ID RPAREN

    ID              shift and go to state 137


state 102

    (76) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 138


state 103

    (12) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 12 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 12 (declararConstante -> VAL ID COLON tipoValueCons .)


state 104

    (13) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 13 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 13 (declararConstante -> VAL ID COLON tipo .)


state 105

<<<<<<< HEAD
    (69) tupla -> LPAREN . elementosInternos2 RPAREN
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos2             shift and go to state 128
    int                            shift and go to state 129
    double                         shift and go to state 130
    booleano                       shift and go to state 131
    string                         shift and go to state 132
=======
    (67) tipoValueCons -> STRING_TYPE . EQUAL string
    (54) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 139
    $end            reduce using rule 54 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 54 (tipo -> STRING_TYPE .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 106

<<<<<<< HEAD
    (99) for -> FOR LPAREN RPAREN LBRACE . LBRACE RBRACE

    LBRACE          shift and go to state 133
=======
    (68) tipoValueCons -> BOOL . EQUAL booleano
    (53) tipo -> BOOL .

    EQUAL           shift and go to state 140
    $end            reduce using rule 53 (tipo -> BOOL .)
    RBRACE          reduce using rule 53 (tipo -> BOOL .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 107

    (69) tipoValueCons -> INT . EQUAL int
    (51) tipo -> INT .

    EQUAL           shift and go to state 141
    $end            reduce using rule 51 (tipo -> INT .)
    RBRACE          reduce using rule 51 (tipo -> INT .)


state 108

    (70) tipoValueCons -> DOUBLE . EQUAL double
    (52) tipo -> DOUBLE .

    EQUAL           shift and go to state 142
    $end            reduce using rule 52 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 52 (tipo -> DOUBLE .)


state 109

    (14) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 14 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 14 (declararConstante -> VAL ID EQUAL valueCons .)


state 110

    (15) declararConstante -> VAL ID EQUAL expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 15 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 15 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 111

<<<<<<< HEAD
    (95) while -> WHILE LPAREN whileclause RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 134
=======
    (48) valueCons -> string .

    $end            reduce using rule 48 (valueCons -> string .)
    RBRACE          reduce using rule 48 (valueCons -> string .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 112

<<<<<<< HEAD
    (94) comp -> factor comparacion . factor
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
=======
    (49) valueCons -> booleano .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 49 (valueCons -> booleano .)
    RBRACE          reduce using rule 49 (valueCons -> booleano .)

<<<<<<< HEAD
    factor                         shift and go to state 135
    int                            shift and go to state 27
    double                         shift and go to state 28
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 113

<<<<<<< HEAD
    (93) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (99) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    factor                         shift and go to state 13
    cuerpo                         shift and go to state 136
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    while                          shift and go to state 10
    term                           shift and go to state 11
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 27
    double                         shift and go to state 28

state 114

    (53) tipoValue -> STRING_TYPE EQUAL . string
    (109) string -> . STRING
=======
    (50) valueCons -> tupla .

    $end            reduce using rule 50 (valueCons -> tupla .)
    RBRACE          reduce using rule 50 (valueCons -> tupla .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 112

<<<<<<< HEAD
    string                         shift and go to state 137
=======
    (71) tupla -> LPAREN . elementosInternos2 RPAREN
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos2             shift and go to state 143
    int                            shift and go to state 144
    double                         shift and go to state 145
    booleano                       shift and go to state 146
    string                         shift and go to state 147
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 115

<<<<<<< HEAD
    (54) tipoValue -> BOOL EQUAL . booleano
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
=======
    (106) for -> FOR LPAREN ID LM . ID RPAREN LBRACE cuerpo RBRACE
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    ID              shift and go to state 148

<<<<<<< HEAD
    booleano                       shift and go to state 138
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 116

<<<<<<< HEAD
    (55) tipoValue -> INT EQUAL . int
    (111) int -> . INT_NUMBER
=======
    (84) funcionesPropias -> PRINTLN LPAREN string RPAREN .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 84 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 84 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)

<<<<<<< HEAD
    int                            shift and go to state 139
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 117

<<<<<<< HEAD
    (56) tipoValue -> DOUBLE EQUAL . double
    (110) double -> . DOUBLE_NUMBER
=======
    (85) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 85 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 85 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)

<<<<<<< HEAD
    double                         shift and go to state 140
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 118

    (86) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

<<<<<<< HEAD
    INT             shift and go to state 141
    DOUBLE          shift and go to state 142
    BOOL            shift and go to state 143
    STRING_TYPE     shift and go to state 144
=======
    $end            reduce using rule 86 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 86 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 119

    (87) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

<<<<<<< HEAD
    INT             shift and go to state 145
    DOUBLE          shift and go to state 146
    BOOL            shift and go to state 147
    STRING_TYPE     shift and go to state 148
=======
    $end            reduce using rule 87 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 87 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 120

    (102) while -> WHILE LPAREN whileclause RPAREN . LBRACE cuerpo RBRACE

<<<<<<< HEAD
    LBRACK          shift and go to state 149
=======
    LBRACE          shift and go to state 149
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 121

<<<<<<< HEAD
    (24) value -> ARRAY LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 150
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (103) whileclause -> factor comparacion . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 150
    int                            shift and go to state 32
    double                         shift and go to state 33
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 122

<<<<<<< HEAD
    (25) value -> LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 159
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (109) comparacion -> GT .

    INT_NUMBER      reduce using rule 109 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 109 (comparacion -> GT .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 123

    (110) comparacion -> GE .

    INT_NUMBER      reduce using rule 110 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 110 (comparacion -> GE .)


state 124

<<<<<<< HEAD
    (65) tipoValueCons -> STRING_TYPE EQUAL . string
    (109) string -> . STRING
=======
    (111) comparacion -> LT .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT_NUMBER      reduce using rule 111 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 111 (comparacion -> LT .)

<<<<<<< HEAD
    string                         shift and go to state 160
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 125

<<<<<<< HEAD
    (66) tipoValueCons -> BOOL EQUAL . booleano
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
=======
    (112) comparacion -> LE .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT_NUMBER      reduce using rule 112 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 112 (comparacion -> LE .)

<<<<<<< HEAD
    booleano                       shift and go to state 161
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 126

<<<<<<< HEAD
    (67) tipoValueCons -> INT EQUAL . int
    (111) int -> . INT_NUMBER
=======
    (113) comparacion -> EQUAL2 .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT_NUMBER      reduce using rule 113 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 113 (comparacion -> EQUAL2 .)

<<<<<<< HEAD
    int                            shift and go to state 162
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 127

<<<<<<< HEAD
    (68) tipoValueCons -> DOUBLE EQUAL . double
    (110) double -> . DOUBLE_NUMBER
=======
    (99) if -> IF LPAREN factor comparacion . factor RPAREN LBRACE cuerpo RBRACE
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

<<<<<<< HEAD
    double                         shift and go to state 163
=======
    factor                         shift and go to state 151
    int                            shift and go to state 32
    double                         shift and go to state 33
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 128

    (101) sentencia -> if ELSE LBRACE cuerpo RBRACE .

<<<<<<< HEAD
    RPAREN          shift and go to state 164
=======
    $end            reduce using rule 101 (sentencia -> if ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 101 (sentencia -> if ELSE LBRACE cuerpo RBRACE .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 129

    (55) tipoValue -> STRING_TYPE EQUAL . string
    (118) string -> . STRING

<<<<<<< HEAD
    RPAREN          reduce using rule 38 (elementosInternos2 -> int .)
    COMMA           shift and go to state 165
=======
    STRING          shift and go to state 74
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    string                         shift and go to state 152

state 130

    (56) tipoValue -> BOOL EQUAL . booleano
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE

<<<<<<< HEAD
    RPAREN          reduce using rule 39 (elementosInternos2 -> double .)
    COMMA           shift and go to state 166
=======
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    booleano                       shift and go to state 153

state 131

    (57) tipoValue -> INT EQUAL . int
    (120) int -> . INT_NUMBER

<<<<<<< HEAD
    RPAREN          reduce using rule 40 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 167
=======
    INT_NUMBER      shift and go to state 34
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 154

state 132

    (58) tipoValue -> DOUBLE EQUAL . double
    (119) double -> . DOUBLE_NUMBER

<<<<<<< HEAD
    RPAREN          reduce using rule 41 (elementosInternos2 -> string .)
    COMMA           shift and go to state 168
=======
    DOUBLE_NUMBER   shift and go to state 35
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    double                         shift and go to state 155

state 133

<<<<<<< HEAD
    (99) for -> FOR LPAREN RPAREN LBRACE LBRACE . RBRACE

    RBRACE          shift and go to state 169
=======
    (59) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 156
    DOUBLE          shift and go to state 157
    BOOL            shift and go to state 158
    STRING_TYPE     shift and go to state 159
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 134

<<<<<<< HEAD
    (95) while -> WHILE LPAREN whileclause RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . for
    (8) cuerpo -> . funcionesPropias
    (9) cuerpo -> . while
    (87) expression -> . expression PLUS term
    (88) expression -> . expression MINUS term
    (89) expression -> . term
    (93) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (14) declararVariable -> . VAR ID COLON tipoValue
    (15) declararVariable -> . VAR ID COLON tipo
    (16) declararVariable -> . VAR ID EQUAL value
    (17) declararVariable -> . VAR ID EQUAL expression
    (10) declararConstante -> . VAL ID COLON tipoValueCons
    (11) declararConstante -> . VAL ID COLON tipo
    (12) declararConstante -> . VAL ID EQUAL valueCons
    (13) declararConstante -> . VAL ID EQUAL expression
    (70) funcionesTupla -> . tuplaSwap
    (71) funcionesTupla -> . tuplaToString
    (72) funcionesTupla -> . tuplaProductIterator
    (76) funcionesArray -> . arrayHead
    (77) funcionesArray -> . arrayTail
    (78) funcionesArray -> . arrayLength
    (99) for -> . FOR LPAREN RPAREN LBRACE LBRACE RBRACE
    (79) funcionesPropias -> . INPUT LPAREN RPAREN
    (80) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (81) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (82) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (83) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (95) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (90) term -> . term TIMES factor
    (91) term -> . term DIVIDE factor
    (92) term -> . factor
    (73) tuplaSwap -> . ID DOT SWAP
    (74) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (75) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (84) arrayHead -> . ID DOT HEAD
    (85) arrayTail -> . ID DOT TAIL
    (86) arrayLength -> . ID DOT LENGTH
    (105) factor -> . int
    (106) factor -> . double
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER

    IF              shift and go to state 12
    VAR             shift and go to state 14
    VAL             shift and go to state 16
    FOR             shift and go to state 23
    INPUT           shift and go to state 24
    PRINTLN         shift and go to state 25
    WHILE           shift and go to state 26
    ID              shift and go to state 15
    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30

    cuerpo                         shift and go to state 170
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    for                            shift and go to state 8
    funcionesPropias               shift and go to state 9
    while                          shift and go to state 10
    term                           shift and go to state 11
    factor                         shift and go to state 13
    tuplaSwap                      shift and go to state 17
    tuplaToString                  shift and go to state 18
    tuplaProductIterator           shift and go to state 19
    arrayHead                      shift and go to state 20
    arrayTail                      shift and go to state 21
    arrayLength                    shift and go to state 22
    int                            shift and go to state 27
    double                         shift and go to state 28

state 135

    (94) comp -> factor comparacion factor .

    RPAREN          reduce using rule 94 (comp -> factor comparacion factor .)
=======
    (63) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    INT             shift and go to state 160
    DOUBLE          shift and go to state 161
    BOOL            shift and go to state 162
    STRING_TYPE     shift and go to state 163


state 133
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    (22) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
state 136
=======
    LBRACK          shift and go to state 164
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


<<<<<<< HEAD
    RBRACE          shift and go to state 171
=======
state 134
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    (26) value -> ARRAY LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 165
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 137

    (27) value -> LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 174
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 138

    (107) comparacionesVar -> ID DOT EQUALS LPAREN ID . RPAREN

    RPAREN          shift and go to state 175


state 139

    (108) comparacionesVar -> ID DOT EQ LPAREN ID . RPAREN

    RPAREN          shift and go to state 176


state 140

    (76) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 76 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 76 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 141

    (67) tipoValueCons -> STRING_TYPE EQUAL . string
    (118) string -> . STRING

<<<<<<< HEAD
    RBRACK          shift and go to state 172
=======
    STRING          shift and go to state 74
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    string                         shift and go to state 177

state 142

    (68) tipoValueCons -> BOOL EQUAL . booleano
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE

<<<<<<< HEAD
    RBRACK          shift and go to state 173
=======
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    booleano                       shift and go to state 178

state 143

    (69) tipoValueCons -> INT EQUAL . int
    (120) int -> . INT_NUMBER

<<<<<<< HEAD
    RBRACK          shift and go to state 174
=======
    INT_NUMBER      shift and go to state 34
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 179

state 144

    (70) tipoValueCons -> DOUBLE EQUAL . double
    (119) double -> . DOUBLE_NUMBER

<<<<<<< HEAD
    RBRACK          shift and go to state 175
=======
    DOUBLE_NUMBER   shift and go to state 35
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    double                         shift and go to state 180

state 145

    (71) tupla -> LPAREN elementosInternos2 . RPAREN

<<<<<<< HEAD
    RBRACK          shift and go to state 176
=======
    RPAREN          shift and go to state 181
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 146

    (40) elementosInternos2 -> int .
    (44) elementosInternos2 -> int . COMMA elementosInternos2

<<<<<<< HEAD
    RBRACK          shift and go to state 177
=======
    RPAREN          reduce using rule 40 (elementosInternos2 -> int .)
    COMMA           shift and go to state 182
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 147

    (41) elementosInternos2 -> double .
    (45) elementosInternos2 -> double . COMMA elementosInternos2

<<<<<<< HEAD
    RBRACK          shift and go to state 178
=======
    RPAREN          reduce using rule 41 (elementosInternos2 -> double .)
    COMMA           shift and go to state 183
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 148

    (42) elementosInternos2 -> booleano .
    (46) elementosInternos2 -> booleano . COMMA elementosInternos2

<<<<<<< HEAD
    RBRACK          shift and go to state 179
=======
    RPAREN          reduce using rule 42 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 184
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 149

    (43) elementosInternos2 -> string .
    (47) elementosInternos2 -> string . COMMA elementosInternos2

<<<<<<< HEAD
    INT             shift and go to state 180
    DOUBLE          shift and go to state 181
    BOOL            shift and go to state 182
    STRING_TYPE     shift and go to state 183
=======
    RPAREN          reduce using rule 43 (elementosInternos2 -> string .)
    COMMA           shift and go to state 185
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 150

    (106) for -> FOR LPAREN ID LM ID . RPAREN LBRACE cuerpo RBRACE

<<<<<<< HEAD
    RPAREN          shift and go to state 184
=======
    RPAREN          shift and go to state 186
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 151

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    cuerpo                         shift and go to state 187
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 152

    (103) whileclause -> factor comparacion factor .

    RPAREN          reduce using rule 103 (whileclause -> factor comparacion factor .)


state 153

    (99) if -> IF LPAREN factor comparacion factor . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 188


state 154

    (55) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 55 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 55 (tipoValue -> STRING_TYPE EQUAL string .)


state 155

    (56) tipoValue -> BOOL EQUAL booleano .

<<<<<<< HEAD
    RPAREN          reduce using rule 30 (elementosInternosInt -> int .)
    COMMA           shift and go to state 185
=======
    $end            reduce using rule 56 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 56 (tipoValue -> BOOL EQUAL booleano .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 156

    (57) tipoValue -> INT EQUAL int .

<<<<<<< HEAD
    RPAREN          reduce using rule 32 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 186
=======
    $end            reduce using rule 57 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 57 (tipoValue -> INT EQUAL int .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 157

    (58) tipoValue -> DOUBLE EQUAL double .

<<<<<<< HEAD
    RPAREN          reduce using rule 34 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 187
=======
    $end            reduce using rule 58 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 58 (tipoValue -> DOUBLE EQUAL double .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 158

    (59) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RPAREN          reduce using rule 36 (elementosInternosString -> string .)
    COMMA           shift and go to state 188
=======
    RBRACK          shift and go to state 189
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 159

    (60) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 189
=======
    RBRACK          shift and go to state 190
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 160

    (61) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 191


state 161

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 192


state 162

    (63) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 193


state 163

    (64) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 194


state 164

    (65) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 195


state 165

<<<<<<< HEAD
    (42) elementosInternos2 -> int COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    int                            shift and go to state 129
    elementosInternos2             shift and go to state 190
    double                         shift and go to state 130
    booleano                       shift and go to state 131
    string                         shift and go to state 132
=======
    (66) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 196

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 166

<<<<<<< HEAD
    (43) elementosInternos2 -> double COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    double                         shift and go to state 130
    elementosInternos2             shift and go to state 191
    int                            shift and go to state 129
    booleano                       shift and go to state 131
    string                         shift and go to state 132
=======
    (22) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 197
    DOUBLE          shift and go to state 198
    BOOL            shift and go to state 199
    STRING_TYPE     shift and go to state 200

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 167

<<<<<<< HEAD
    (44) elementosInternos2 -> booleano COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    booleano                       shift and go to state 131
    elementosInternos2             shift and go to state 192
    int                            shift and go to state 129
    double                         shift and go to state 130
    string                         shift and go to state 132
=======
    (26) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 201

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 168

<<<<<<< HEAD
    (45) elementosInternos2 -> string COMMA . elementosInternos2
    (38) elementosInternos2 -> . int
    (39) elementosInternos2 -> . double
    (40) elementosInternos2 -> . booleano
    (41) elementosInternos2 -> . string
    (42) elementosInternos2 -> . int COMMA elementosInternos2
    (43) elementosInternos2 -> . double COMMA elementosInternos2
    (44) elementosInternos2 -> . booleano COMMA elementosInternos2
    (45) elementosInternos2 -> . string COMMA elementosInternos2
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    string                         shift and go to state 132
    elementosInternos2             shift and go to state 193
    int                            shift and go to state 129
    double                         shift and go to state 130
    booleano                       shift and go to state 131
=======
    (28) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 28 (elementosInternos -> elementosInternosInt .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 169

<<<<<<< HEAD
    (99) for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .

    $end            reduce using rule 99 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)
    RBRACE          reduce using rule 99 (for -> FOR LPAREN RPAREN LBRACE LBRACE RBRACE .)
=======
    (29) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 29 (elementosInternos -> elementosInternosDouble .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 170

<<<<<<< HEAD
    (95) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 194
=======
    (30) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 30 (elementosInternos -> elementosInternosBool .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 171

    (31) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 31 (elementosInternos -> elementosInternosString .)


state 172

    (32) elementosInternosInt -> int .
    (33) elementosInternosInt -> int . COMMA elementosInternosInt

<<<<<<< HEAD
    EQUAL           shift and go to state 195
=======
    RPAREN          reduce using rule 32 (elementosInternosInt -> int .)
    COMMA           shift and go to state 202
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 173

    (34) elementosInternosDouble -> double .
    (35) elementosInternosDouble -> double . COMMA elementosInternosDouble

<<<<<<< HEAD
    EQUAL           shift and go to state 196
=======
    RPAREN          reduce using rule 34 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 203
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 174

    (36) elementosInternosBool -> booleano .
    (37) elementosInternosBool -> booleano . COMMA elementosInternosBool

<<<<<<< HEAD
    EQUAL           shift and go to state 197
=======
    RPAREN          reduce using rule 36 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 204
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 175

    (38) elementosInternosString -> string .
    (39) elementosInternosString -> string . COMMA elementosInternosString

<<<<<<< HEAD
    EQUAL           shift and go to state 198
=======
    RPAREN          reduce using rule 38 (elementosInternosString -> string .)
    COMMA           shift and go to state 205
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 176

    (27) value -> LIST LPAREN elementosInternos . RPAREN

<<<<<<< HEAD
    EQUAL           shift and go to state 199
=======
    RPAREN          shift and go to state 206
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 177

    (107) comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .

<<<<<<< HEAD
    EQUAL           shift and go to state 200
=======
    $end            reduce using rule 107 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)
    RBRACE          reduce using rule 107 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 178

    (108) comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .

<<<<<<< HEAD
    EQUAL           shift and go to state 201
=======
    $end            reduce using rule 108 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)
    RBRACE          reduce using rule 108 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 179

    (67) tipoValueCons -> STRING_TYPE EQUAL string .

<<<<<<< HEAD
    EQUAL           shift and go to state 202
=======
    $end            reduce using rule 67 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 67 (tipoValueCons -> STRING_TYPE EQUAL string .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 180

    (68) tipoValueCons -> BOOL EQUAL booleano .

<<<<<<< HEAD
    RBRACK          shift and go to state 203
=======
    $end            reduce using rule 68 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 68 (tipoValueCons -> BOOL EQUAL booleano .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 181

    (69) tipoValueCons -> INT EQUAL int .

<<<<<<< HEAD
    RBRACK          shift and go to state 204
=======
    $end            reduce using rule 69 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 69 (tipoValueCons -> INT EQUAL int .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 182

    (70) tipoValueCons -> DOUBLE EQUAL double .

<<<<<<< HEAD
    RBRACK          shift and go to state 205
=======
    $end            reduce using rule 70 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 70 (tipoValueCons -> DOUBLE EQUAL double .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 183

    (71) tupla -> LPAREN elementosInternos2 RPAREN .

<<<<<<< HEAD
    RBRACK          shift and go to state 206
=======
    $end            reduce using rule 71 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 71 (tupla -> LPAREN elementosInternos2 RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 184

    (44) elementosInternos2 -> int COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    int                            shift and go to state 144
    elementosInternos2             shift and go to state 207
    double                         shift and go to state 145
    booleano                       shift and go to state 146
    string                         shift and go to state 147

state 185

<<<<<<< HEAD
    (31) elementosInternosInt -> int COMMA . elementosInternosInt
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (111) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29

    int                            shift and go to state 155
    elementosInternosInt           shift and go to state 207
=======
    (45) elementosInternos2 -> double COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    double                         shift and go to state 145
    elementosInternos2             shift and go to state 208
    int                            shift and go to state 144
    booleano                       shift and go to state 146
    string                         shift and go to state 147
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 186

<<<<<<< HEAD
    (33) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (110) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 30

    double                         shift and go to state 156
    elementosInternosDouble        shift and go to state 208
=======
    (46) elementosInternos2 -> booleano COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    booleano                       shift and go to state 146
    elementosInternos2             shift and go to state 209
    int                            shift and go to state 144
    double                         shift and go to state 145
    string                         shift and go to state 147
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 187

<<<<<<< HEAD
    (35) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE

    TRUE            shift and go to state 70
    FALSE           shift and go to state 71

    booleano                       shift and go to state 157
    elementosInternosBool          shift and go to state 209
=======
    (47) elementosInternos2 -> string COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    string                         shift and go to state 147
    elementosInternos2             shift and go to state 210
    int                            shift and go to state 144
    double                         shift and go to state 145
    booleano                       shift and go to state 146
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 188

<<<<<<< HEAD
    (37) elementosInternosString -> string COMMA . elementosInternosString
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (109) string -> . STRING
=======
    (106) for -> FOR LPAREN ID LM ID RPAREN . LBRACE cuerpo RBRACE
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LBRACE          shift and go to state 211

<<<<<<< HEAD
    string                         shift and go to state 158
    elementosInternosString        shift and go to state 210
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 189

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 212


state 190

    (99) if -> IF LPAREN factor comparacion factor RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 213


state 191

    (59) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 214


state 192

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 215


state 193

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 216


<<<<<<< HEAD
state 194

    (95) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 95 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 95 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)
=======
state 192

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 217


state 193

    (63) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 218


state 194

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 219
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 195

<<<<<<< HEAD
    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
=======
    (65) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    EQUAL           shift and go to state 220


state 196

<<<<<<< HEAD
    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
=======
    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    EQUAL           shift and go to state 221


state 197

<<<<<<< HEAD
    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 213
=======
    (22) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 222
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 198

<<<<<<< HEAD
    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 214
=======
    (23) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 223
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 199

<<<<<<< HEAD
    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN
=======
    (24) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    RBRACK          shift and go to state 224


state 200

<<<<<<< HEAD
    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN
=======
    (25) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    RBRACK          shift and go to state 225


state 201

<<<<<<< HEAD
    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 217
=======
    (26) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 26 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 26 (value -> ARRAY LPAREN elementosInternos RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 202

<<<<<<< HEAD
    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 218
=======
    (33) elementosInternosInt -> int COMMA . elementosInternosInt
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 170
    elementosInternosInt           shift and go to state 226

state 203

<<<<<<< HEAD
    (20) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN
=======
    (35) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (119) double -> . DOUBLE_NUMBER
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    DOUBLE_NUMBER   shift and go to state 35

    double                         shift and go to state 171
    elementosInternosDouble        shift and go to state 227

state 204

<<<<<<< HEAD
    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN
=======
    (37) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleano                       shift and go to state 172
    elementosInternosBool          shift and go to state 228

state 205

<<<<<<< HEAD
    (22) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 221
=======
    (39) elementosInternosString -> string COMMA . elementosInternosString
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (118) string -> . STRING

    STRING          shift and go to state 74
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    string                         shift and go to state 173
    elementosInternosString        shift and go to state 229

state 206

<<<<<<< HEAD
    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 222
=======
    (27) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 27 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 27 (value -> LIST LPAREN elementosInternos RPAREN .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 207

<<<<<<< HEAD
    (31) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 31 (elementosInternosInt -> int COMMA elementosInternosInt .)
=======
    (44) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 44 (elementosInternos2 -> int COMMA elementosInternos2 .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 208

<<<<<<< HEAD
    (33) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 33 (elementosInternosDouble -> double COMMA elementosInternosDouble .)
=======
    (45) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 45 (elementosInternos2 -> double COMMA elementosInternos2 .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 209

<<<<<<< HEAD
    (35) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 35 (elementosInternosBool -> booleano COMMA elementosInternosBool .)
=======
    (46) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 46 (elementosInternos2 -> booleano COMMA elementosInternos2 .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 210

<<<<<<< HEAD
    (37) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 37 (elementosInternosString -> string COMMA elementosInternosString .)
=======
    (47) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 47 (elementosInternos2 -> string COMMA elementosInternos2 .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 211

<<<<<<< HEAD
    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 223


state 212

    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
=======
    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    cuerpo                         shift and go to state 230
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 212

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    $end            reduce using rule 102 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 102 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)


state 213

<<<<<<< HEAD
    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 225


state 214

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 226
=======
    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 30
    cuerpo                         shift and go to state 231
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    int                            shift and go to state 32
    double                         shift and go to state 33

state 214

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 232
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 215

<<<<<<< HEAD
    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN
=======
    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    NEW             shift and go to state 233


state 216

<<<<<<< HEAD
    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN
=======
    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    NEW             shift and go to state 234


state 217

<<<<<<< HEAD
    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 229
=======
    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 235
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 218

<<<<<<< HEAD
    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 230
=======
    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 236
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 219

<<<<<<< HEAD
    (20) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LIST            shift and go to state 237


state 220

<<<<<<< HEAD
    (21) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LIST            shift and go to state 238


state 221

<<<<<<< HEAD
    (22) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29
=======
    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 239
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 233

state 222

<<<<<<< HEAD
    (23) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 29
=======
    (22) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 240
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 234

state 223

<<<<<<< HEAD
    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
=======
    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LPAREN          shift and go to state 241


state 224

<<<<<<< HEAD
    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
=======
    (24) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    LPAREN          shift and go to state 242


state 225

<<<<<<< HEAD
    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 237


state 226

    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 238


state 227

    (61) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 239
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 243

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 228

<<<<<<< HEAD
    (62) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 240
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (33) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 33 (elementosInternosInt -> int COMMA elementosInternosInt .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 229

<<<<<<< HEAD
    (63) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 241
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (35) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 35 (elementosInternosDouble -> double COMMA elementosInternosDouble .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 230

<<<<<<< HEAD
    (64) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (26) elementosInternos -> . elementosInternosInt
    (27) elementosInternos -> . elementosInternosDouble
    (28) elementosInternos -> . elementosInternosBool
    (29) elementosInternos -> . elementosInternosString
    (30) elementosInternosInt -> . int
    (31) elementosInternosInt -> . int COMMA elementosInternosInt
    (32) elementosInternosDouble -> . double
    (33) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (34) elementosInternosBool -> . booleano
    (35) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (36) elementosInternosString -> . string
    (37) elementosInternosString -> . string COMMA elementosInternosString
    (111) int -> . INT_NUMBER
    (110) double -> . DOUBLE_NUMBER
    (107) booleano -> . TRUE
    (108) booleano -> . FALSE
    (109) string -> . STRING

    INT_NUMBER      shift and go to state 29
    DOUBLE_NUMBER   shift and go to state 30
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    STRING          shift and go to state 69

    elementosInternos              shift and go to state 242
    elementosInternosInt           shift and go to state 151
    elementosInternosDouble        shift and go to state 152
    elementosInternosBool          shift and go to state 153
    elementosInternosString        shift and go to state 154
    int                            shift and go to state 155
    double                         shift and go to state 156
    booleano                       shift and go to state 157
    string                         shift and go to state 158
=======
    (37) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 37 (elementosInternosBool -> booleano COMMA elementosInternosBool .)

>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 231

    (39) elementosInternosString -> string COMMA elementosInternosString .

<<<<<<< HEAD
    RPAREN          shift and go to state 243
=======
    RPAREN          reduce using rule 39 (elementosInternosString -> string COMMA elementosInternosString .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 232

    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo . RBRACE

<<<<<<< HEAD
    RPAREN          shift and go to state 244
=======
    RBRACE          shift and go to state 244
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 233

    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo . RBRACE

<<<<<<< HEAD
    RPAREN          shift and go to state 245
=======
    RBRACE          shift and go to state 245
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 234

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 246
=======
    ARRAY           shift and go to state 246
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 235

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    INT             shift and go to state 247
=======
    ARRAY           shift and go to state 247
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 236

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    DOUBLE          shift and go to state 248
=======
    ARRAY           shift and go to state 248
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 237

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    BOOL            shift and go to state 249
=======
    ARRAY           shift and go to state 249
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 238

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    STRING_TYPE     shift and go to state 250
=======
    LPAREN          shift and go to state 250
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 239

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 251
=======
    LPAREN          shift and go to state 251
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 240

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 252
=======
    LPAREN          shift and go to state 252
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 241

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 253
=======
    LPAREN          shift and go to state 253
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 242

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

<<<<<<< HEAD
    RPAREN          shift and go to state 254
=======
    INT_NUMBER      shift and go to state 34
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    int                            shift and go to state 254

state 243

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 255

state 244

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 256

state 245

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 257

state 246

    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 106 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 106 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)


state 247

    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .

<<<<<<< HEAD
    RBRACK          shift and go to state 255
=======
    ELSE            reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 248

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RBRACK          shift and go to state 256
=======
    LBRACK          shift and go to state 258
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 249

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RBRACK          shift and go to state 257
=======
    LBRACK          shift and go to state 259
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 250

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RBRACK          shift and go to state 258
=======
    LBRACK          shift and go to state 260
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 251

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 261


state 252

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 262
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 253

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 263
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 254

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 264
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 255

<<<<<<< HEAD
    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 259

=======
    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 265
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 256

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 260
=======
    RPAREN          shift and go to state 266
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 257

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 261
=======
    RPAREN          shift and go to state 267
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 258

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 262
=======
    RPAREN          shift and go to state 268
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 259

<<<<<<< HEAD
    (57) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    RPAREN          shift and go to state 269

<<<<<<< HEAD
    int                            shift and go to state 263
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 260

<<<<<<< HEAD
    (58) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    INT             shift and go to state 270

<<<<<<< HEAD
    int                            shift and go to state 264
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 261

<<<<<<< HEAD
    (59) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    DOUBLE          shift and go to state 271

<<<<<<< HEAD
    int                            shift and go to state 265
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 262

<<<<<<< HEAD
    (60) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (111) int -> . INT_NUMBER
=======
    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

    BOOL            shift and go to state 272

<<<<<<< HEAD
    int                            shift and go to state 266
=======
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e

state 263

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 267
=======
    STRING_TYPE     shift and go to state 273
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 264

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 268
=======
    RPAREN          shift and go to state 274
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 265

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 269
=======
    RPAREN          shift and go to state 275
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 266

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 270
=======
    RPAREN          shift and go to state 276
>>>>>>> a9062fbb85b52a1206ba78091fb234bf859cb07e


state 267

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 277


state 268

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 22 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 22 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 269

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 23 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 23 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 270

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 24 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 24 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 269

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 25 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 25 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 270

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 278


state 271

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 279


state 272

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 280


state 273

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 281


state 274

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 63 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 63 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 275

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 64 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 64 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 276

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 65 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 65 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 277

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 66 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 66 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 278

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 282


state 279

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 283


state 280

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 284


state 281

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 285


state 282

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 286

state 283

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 287

state 284

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 288

state 285

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 289

state 286

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 290


state 287

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 291


state 288

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 292


state 289

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 293


state 290

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 59 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 59 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 291

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 60 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 60 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 292

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 61 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 61 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 293

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 62 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 62 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

