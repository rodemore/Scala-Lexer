Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    INCREMENT
    MOD
    OBJECT
    RETURN
    SEMICOLON
    THIS
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesList
Rule 7     cuerpo -> funcionesArray
Rule 8     cuerpo -> for
Rule 9     cuerpo -> funcionesPropias
Rule 10    cuerpo -> comparacionesVar
Rule 11    cuerpo -> while
Rule 12    declararConstante -> VAL ID COLON tipoValueCons
Rule 13    declararConstante -> VAL ID COLON tipo
Rule 14    declararConstante -> VAL ID EQUAL valueCons
Rule 15    declararConstante -> VAL ID EQUAL expression
Rule 16    declararVariable -> VAR ID COLON tipoValue
Rule 17    declararVariable -> VAR ID COLON tipo
Rule 18    declararVariable -> VAR ID EQUAL value
Rule 19    declararVariable -> VAR ID EQUAL expression
Rule 20    value -> string
Rule 21    value -> booleano
Rule 22    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 23    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 24    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 25    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 26    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 27    value -> LIST LPAREN elementosInternos RPAREN
Rule 28    elementosInternos -> elementosInternosInt
Rule 29    elementosInternos -> elementosInternosDouble
Rule 30    elementosInternos -> elementosInternosBool
Rule 31    elementosInternos -> elementosInternosString
Rule 32    elementosInternosInt -> int
Rule 33    elementosInternosInt -> int COMMA elementosInternosInt
Rule 34    elementosInternosDouble -> double
Rule 35    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 36    elementosInternosBool -> booleano
Rule 37    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 38    elementosInternosString -> string
Rule 39    elementosInternosString -> string COMMA elementosInternosString
Rule 40    elementosInternos2 -> int
Rule 41    elementosInternos2 -> double
Rule 42    elementosInternos2 -> booleano
Rule 43    elementosInternos2 -> string
Rule 44    elementosInternos2 -> int COMMA elementosInternos2
Rule 45    elementosInternos2 -> double COMMA elementosInternos2
Rule 46    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 47    elementosInternos2 -> string COMMA elementosInternos2
Rule 48    valueCons -> string
Rule 49    valueCons -> booleano
Rule 50    valueCons -> tupla
Rule 51    tipo -> INT
Rule 52    tipo -> DOUBLE
Rule 53    tipo -> BOOL
Rule 54    tipo -> STRING_TYPE
Rule 55    tipoValue -> STRING_TYPE EQUAL string
Rule 56    tipoValue -> BOOL EQUAL booleano
Rule 57    tipoValue -> INT EQUAL int
Rule 58    tipoValue -> DOUBLE EQUAL double
Rule 59    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 60    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 61    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 62    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 63    tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 64    tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 65    tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 66    tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
Rule 67    tipoValueCons -> STRING_TYPE EQUAL string
Rule 68    tipoValueCons -> BOOL EQUAL booleano
Rule 69    tipoValueCons -> INT EQUAL int
Rule 70    tipoValueCons -> DOUBLE EQUAL double
Rule 71    tupla -> LPAREN elementosInternos2 RPAREN
Rule 72    funcionesTupla -> tuplaSwap
Rule 73    funcionesTupla -> tuplaToString
Rule 74    funcionesTupla -> tuplaProductIterator
Rule 75    tuplaSwap -> ID DOT SWAP
Rule 76    tuplaToString -> ID DOT TOSTRING LPAREN RPAREN
Rule 77    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 78    funcionesArray -> arrayHead
Rule 79    funcionesArray -> arrayTail
Rule 80    funcionesArray -> arrayLength
Rule 81    funcionesList -> listIsEmpty
Rule 82    funcionesList -> listReverse
Rule 83    funcionesPropias -> INPUT LPAREN RPAREN
Rule 84    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 85    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 86    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 87    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 88    arrayHead -> ID DOT HEAD
Rule 89    arrayTail -> ID DOT TAIL
Rule 90    arrayLength -> ID DOT LENGTH
Rule 91    listReverse -> ID DOT REVERSE
Rule 92    listIsEmpty -> ID DOT ISEMPTY
Rule 93    expression -> expression PLUS term
Rule 94    expression -> expression MINUS term
Rule 95    expression -> term
Rule 96    term -> term TIMES factor
Rule 97    term -> term DIVIDE factor
Rule 98    term -> factor
Rule 99    if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
Rule 100   sentencia -> if
Rule 101   sentencia -> if ELSE LBRACE cuerpo RBRACE
Rule 102   while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
Rule 103   whileclause -> factor comparacion factor
Rule 104   whileclause -> ID
Rule 105   whileclause -> booleano
Rule 106   for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
Rule 107   comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN
Rule 108   comparacionesVar -> ID DOT EQ LPAREN ID RPAREN
Rule 109   comparacion -> GT
Rule 110   comparacion -> GE
Rule 111   comparacion -> LT
Rule 112   comparacion -> LE
Rule 113   comparacion -> EQUAL2
Rule 114   factor -> int
Rule 115   factor -> double
Rule 116   booleano -> TRUE
Rule 117   booleano -> FALSE
Rule 118   string -> STRING
Rule 119   double -> DOUBLE_NUMBER
Rule 120   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 22 23 24 25 26 59 59 60 60 61 61 62 62
BOOL                 : 24 53 56 61 61 65 68
CLASS                : 
COLON                : 12 13 16 17
COMMA                : 33 35 37 39 44 45 46 47
DECREMENT            : 
DEF                  : 
DIVIDE               : 97
DOT                  : 75 76 77 88 89 90 91 92 107 108
DOUBLE               : 23 52 58 60 60 64 70
DOUBLE_NUMBER        : 119
ELSE                 : 101
EQ                   : 108
EQUAL                : 14 15 18 19 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
EQUAL2               : 113
EQUALS               : 107
FALSE                : 117
FOR                  : 106
GE                   : 110
GT                   : 109
HEAD                 : 88
ID                   : 12 13 14 15 16 17 18 19 75 76 77 86 88 89 90 91 92 104 106 106 107 107 108 108
IF                   : 99
INCREMENT            : 
INPUT                : 83
INT                  : 22 51 57 59 59 63 69
INT_NUMBER           : 120
ISEMPTY              : 92
LBRACE               : 99 101 102 106
LBRACK               : 22 23 24 25 59 59 60 60 61 61 62 62 63 64 65 66
LE                   : 112
LENGTH               : 90
LIST                 : 27 63 63 64 64 65 65 66 66
LM                   : 106
LPAREN               : 22 23 24 25 26 27 59 60 61 62 63 64 65 66 71 76 83 84 85 86 87 99 102 106 107 108
LT                   : 111
MINUS                : 94
MOD                  : 
NEW                  : 22 23 24 25 59 60 61 62
OBJECT               : 
PLUS                 : 93
PRINTLN              : 84 85 86 87
PRODUCTITERATOR      : 77
RBRACE               : 99 101 102 106
RBRACK               : 22 23 24 25 59 59 60 60 61 61 62 62 63 64 65 66
RETURN               : 
REVERSE              : 91
RPAREN               : 22 23 24 25 26 27 59 60 61 62 63 64 65 66 71 76 83 84 85 86 87 99 102 106 107 108
SEMICOLON            : 
STRING               : 118
STRING_TYPE          : 25 54 55 62 62 66 67
SWAP                 : 75
TAIL                 : 89
THIS                 : 
TIMES                : 96
TOSTRING             : 76
TRUE                 : 116
VAL                  : 12 13 14 15
VAR                  : 16 17 18 19
WHILE                : 102
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 78
arrayLength          : 80
arrayTail            : 79
booleano             : 21 36 37 42 46 49 56 68 85 105
comparacion          : 99 103
comparacionesVar     : 10
cuerpo               : 99 101 102 106 0
declararConstante    : 4
declararVariable     : 3
double               : 34 35 41 45 58 70 115
elementosInternos    : 26 27 63 64 65 66
elementosInternos2   : 44 45 46 47 71
elementosInternosBool : 30 37
elementosInternosDouble : 29 35
elementosInternosInt : 28 33
elementosInternosString : 31 39
expression           : 1 15 19 87 93 94
factor               : 96 97 98 99 99 103 103
for                  : 8
funcionesArray       : 7
funcionesList        : 6
funcionesPropias     : 9
funcionesTupla       : 5
if                   : 100 101
int                  : 22 23 24 25 32 33 40 44 57 59 60 61 62 69 114
listIsEmpty          : 81
listReverse          : 82
sentencia            : 2
string               : 20 38 39 43 47 48 55 67 84
term                 : 93 94 95 96 97
tipo                 : 13 17
tipoValue            : 16
tipoValueCons        : 12
tupla                : 50
tuplaProductIterator : 74
tuplaSwap            : 72
tuplaToString        : 73
value                : 18
valueCons            : 14
while                : 11
whileclause          : 102

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesList .

    $end            reduce using rule 6 (cuerpo -> funcionesList .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesList .)


state 8

    (7) cuerpo -> funcionesArray .

    $end            reduce using rule 7 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 7 (cuerpo -> funcionesArray .)


state 9

    (8) cuerpo -> for .

    $end            reduce using rule 8 (cuerpo -> for .)
    RBRACE          reduce using rule 8 (cuerpo -> for .)


state 10

    (9) cuerpo -> funcionesPropias .

    $end            reduce using rule 9 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 9 (cuerpo -> funcionesPropias .)


state 11

    (10) cuerpo -> comparacionesVar .

    $end            reduce using rule 10 (cuerpo -> comparacionesVar .)
    RBRACE          reduce using rule 10 (cuerpo -> comparacionesVar .)


state 12

    (11) cuerpo -> while .

    $end            reduce using rule 11 (cuerpo -> while .)
    RBRACE          reduce using rule 11 (cuerpo -> while .)


state 13

    (95) expression -> term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 95 (expression -> term .)
    MINUS           reduce using rule 95 (expression -> term .)
    $end            reduce using rule 95 (expression -> term .)
    RPAREN          reduce using rule 95 (expression -> term .)
    RBRACE          reduce using rule 95 (expression -> term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 14

    (100) sentencia -> if .
    (101) sentencia -> if . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 100 (sentencia -> if .)
    RBRACE          reduce using rule 100 (sentencia -> if .)
    ELSE            shift and go to state 40


state 15

    (16) declararVariable -> VAR . ID COLON tipoValue
    (17) declararVariable -> VAR . ID COLON tipo
    (18) declararVariable -> VAR . ID EQUAL value
    (19) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 41


state 16

    (107) comparacionesVar -> ID . DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> ID . DOT EQ LPAREN ID RPAREN
    (75) tuplaSwap -> ID . DOT SWAP
    (76) tuplaToString -> ID . DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (92) listIsEmpty -> ID . DOT ISEMPTY
    (91) listReverse -> ID . DOT REVERSE
    (88) arrayHead -> ID . DOT HEAD
    (89) arrayTail -> ID . DOT TAIL
    (90) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 42


state 17

    (12) declararConstante -> VAL . ID COLON tipoValueCons
    (13) declararConstante -> VAL . ID COLON tipo
    (14) declararConstante -> VAL . ID EQUAL valueCons
    (15) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 43


state 18

    (72) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 72 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 72 (funcionesTupla -> tuplaSwap .)


state 19

    (73) funcionesTupla -> tuplaToString .

    $end            reduce using rule 73 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 73 (funcionesTupla -> tuplaToString .)


state 20

    (74) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 74 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 74 (funcionesTupla -> tuplaProductIterator .)


state 21

    (81) funcionesList -> listIsEmpty .

    $end            reduce using rule 81 (funcionesList -> listIsEmpty .)
    RBRACE          reduce using rule 81 (funcionesList -> listIsEmpty .)


state 22

    (82) funcionesList -> listReverse .

    $end            reduce using rule 82 (funcionesList -> listReverse .)
    RBRACE          reduce using rule 82 (funcionesList -> listReverse .)


state 23

    (78) funcionesArray -> arrayHead .

    $end            reduce using rule 78 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 78 (funcionesArray -> arrayHead .)


state 24

    (79) funcionesArray -> arrayTail .

    $end            reduce using rule 79 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 79 (funcionesArray -> arrayTail .)


state 25

    (80) funcionesArray -> arrayLength .

    $end            reduce using rule 80 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 80 (funcionesArray -> arrayLength .)


state 26

    (106) for -> FOR . LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 44


state 27

    (83) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 45


state 28

    (84) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (85) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (86) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (87) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 46


state 29

    (102) while -> WHILE . LPAREN whileclause RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 47


state 30

    (98) term -> factor .

    TIMES           reduce using rule 98 (term -> factor .)
    DIVIDE          reduce using rule 98 (term -> factor .)
    PLUS            reduce using rule 98 (term -> factor .)
    MINUS           reduce using rule 98 (term -> factor .)
    $end            reduce using rule 98 (term -> factor .)
    RPAREN          reduce using rule 98 (term -> factor .)
    RBRACE          reduce using rule 98 (term -> factor .)


state 31

    (99) if -> IF . LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 48


state 32

    (114) factor -> int .

    TIMES           reduce using rule 114 (factor -> int .)
    DIVIDE          reduce using rule 114 (factor -> int .)
    PLUS            reduce using rule 114 (factor -> int .)
    MINUS           reduce using rule 114 (factor -> int .)
    $end            reduce using rule 114 (factor -> int .)
    RPAREN          reduce using rule 114 (factor -> int .)
    RBRACE          reduce using rule 114 (factor -> int .)
    GT              reduce using rule 114 (factor -> int .)
    GE              reduce using rule 114 (factor -> int .)
    LT              reduce using rule 114 (factor -> int .)
    LE              reduce using rule 114 (factor -> int .)
    EQUAL2          reduce using rule 114 (factor -> int .)


state 33

    (115) factor -> double .

    TIMES           reduce using rule 115 (factor -> double .)
    DIVIDE          reduce using rule 115 (factor -> double .)
    PLUS            reduce using rule 115 (factor -> double .)
    MINUS           reduce using rule 115 (factor -> double .)
    $end            reduce using rule 115 (factor -> double .)
    RPAREN          reduce using rule 115 (factor -> double .)
    RBRACE          reduce using rule 115 (factor -> double .)
    GT              reduce using rule 115 (factor -> double .)
    GE              reduce using rule 115 (factor -> double .)
    LT              reduce using rule 115 (factor -> double .)
    LE              reduce using rule 115 (factor -> double .)
    EQUAL2          reduce using rule 115 (factor -> double .)


state 34

    (120) int -> INT_NUMBER .

    TIMES           reduce using rule 120 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 120 (int -> INT_NUMBER .)
    PLUS            reduce using rule 120 (int -> INT_NUMBER .)
    MINUS           reduce using rule 120 (int -> INT_NUMBER .)
    $end            reduce using rule 120 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 120 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 120 (int -> INT_NUMBER .)
    GT              reduce using rule 120 (int -> INT_NUMBER .)
    GE              reduce using rule 120 (int -> INT_NUMBER .)
    LT              reduce using rule 120 (int -> INT_NUMBER .)
    LE              reduce using rule 120 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 120 (int -> INT_NUMBER .)
    COMMA           reduce using rule 120 (int -> INT_NUMBER .)


state 35

    (119) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 119 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 119 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 119 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 119 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 119 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 119 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 119 (double -> DOUBLE_NUMBER .)


state 36

    (93) expression -> expression PLUS . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    term                           shift and go to state 49
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 37

    (94) expression -> expression MINUS . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    term                           shift and go to state 50
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 38

    (96) term -> term TIMES . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 51
    int                            shift and go to state 32
    double                         shift and go to state 33

state 39

    (97) term -> term DIVIDE . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 52
    int                            shift and go to state 32
    double                         shift and go to state 33

state 40

    (101) sentencia -> if ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 53


state 41

    (16) declararVariable -> VAR ID . COLON tipoValue
    (17) declararVariable -> VAR ID . COLON tipo
    (18) declararVariable -> VAR ID . EQUAL value
    (19) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 54
    EQUAL           shift and go to state 55


state 42

    (107) comparacionesVar -> ID DOT . EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> ID DOT . EQ LPAREN ID RPAREN
    (75) tuplaSwap -> ID DOT . SWAP
    (76) tuplaToString -> ID DOT . TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (92) listIsEmpty -> ID DOT . ISEMPTY
    (91) listReverse -> ID DOT . REVERSE
    (88) arrayHead -> ID DOT . HEAD
    (89) arrayTail -> ID DOT . TAIL
    (90) arrayLength -> ID DOT . LENGTH

    EQUALS          shift and go to state 56
    EQ              shift and go to state 57
    SWAP            shift and go to state 58
    TOSTRING        shift and go to state 59
    PRODUCTITERATOR shift and go to state 60
    ISEMPTY         shift and go to state 61
    REVERSE         shift and go to state 62
    HEAD            shift and go to state 63
    TAIL            shift and go to state 64
    LENGTH          shift and go to state 65


state 43

    (12) declararConstante -> VAL ID . COLON tipoValueCons
    (13) declararConstante -> VAL ID . COLON tipo
    (14) declararConstante -> VAL ID . EQUAL valueCons
    (15) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 66
    EQUAL           shift and go to state 67


state 44

    (106) for -> FOR LPAREN . ID LM ID RPAREN LBRACE cuerpo RBRACE

    ID              shift and go to state 68


state 45

    (83) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 69


state 46

    (84) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (85) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (86) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (87) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    ID              shift and go to state 72
    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    string                         shift and go to state 70
    booleano                       shift and go to state 71
    expression                     shift and go to state 73
    term                           shift and go to state 13
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 47

    (102) while -> WHILE LPAREN . whileclause RPAREN LBRACE cuerpo RBRACE
    (103) whileclause -> . factor comparacion factor
    (104) whileclause -> . ID
    (105) whileclause -> . booleano
    (114) factor -> . int
    (115) factor -> . double
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    ID              shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    whileclause                    shift and go to state 77
    factor                         shift and go to state 78
    booleano                       shift and go to state 80
    int                            shift and go to state 32
    double                         shift and go to state 33

state 48

    (99) if -> IF LPAREN . factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 81
    int                            shift and go to state 32
    double                         shift and go to state 33

state 49

    (93) expression -> expression PLUS term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 93 (expression -> expression PLUS term .)
    MINUS           reduce using rule 93 (expression -> expression PLUS term .)
    $end            reduce using rule 93 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 93 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 93 (expression -> expression PLUS term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 50

    (94) expression -> expression MINUS term .
    (96) term -> term . TIMES factor
    (97) term -> term . DIVIDE factor

    PLUS            reduce using rule 94 (expression -> expression MINUS term .)
    MINUS           reduce using rule 94 (expression -> expression MINUS term .)
    $end            reduce using rule 94 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 94 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 94 (expression -> expression MINUS term .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 51

    (96) term -> term TIMES factor .

    TIMES           reduce using rule 96 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 96 (term -> term TIMES factor .)
    PLUS            reduce using rule 96 (term -> term TIMES factor .)
    MINUS           reduce using rule 96 (term -> term TIMES factor .)
    $end            reduce using rule 96 (term -> term TIMES factor .)
    RPAREN          reduce using rule 96 (term -> term TIMES factor .)
    RBRACE          reduce using rule 96 (term -> term TIMES factor .)


state 52

    (97) term -> term DIVIDE factor .

    TIMES           reduce using rule 97 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 97 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 97 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 97 (term -> term DIVIDE factor .)
    $end            reduce using rule 97 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 97 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 97 (term -> term DIVIDE factor .)


state 53

    (101) sentencia -> if ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    if                             shift and go to state 14
    cuerpo                         shift and go to state 82
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 54

    (16) declararVariable -> VAR ID COLON . tipoValue
    (17) declararVariable -> VAR ID COLON . tipo
    (55) tipoValue -> . STRING_TYPE EQUAL string
    (56) tipoValue -> . BOOL EQUAL booleano
    (57) tipoValue -> . INT EQUAL int
    (58) tipoValue -> . DOUBLE EQUAL double
    (59) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (63) tipoValue -> . LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> . LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> . LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> . LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (51) tipo -> . INT
    (52) tipo -> . DOUBLE
    (53) tipo -> . BOOL
    (54) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 85
    BOOL            shift and go to state 86
    INT             shift and go to state 87
    DOUBLE          shift and go to state 88
    ARRAY           shift and go to state 89
    LIST            shift and go to state 90

    tipoValue                      shift and go to state 83
    tipo                           shift and go to state 84

state 55

    (18) declararVariable -> VAR ID EQUAL . value
    (19) declararVariable -> VAR ID EQUAL . expression
    (20) value -> . string
    (21) value -> . booleano
    (22) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (26) value -> . ARRAY LPAREN elementosInternos RPAREN
    (27) value -> . LIST LPAREN elementosInternos RPAREN
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 95
    ARRAY           shift and go to state 96
    LIST            shift and go to state 97
    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    value                          shift and go to state 91
    expression                     shift and go to state 92
    string                         shift and go to state 93
    booleano                       shift and go to state 94
    int                            shift and go to state 32
    term                           shift and go to state 13
    factor                         shift and go to state 30
    double                         shift and go to state 33

state 56

    (107) comparacionesVar -> ID DOT EQUALS . LPAREN ID RPAREN

    LPAREN          shift and go to state 98


state 57

    (108) comparacionesVar -> ID DOT EQ . LPAREN ID RPAREN

    LPAREN          shift and go to state 99


state 58

    (75) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 75 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 75 (tuplaSwap -> ID DOT SWAP .)


state 59

    (76) tuplaToString -> ID DOT TOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 60

    (77) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 77 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 77 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 61

    (92) listIsEmpty -> ID DOT ISEMPTY .

    $end            reduce using rule 92 (listIsEmpty -> ID DOT ISEMPTY .)
    RBRACE          reduce using rule 92 (listIsEmpty -> ID DOT ISEMPTY .)


state 62

    (91) listReverse -> ID DOT REVERSE .

    $end            reduce using rule 91 (listReverse -> ID DOT REVERSE .)
    RBRACE          reduce using rule 91 (listReverse -> ID DOT REVERSE .)


state 63

    (88) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 88 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 88 (arrayHead -> ID DOT HEAD .)


state 64

    (89) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 89 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 89 (arrayTail -> ID DOT TAIL .)


state 65

    (90) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 90 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 90 (arrayLength -> ID DOT LENGTH .)


state 66

    (12) declararConstante -> VAL ID COLON . tipoValueCons
    (13) declararConstante -> VAL ID COLON . tipo
    (67) tipoValueCons -> . STRING_TYPE EQUAL string
    (68) tipoValueCons -> . BOOL EQUAL booleano
    (69) tipoValueCons -> . INT EQUAL int
    (70) tipoValueCons -> . DOUBLE EQUAL double
    (51) tipo -> . INT
    (52) tipo -> . DOUBLE
    (53) tipo -> . BOOL
    (54) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 103
    BOOL            shift and go to state 104
    INT             shift and go to state 105
    DOUBLE          shift and go to state 106

    tipoValueCons                  shift and go to state 101
    tipo                           shift and go to state 102

state 67

    (14) declararConstante -> VAL ID EQUAL . valueCons
    (15) declararConstante -> VAL ID EQUAL . expression
    (48) valueCons -> . string
    (49) valueCons -> . booleano
    (50) valueCons -> . tupla
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (118) string -> . STRING
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (71) tupla -> . LPAREN elementosInternos2 RPAREN
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    LPAREN          shift and go to state 112
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    valueCons                      shift and go to state 107
    expression                     shift and go to state 108
    string                         shift and go to state 109
    booleano                       shift and go to state 110
    tupla                          shift and go to state 111
    term                           shift and go to state 13
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 68

    (106) for -> FOR LPAREN ID . LM ID RPAREN LBRACE cuerpo RBRACE

    LM              shift and go to state 113


state 69

    (83) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 83 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 83 (funcionesPropias -> INPUT LPAREN RPAREN .)


state 70

    (84) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 114


state 71

    (85) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 115


state 72

    (86) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 116


state 73

    (87) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 74

    (118) string -> STRING .

    RPAREN          reduce using rule 118 (string -> STRING .)
    $end            reduce using rule 118 (string -> STRING .)
    RBRACE          reduce using rule 118 (string -> STRING .)
    COMMA           reduce using rule 118 (string -> STRING .)


state 75

    (116) booleano -> TRUE .

    RPAREN          reduce using rule 116 (booleano -> TRUE .)
    $end            reduce using rule 116 (booleano -> TRUE .)
    RBRACE          reduce using rule 116 (booleano -> TRUE .)
    COMMA           reduce using rule 116 (booleano -> TRUE .)


state 76

    (117) booleano -> FALSE .

    RPAREN          reduce using rule 117 (booleano -> FALSE .)
    $end            reduce using rule 117 (booleano -> FALSE .)
    RBRACE          reduce using rule 117 (booleano -> FALSE .)
    COMMA           reduce using rule 117 (booleano -> FALSE .)


state 77

    (102) while -> WHILE LPAREN whileclause . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 118


state 78

    (103) whileclause -> factor . comparacion factor
    (109) comparacion -> . GT
    (110) comparacion -> . GE
    (111) comparacion -> . LT
    (112) comparacion -> . LE
    (113) comparacion -> . EQUAL2

    GT              shift and go to state 120
    GE              shift and go to state 121
    LT              shift and go to state 122
    LE              shift and go to state 123
    EQUAL2          shift and go to state 124

    comparacion                    shift and go to state 119

state 79

    (104) whileclause -> ID .

    RPAREN          reduce using rule 104 (whileclause -> ID .)


state 80

    (105) whileclause -> booleano .

    RPAREN          reduce using rule 105 (whileclause -> booleano .)


state 81

    (99) if -> IF LPAREN factor . comparacion factor RPAREN LBRACE cuerpo RBRACE
    (109) comparacion -> . GT
    (110) comparacion -> . GE
    (111) comparacion -> . LT
    (112) comparacion -> . LE
    (113) comparacion -> . EQUAL2

    GT              shift and go to state 120
    GE              shift and go to state 121
    LT              shift and go to state 122
    LE              shift and go to state 123
    EQUAL2          shift and go to state 124

    comparacion                    shift and go to state 125

state 82

    (101) sentencia -> if ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 126


state 83

    (16) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 16 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 16 (declararVariable -> VAR ID COLON tipoValue .)


state 84

    (17) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 17 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 17 (declararVariable -> VAR ID COLON tipo .)


state 85

    (55) tipoValue -> STRING_TYPE . EQUAL string
    (54) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 127
    $end            reduce using rule 54 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 54 (tipo -> STRING_TYPE .)


state 86

    (56) tipoValue -> BOOL . EQUAL booleano
    (53) tipo -> BOOL .

    EQUAL           shift and go to state 128
    $end            reduce using rule 53 (tipo -> BOOL .)
    RBRACE          reduce using rule 53 (tipo -> BOOL .)


state 87

    (57) tipoValue -> INT . EQUAL int
    (51) tipo -> INT .

    EQUAL           shift and go to state 129
    $end            reduce using rule 51 (tipo -> INT .)
    RBRACE          reduce using rule 51 (tipo -> INT .)


state 88

    (58) tipoValue -> DOUBLE . EQUAL double
    (52) tipo -> DOUBLE .

    EQUAL           shift and go to state 130
    $end            reduce using rule 52 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 52 (tipo -> DOUBLE .)


state 89

    (59) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 131


state 90

    (63) tipoValue -> LIST . LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST . LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> LIST . LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> LIST . LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    LBRACK          shift and go to state 132


state 91

    (18) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 18 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 18 (declararVariable -> VAR ID EQUAL value .)


state 92

    (19) declararVariable -> VAR ID EQUAL expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 19 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 19 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 93

    (20) value -> string .

    $end            reduce using rule 20 (value -> string .)
    RBRACE          reduce using rule 20 (value -> string .)


state 94

    (21) value -> booleano .

    $end            reduce using rule 21 (value -> booleano .)
    RBRACE          reduce using rule 21 (value -> booleano .)


state 95

    (22) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 133


state 96

    (26) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 134


state 97

    (27) value -> LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 135


state 98

    (107) comparacionesVar -> ID DOT EQUALS LPAREN . ID RPAREN

    ID              shift and go to state 136


state 99

    (108) comparacionesVar -> ID DOT EQ LPAREN . ID RPAREN

    ID              shift and go to state 137


state 100

    (76) tuplaToString -> ID DOT TOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 138


state 101

    (12) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 12 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 12 (declararConstante -> VAL ID COLON tipoValueCons .)


state 102

    (13) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 13 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 13 (declararConstante -> VAL ID COLON tipo .)


state 103

    (67) tipoValueCons -> STRING_TYPE . EQUAL string
    (54) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 139
    $end            reduce using rule 54 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 54 (tipo -> STRING_TYPE .)


state 104

    (68) tipoValueCons -> BOOL . EQUAL booleano
    (53) tipo -> BOOL .

    EQUAL           shift and go to state 140
    $end            reduce using rule 53 (tipo -> BOOL .)
    RBRACE          reduce using rule 53 (tipo -> BOOL .)


state 105

    (69) tipoValueCons -> INT . EQUAL int
    (51) tipo -> INT .

    EQUAL           shift and go to state 141
    $end            reduce using rule 51 (tipo -> INT .)
    RBRACE          reduce using rule 51 (tipo -> INT .)


state 106

    (70) tipoValueCons -> DOUBLE . EQUAL double
    (52) tipo -> DOUBLE .

    EQUAL           shift and go to state 142
    $end            reduce using rule 52 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 52 (tipo -> DOUBLE .)


state 107

    (14) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 14 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 14 (declararConstante -> VAL ID EQUAL valueCons .)


state 108

    (15) declararConstante -> VAL ID EQUAL expression .
    (93) expression -> expression . PLUS term
    (94) expression -> expression . MINUS term

    $end            reduce using rule 15 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 15 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 109

    (48) valueCons -> string .

    $end            reduce using rule 48 (valueCons -> string .)
    RBRACE          reduce using rule 48 (valueCons -> string .)


state 110

    (49) valueCons -> booleano .

    $end            reduce using rule 49 (valueCons -> booleano .)
    RBRACE          reduce using rule 49 (valueCons -> booleano .)


state 111

    (50) valueCons -> tupla .

    $end            reduce using rule 50 (valueCons -> tupla .)
    RBRACE          reduce using rule 50 (valueCons -> tupla .)


state 112

    (71) tupla -> LPAREN . elementosInternos2 RPAREN
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos2             shift and go to state 143
    int                            shift and go to state 144
    double                         shift and go to state 145
    booleano                       shift and go to state 146
    string                         shift and go to state 147

state 113

    (106) for -> FOR LPAREN ID LM . ID RPAREN LBRACE cuerpo RBRACE

    ID              shift and go to state 148


state 114

    (84) funcionesPropias -> PRINTLN LPAREN string RPAREN .

    $end            reduce using rule 84 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 84 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)


state 115

    (85) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .

    $end            reduce using rule 85 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 85 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)


state 116

    (86) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

    $end            reduce using rule 86 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 86 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)


state 117

    (87) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

    $end            reduce using rule 87 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 87 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)


state 118

    (102) while -> WHILE LPAREN whileclause RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 149


state 119

    (103) whileclause -> factor comparacion . factor
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 150
    int                            shift and go to state 32
    double                         shift and go to state 33

state 120

    (109) comparacion -> GT .

    INT_NUMBER      reduce using rule 109 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 109 (comparacion -> GT .)


state 121

    (110) comparacion -> GE .

    INT_NUMBER      reduce using rule 110 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 110 (comparacion -> GE .)


state 122

    (111) comparacion -> LT .

    INT_NUMBER      reduce using rule 111 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 111 (comparacion -> LT .)


state 123

    (112) comparacion -> LE .

    INT_NUMBER      reduce using rule 112 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 112 (comparacion -> LE .)


state 124

    (113) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 113 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 113 (comparacion -> EQUAL2 .)


state 125

    (99) if -> IF LPAREN factor comparacion . factor RPAREN LBRACE cuerpo RBRACE
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 151
    int                            shift and go to state 32
    double                         shift and go to state 33

state 126

    (101) sentencia -> if ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 101 (sentencia -> if ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 101 (sentencia -> if ELSE LBRACE cuerpo RBRACE .)


state 127

    (55) tipoValue -> STRING_TYPE EQUAL . string
    (118) string -> . STRING

    STRING          shift and go to state 74

    string                         shift and go to state 152

state 128

    (56) tipoValue -> BOOL EQUAL . booleano
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE

    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleano                       shift and go to state 153

state 129

    (57) tipoValue -> INT EQUAL . int
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 154

state 130

    (58) tipoValue -> DOUBLE EQUAL . double
    (119) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 35

    double                         shift and go to state 155

state 131

    (59) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (60) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (61) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (62) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 156
    DOUBLE          shift and go to state 157
    BOOL            shift and go to state 158
    STRING_TYPE     shift and go to state 159


state 132

    (63) tipoValue -> LIST LBRACK . INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (64) tipoValue -> LIST LBRACK . DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (65) tipoValue -> LIST LBRACK . BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN
    (66) tipoValue -> LIST LBRACK . STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    INT             shift and go to state 160
    DOUBLE          shift and go to state 161
    BOOL            shift and go to state 162
    STRING_TYPE     shift and go to state 163


state 133

    (22) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 164


state 134

    (26) value -> ARRAY LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 165
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 135

    (27) value -> LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 174
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 136

    (107) comparacionesVar -> ID DOT EQUALS LPAREN ID . RPAREN

    RPAREN          shift and go to state 175


state 137

    (108) comparacionesVar -> ID DOT EQ LPAREN ID . RPAREN

    RPAREN          shift and go to state 176


state 138

    (76) tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .

    $end            reduce using rule 76 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)
    RBRACE          reduce using rule 76 (tuplaToString -> ID DOT TOSTRING LPAREN RPAREN .)


state 139

    (67) tipoValueCons -> STRING_TYPE EQUAL . string
    (118) string -> . STRING

    STRING          shift and go to state 74

    string                         shift and go to state 177

state 140

    (68) tipoValueCons -> BOOL EQUAL . booleano
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE

    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleano                       shift and go to state 178

state 141

    (69) tipoValueCons -> INT EQUAL . int
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 179

state 142

    (70) tipoValueCons -> DOUBLE EQUAL . double
    (119) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 35

    double                         shift and go to state 180

state 143

    (71) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 181


state 144

    (40) elementosInternos2 -> int .
    (44) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 40 (elementosInternos2 -> int .)
    COMMA           shift and go to state 182


state 145

    (41) elementosInternos2 -> double .
    (45) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 41 (elementosInternos2 -> double .)
    COMMA           shift and go to state 183


state 146

    (42) elementosInternos2 -> booleano .
    (46) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 42 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 184


state 147

    (43) elementosInternos2 -> string .
    (47) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 43 (elementosInternos2 -> string .)
    COMMA           shift and go to state 185


state 148

    (106) for -> FOR LPAREN ID LM ID . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 186


state 149

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    cuerpo                         shift and go to state 187
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 150

    (103) whileclause -> factor comparacion factor .

    RPAREN          reduce using rule 103 (whileclause -> factor comparacion factor .)


state 151

    (99) if -> IF LPAREN factor comparacion factor . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 188


state 152

    (55) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 55 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 55 (tipoValue -> STRING_TYPE EQUAL string .)


state 153

    (56) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 56 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 56 (tipoValue -> BOOL EQUAL booleano .)


state 154

    (57) tipoValue -> INT EQUAL int .

    $end            reduce using rule 57 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 57 (tipoValue -> INT EQUAL int .)


state 155

    (58) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 58 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 58 (tipoValue -> DOUBLE EQUAL double .)


state 156

    (59) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 189


state 157

    (60) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 190


state 158

    (61) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 191


state 159

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 192


state 160

    (63) tipoValue -> LIST LBRACK INT . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 193


state 161

    (64) tipoValue -> LIST LBRACK DOUBLE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 194


state 162

    (65) tipoValue -> LIST LBRACK BOOL . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 195


state 163

    (66) tipoValue -> LIST LBRACK STRING_TYPE . RBRACK EQUAL LIST LPAREN elementosInternos RPAREN

    RBRACK          shift and go to state 196


state 164

    (22) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (23) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (24) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (25) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 197
    DOUBLE          shift and go to state 198
    BOOL            shift and go to state 199
    STRING_TYPE     shift and go to state 200


state 165

    (26) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 201


state 166

    (28) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 28 (elementosInternos -> elementosInternosInt .)


state 167

    (29) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 29 (elementosInternos -> elementosInternosDouble .)


state 168

    (30) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 30 (elementosInternos -> elementosInternosBool .)


state 169

    (31) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 31 (elementosInternos -> elementosInternosString .)


state 170

    (32) elementosInternosInt -> int .
    (33) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 32 (elementosInternosInt -> int .)
    COMMA           shift and go to state 202


state 171

    (34) elementosInternosDouble -> double .
    (35) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 34 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 203


state 172

    (36) elementosInternosBool -> booleano .
    (37) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 36 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 204


state 173

    (38) elementosInternosString -> string .
    (39) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 38 (elementosInternosString -> string .)
    COMMA           shift and go to state 205


state 174

    (27) value -> LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 206


state 175

    (107) comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .

    $end            reduce using rule 107 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)
    RBRACE          reduce using rule 107 (comparacionesVar -> ID DOT EQUALS LPAREN ID RPAREN .)


state 176

    (108) comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .

    $end            reduce using rule 108 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)
    RBRACE          reduce using rule 108 (comparacionesVar -> ID DOT EQ LPAREN ID RPAREN .)


state 177

    (67) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 67 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 67 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 178

    (68) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 68 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 68 (tipoValueCons -> BOOL EQUAL booleano .)


state 179

    (69) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 69 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 69 (tipoValueCons -> INT EQUAL int .)


state 180

    (70) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 70 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 70 (tipoValueCons -> DOUBLE EQUAL double .)


state 181

    (71) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 71 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 71 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 182

    (44) elementosInternos2 -> int COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    int                            shift and go to state 144
    elementosInternos2             shift and go to state 207
    double                         shift and go to state 145
    booleano                       shift and go to state 146
    string                         shift and go to state 147

state 183

    (45) elementosInternos2 -> double COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    double                         shift and go to state 145
    elementosInternos2             shift and go to state 208
    int                            shift and go to state 144
    booleano                       shift and go to state 146
    string                         shift and go to state 147

state 184

    (46) elementosInternos2 -> booleano COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    booleano                       shift and go to state 146
    elementosInternos2             shift and go to state 209
    int                            shift and go to state 144
    double                         shift and go to state 145
    string                         shift and go to state 147

state 185

    (47) elementosInternos2 -> string COMMA . elementosInternos2
    (40) elementosInternos2 -> . int
    (41) elementosInternos2 -> . double
    (42) elementosInternos2 -> . booleano
    (43) elementosInternos2 -> . string
    (44) elementosInternos2 -> . int COMMA elementosInternos2
    (45) elementosInternos2 -> . double COMMA elementosInternos2
    (46) elementosInternos2 -> . booleano COMMA elementosInternos2
    (47) elementosInternos2 -> . string COMMA elementosInternos2
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    string                         shift and go to state 147
    elementosInternos2             shift and go to state 210
    int                            shift and go to state 144
    double                         shift and go to state 145
    booleano                       shift and go to state 146

state 186

    (106) for -> FOR LPAREN ID LM ID RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 211


state 187

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 212


state 188

    (99) if -> IF LPAREN factor comparacion factor RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 213


state 189

    (59) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 214


state 190

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 215


state 191

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 216


state 192

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 217


state 193

    (63) tipoValue -> LIST LBRACK INT RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 218


state 194

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 219


state 195

    (65) tipoValue -> LIST LBRACK BOOL RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 220


state 196

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK . EQUAL LIST LPAREN elementosInternos RPAREN

    EQUAL           shift and go to state 221


state 197

    (22) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 222


state 198

    (23) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 223


state 199

    (24) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 224


state 200

    (25) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 225


state 201

    (26) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 26 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 26 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 202

    (33) elementosInternosInt -> int COMMA . elementosInternosInt
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 170
    elementosInternosInt           shift and go to state 226

state 203

    (35) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (119) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 35

    double                         shift and go to state 171
    elementosInternosDouble        shift and go to state 227

state 204

    (37) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE

    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleano                       shift and go to state 172
    elementosInternosBool          shift and go to state 228

state 205

    (39) elementosInternosString -> string COMMA . elementosInternosString
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (118) string -> . STRING

    STRING          shift and go to state 74

    string                         shift and go to state 173
    elementosInternosString        shift and go to state 229

state 206

    (27) value -> LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 27 (value -> LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 27 (value -> LIST LPAREN elementosInternos RPAREN .)


state 207

    (44) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 44 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 208

    (45) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 45 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 209

    (46) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 46 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 210

    (47) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 47 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 211

    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    cuerpo                         shift and go to state 230
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    factor                         shift and go to state 30
    int                            shift and go to state 32
    double                         shift and go to state 33

state 212

    (102) while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 102 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 102 (while -> WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE .)


state 213

    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesList
    (7) cuerpo -> . funcionesArray
    (8) cuerpo -> . for
    (9) cuerpo -> . funcionesPropias
    (10) cuerpo -> . comparacionesVar
    (11) cuerpo -> . while
    (93) expression -> . expression PLUS term
    (94) expression -> . expression MINUS term
    (95) expression -> . term
    (100) sentencia -> . if
    (101) sentencia -> . if ELSE LBRACE cuerpo RBRACE
    (16) declararVariable -> . VAR ID COLON tipoValue
    (17) declararVariable -> . VAR ID COLON tipo
    (18) declararVariable -> . VAR ID EQUAL value
    (19) declararVariable -> . VAR ID EQUAL expression
    (12) declararConstante -> . VAL ID COLON tipoValueCons
    (13) declararConstante -> . VAL ID COLON tipo
    (14) declararConstante -> . VAL ID EQUAL valueCons
    (15) declararConstante -> . VAL ID EQUAL expression
    (72) funcionesTupla -> . tuplaSwap
    (73) funcionesTupla -> . tuplaToString
    (74) funcionesTupla -> . tuplaProductIterator
    (81) funcionesList -> . listIsEmpty
    (82) funcionesList -> . listReverse
    (78) funcionesArray -> . arrayHead
    (79) funcionesArray -> . arrayTail
    (80) funcionesArray -> . arrayLength
    (106) for -> . FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE
    (83) funcionesPropias -> . INPUT LPAREN RPAREN
    (84) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (85) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (86) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (87) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (107) comparacionesVar -> . ID DOT EQUALS LPAREN ID RPAREN
    (108) comparacionesVar -> . ID DOT EQ LPAREN ID RPAREN
    (102) while -> . WHILE LPAREN whileclause RPAREN LBRACE cuerpo RBRACE
    (96) term -> . term TIMES factor
    (97) term -> . term DIVIDE factor
    (98) term -> . factor
    (99) if -> . IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE
    (75) tuplaSwap -> . ID DOT SWAP
    (76) tuplaToString -> . ID DOT TOSTRING LPAREN RPAREN
    (77) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (92) listIsEmpty -> . ID DOT ISEMPTY
    (91) listReverse -> . ID DOT REVERSE
    (88) arrayHead -> . ID DOT HEAD
    (89) arrayTail -> . ID DOT TAIL
    (90) arrayLength -> . ID DOT LENGTH
    (114) factor -> . int
    (115) factor -> . double
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER

    VAR             shift and go to state 15
    VAL             shift and go to state 17
    FOR             shift and go to state 26
    INPUT           shift and go to state 27
    PRINTLN         shift and go to state 28
    ID              shift and go to state 16
    WHILE           shift and go to state 29
    IF              shift and go to state 31
    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35

    factor                         shift and go to state 30
    cuerpo                         shift and go to state 231
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesList                  shift and go to state 7
    funcionesArray                 shift and go to state 8
    for                            shift and go to state 9
    funcionesPropias               shift and go to state 10
    comparacionesVar               shift and go to state 11
    while                          shift and go to state 12
    term                           shift and go to state 13
    if                             shift and go to state 14
    tuplaSwap                      shift and go to state 18
    tuplaToString                  shift and go to state 19
    tuplaProductIterator           shift and go to state 20
    listIsEmpty                    shift and go to state 21
    listReverse                    shift and go to state 22
    arrayHead                      shift and go to state 23
    arrayTail                      shift and go to state 24
    arrayLength                    shift and go to state 25
    int                            shift and go to state 32
    double                         shift and go to state 33

state 214

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 232


state 215

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 233


state 216

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 234


state 217

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 235


state 218

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 236


state 219

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 237


state 220

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 238


state 221

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL . LIST LPAREN elementosInternos RPAREN

    LIST            shift and go to state 239


state 222

    (22) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 240


state 223

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 241


state 224

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 242


state 225

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 243


state 226

    (33) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 33 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 227

    (35) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 35 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 228

    (37) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 37 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 229

    (39) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 39 (elementosInternosString -> string COMMA elementosInternosString .)


state 230

    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 244


state 231

    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 245


state 232

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 246


state 233

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 247


state 234

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 248


state 235

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 249


state 236

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 250


state 237

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 251


state 238

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 252


state 239

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 253


state 240

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 254

state 241

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 255

state 242

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 256

state 243

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 257

state 244

    (106) for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 106 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 106 (for -> FOR LPAREN ID LM ID RPAREN LBRACE cuerpo RBRACE .)


state 245

    (99) if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 99 (if -> IF LPAREN factor comparacion factor RPAREN LBRACE cuerpo RBRACE .)


state 246

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 258


state 247

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 259


state 248

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 260


state 249

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 261


state 250

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 262
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 251

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 263
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 252

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 264
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 253

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN . elementosInternos RPAREN
    (28) elementosInternos -> . elementosInternosInt
    (29) elementosInternos -> . elementosInternosDouble
    (30) elementosInternos -> . elementosInternosBool
    (31) elementosInternos -> . elementosInternosString
    (32) elementosInternosInt -> . int
    (33) elementosInternosInt -> . int COMMA elementosInternosInt
    (34) elementosInternosDouble -> . double
    (35) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (36) elementosInternosBool -> . booleano
    (37) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (38) elementosInternosString -> . string
    (39) elementosInternosString -> . string COMMA elementosInternosString
    (120) int -> . INT_NUMBER
    (119) double -> . DOUBLE_NUMBER
    (116) booleano -> . TRUE
    (117) booleano -> . FALSE
    (118) string -> . STRING

    INT_NUMBER      shift and go to state 34
    DOUBLE_NUMBER   shift and go to state 35
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    STRING          shift and go to state 74

    elementosInternos              shift and go to state 265
    elementosInternosInt           shift and go to state 166
    elementosInternosDouble        shift and go to state 167
    elementosInternosBool          shift and go to state 168
    elementosInternosString        shift and go to state 169
    int                            shift and go to state 170
    double                         shift and go to state 171
    booleano                       shift and go to state 172
    string                         shift and go to state 173

state 254

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 266


state 255

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 267


state 256

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 268


state 257

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 269


state 258

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 270


state 259

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 271


state 260

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 272


state 261

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 273


state 262

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 274


state 263

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 275


state 264

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 276


state 265

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 277


state 266

    (22) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 22 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 22 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 267

    (23) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 23 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 23 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 268

    (24) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 24 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 24 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 269

    (25) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 25 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 25 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 270

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 278


state 271

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 279


state 272

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 280


state 273

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 281


state 274

    (63) tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 63 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 63 (tipoValue -> LIST LBRACK INT RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 275

    (64) tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 64 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 64 (tipoValue -> LIST LBRACK DOUBLE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 276

    (65) tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 65 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 65 (tipoValue -> LIST LBRACK BOOL RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 277

    (66) tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .

    $end            reduce using rule 66 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 66 (tipoValue -> LIST LBRACK STRING_TYPE RBRACK EQUAL LIST LPAREN elementosInternos RPAREN .)


state 278

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 282


state 279

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 283


state 280

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 284


state 281

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 285


state 282

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 286

state 283

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 287

state 284

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 288

state 285

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (120) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 34

    int                            shift and go to state 289

state 286

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 290


state 287

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 291


state 288

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 292


state 289

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 293


state 290

    (59) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 59 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 59 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 291

    (60) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 60 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 60 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 292

    (61) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 61 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 61 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 293

    (62) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 62 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 62 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

