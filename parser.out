Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DECREMENT
    DEF
    ELSE
    EQ
    EQUALS
    FOR
    INCREMENT
    ISEMPTY
    LIST
    MOD
    OBJECT
    RETURN
    REVERSE
    SEMICOLON
    THIS
    WHILE
    unit

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> sentencia
Rule 3     cuerpo -> declararVariable
Rule 4     cuerpo -> declararConstante
Rule 5     cuerpo -> funcionesTupla
Rule 6     cuerpo -> funcionesArray
Rule 7     cuerpo -> funcionesPropias
Rule 8     declararConstante -> VAL ID COLON tipoValueCons
Rule 9     declararConstante -> VAL ID COLON tipo
Rule 10    declararConstante -> VAL ID EQUAL valueCons
Rule 11    declararConstante -> VAL ID EQUAL expression
Rule 12    declararVariable -> VAR ID COLON tipoValue
Rule 13    declararVariable -> VAR ID COLON tipo
Rule 14    declararVariable -> VAR ID EQUAL value
Rule 15    declararVariable -> VAR ID EQUAL expression
Rule 16    value -> string
Rule 17    value -> booleano
Rule 18    value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 19    value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 20    value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 21    value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 22    value -> ARRAY LPAREN elementosInternos RPAREN
Rule 23    elementosInternos -> elementosInternosInt
Rule 24    elementosInternos -> elementosInternosDouble
Rule 25    elementosInternos -> elementosInternosBool
Rule 26    elementosInternos -> elementosInternosString
Rule 27    elementosInternosInt -> int
Rule 28    elementosInternosInt -> int COMMA elementosInternosInt
Rule 29    elementosInternosDouble -> double
Rule 30    elementosInternosDouble -> double COMMA elementosInternosDouble
Rule 31    elementosInternosBool -> booleano
Rule 32    elementosInternosBool -> booleano COMMA elementosInternosBool
Rule 33    elementosInternosString -> string
Rule 34    elementosInternosString -> string COMMA elementosInternosString
Rule 35    elementosInternos2 -> int
Rule 36    elementosInternos2 -> double
Rule 37    elementosInternos2 -> booleano
Rule 38    elementosInternos2 -> string
Rule 39    elementosInternos2 -> int COMMA elementosInternos2
Rule 40    elementosInternos2 -> double COMMA elementosInternos2
Rule 41    elementosInternos2 -> booleano COMMA elementosInternos2
Rule 42    elementosInternos2 -> string COMMA elementosInternos2
Rule 43    valueCons -> string
Rule 44    valueCons -> booleano
Rule 45    valueCons -> tupla
Rule 46    tipo -> INT
Rule 47    tipo -> DOUBLE
Rule 48    tipo -> BOOL
Rule 49    tipo -> STRING_TYPE
Rule 50    tipoValue -> STRING_TYPE EQUAL string
Rule 51    tipoValue -> BOOL EQUAL booleano
Rule 52    tipoValue -> INT EQUAL int
Rule 53    tipoValue -> DOUBLE EQUAL double
Rule 54    tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
Rule 55    tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
Rule 56    tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
Rule 57    tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
Rule 58    tipoValueCons -> STRING_TYPE EQUAL string
Rule 59    tipoValueCons -> BOOL EQUAL booleano
Rule 60    tipoValueCons -> INT EQUAL int
Rule 61    tipoValueCons -> DOUBLE EQUAL double
Rule 62    tupla -> LPAREN elementosInternos2 RPAREN
Rule 63    funcionesTupla -> tuplaSwap
Rule 64    funcionesTupla -> tuplaToString
Rule 65    funcionesTupla -> tuplaProductIterator
Rule 66    tuplaSwap -> ID DOT SWAP
Rule 67    tuplaToString -> ID DOT TOSTRING
Rule 68    tuplaProductIterator -> ID DOT PRODUCTITERATOR
Rule 69    funcionesArray -> arrayHead
Rule 70    funcionesArray -> arrayTail
Rule 71    funcionesArray -> arrayLength
Rule 72    funcionesPropias -> INPUT LPAREN RPAREN
Rule 73    funcionesPropias -> PRINTLN LPAREN string RPAREN
Rule 74    funcionesPropias -> PRINTLN LPAREN int RPAREN
Rule 75    funcionesPropias -> PRINTLN LPAREN booleano RPAREN
Rule 76    funcionesPropias -> PRINTLN LPAREN double RPAREN
Rule 77    funcionesPropias -> PRINTLN LPAREN ID RPAREN
Rule 78    funcionesPropias -> PRINTLN LPAREN expression RPAREN
Rule 79    arrayHead -> ID DOT HEAD
Rule 80    arrayTail -> ID DOT TAIL
Rule 81    arrayLength -> ID DOT LENGTH
Rule 82    expression -> expression PLUS term
Rule 83    expression -> expression MINUS term
Rule 84    expression -> term
Rule 85    term -> term TIMES factor
Rule 86    term -> term DIVIDE factor
Rule 87    term -> factor
Rule 88    sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE
Rule 89    comparacion -> GT
Rule 90    comparacion -> GE
Rule 91    comparacion -> LT
Rule 92    comparacion -> LE
Rule 93    comparacion -> EQUAL2
Rule 94    factor -> int
Rule 95    factor -> double
Rule 96    booleano -> TRUE
Rule 97    booleano -> FALSE
Rule 98    string -> STRING
Rule 99    double -> DOUBLE_NUMBER
Rule 100   int -> INT_NUMBER

Terminals, with rules where they appear

ARRAY                : 18 19 20 21 22 54 54 55 55 56 56 57 57
BOOL                 : 20 48 51 56 56 59
CLASS                : 
COLON                : 8 9 12 13
COMMA                : 28 30 32 34 39 40 41 42
DECREMENT            : 
DEF                  : 
DIVIDE               : 86
DOT                  : 66 67 68 79 80 81
DOUBLE               : 19 47 53 55 55 61
DOUBLE_NUMBER        : 99
ELSE                 : 
EQ                   : 
EQUAL                : 10 11 14 15 50 51 52 53 54 55 56 57 58 59 60 61
EQUAL2               : 93
EQUALS               : 
FALSE                : 97
FOR                  : 
GE                   : 90
GT                   : 89
HEAD                 : 79
ID                   : 8 9 10 11 12 13 14 15 66 67 68 77 79 80 81
IF                   : 88
INCREMENT            : 
INPUT                : 72
INT                  : 18 46 52 54 54 60
INT_NUMBER           : 100
ISEMPTY              : 
LBRACE               : 88
LBRACK               : 18 19 20 21 54 54 55 55 56 56 57 57
LE                   : 92
LENGTH               : 81
LIST                 : 
LPAREN               : 18 19 20 21 22 54 55 56 57 62 72 73 74 75 76 77 78
LT                   : 91
MINUS                : 83
MOD                  : 
NEW                  : 18 19 20 21 54 55 56 57
OBJECT               : 
PLUS                 : 82
PRINTLN              : 73 74 75 76 77 78
PRODUCTITERATOR      : 68
RBRACE               : 88
RBRACK               : 18 19 20 21 54 54 55 55 56 56 57 57
RETURN               : 
REVERSE              : 
RPAREN               : 18 19 20 21 22 54 55 56 57 62 72 73 74 75 76 77 78
SEMICOLON            : 
STRING               : 98
STRING_TYPE          : 21 49 50 57 57 58
SWAP                 : 66
TAIL                 : 80
THIS                 : 
TIMES                : 85
TOSTRING             : 67
TRUE                 : 96
VAL                  : 8 9 10 11
VAR                  : 12 13 14 15
WHILE                : 
error                : 
unit                 : 

Nonterminals, with rules where they appear

arrayHead            : 69
arrayLength          : 71
arrayTail            : 70
booleano             : 17 31 32 37 41 44 51 59 75
comparacion          : 88
cuerpo               : 88 0
declararConstante    : 4
declararVariable     : 3
double               : 29 30 36 40 53 61 76 95
elementosInternos    : 22
elementosInternos2   : 39 40 41 42 62
elementosInternosBool : 25 32
elementosInternosDouble : 24 30
elementosInternosInt : 23 28
elementosInternosString : 26 34
expression           : 1 11 15 78 82 83
factor               : 85 86 87 88 88
funcionesArray       : 6
funcionesPropias     : 7
funcionesTupla       : 5
int                  : 18 19 20 21 27 28 35 39 52 54 55 56 57 60 74 94
sentencia            : 2
string               : 16 33 34 38 42 43 50 58 73
term                 : 82 83 84 85 86
tipo                 : 9 13
tipoValue            : 12
tipoValueCons        : 8
tupla                : 45
tuplaProductIterator : 65
tuplaSwap            : 63
tuplaToString        : 64
value                : 14
valueCons            : 10

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . funcionesPropias
    (82) expression -> . expression PLUS term
    (83) expression -> . expression MINUS term
    (84) expression -> . term
    (88) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (12) declararVariable -> . VAR ID COLON tipoValue
    (13) declararVariable -> . VAR ID COLON tipo
    (14) declararVariable -> . VAR ID EQUAL value
    (15) declararVariable -> . VAR ID EQUAL expression
    (8) declararConstante -> . VAL ID COLON tipoValueCons
    (9) declararConstante -> . VAL ID COLON tipo
    (10) declararConstante -> . VAL ID EQUAL valueCons
    (11) declararConstante -> . VAL ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (72) funcionesPropias -> . INPUT LPAREN RPAREN
    (73) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (74) funcionesPropias -> . PRINTLN LPAREN int RPAREN
    (75) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (76) funcionesPropias -> . PRINTLN LPAREN double RPAREN
    (77) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (78) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (79) arrayHead -> . ID DOT HEAD
    (80) arrayTail -> . ID DOT TAIL
    (81) arrayLength -> . ID DOT LENGTH
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    IF              shift and go to state 10
    VAR             shift and go to state 12
    VAL             shift and go to state 14
    INPUT           shift and go to state 21
    PRINTLN         shift and go to state 22
    ID              shift and go to state 13
    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    funcionesPropias               shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 11
    tuplaSwap                      shift and go to state 15
    tuplaToString                  shift and go to state 16
    tuplaProductIterator           shift and go to state 17
    arrayHead                      shift and go to state 18
    arrayTail                      shift and go to state 19
    arrayLength                    shift and go to state 20
    int                            shift and go to state 23
    double                         shift and go to state 24

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (82) expression -> expression . PLUS term
    (83) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    RBRACE          reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 3

    (2) cuerpo -> sentencia .

    $end            reduce using rule 2 (cuerpo -> sentencia .)
    RBRACE          reduce using rule 2 (cuerpo -> sentencia .)


state 4

    (3) cuerpo -> declararVariable .

    $end            reduce using rule 3 (cuerpo -> declararVariable .)
    RBRACE          reduce using rule 3 (cuerpo -> declararVariable .)


state 5

    (4) cuerpo -> declararConstante .

    $end            reduce using rule 4 (cuerpo -> declararConstante .)
    RBRACE          reduce using rule 4 (cuerpo -> declararConstante .)


state 6

    (5) cuerpo -> funcionesTupla .

    $end            reduce using rule 5 (cuerpo -> funcionesTupla .)
    RBRACE          reduce using rule 5 (cuerpo -> funcionesTupla .)


state 7

    (6) cuerpo -> funcionesArray .

    $end            reduce using rule 6 (cuerpo -> funcionesArray .)
    RBRACE          reduce using rule 6 (cuerpo -> funcionesArray .)


state 8

    (7) cuerpo -> funcionesPropias .

    $end            reduce using rule 7 (cuerpo -> funcionesPropias .)
    RBRACE          reduce using rule 7 (cuerpo -> funcionesPropias .)


state 9

    (84) expression -> term .
    (85) term -> term . TIMES factor
    (86) term -> term . DIVIDE factor

    PLUS            reduce using rule 84 (expression -> term .)
    MINUS           reduce using rule 84 (expression -> term .)
    $end            reduce using rule 84 (expression -> term .)
    RPAREN          reduce using rule 84 (expression -> term .)
    RBRACE          reduce using rule 84 (expression -> term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30


state 10

    (88) sentencia -> IF . factor comparacion factor LBRACE cuerpo RBRACE
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    factor                         shift and go to state 31
    int                            shift and go to state 23
    double                         shift and go to state 24

state 11

    (87) term -> factor .

    TIMES           reduce using rule 87 (term -> factor .)
    DIVIDE          reduce using rule 87 (term -> factor .)
    PLUS            reduce using rule 87 (term -> factor .)
    MINUS           reduce using rule 87 (term -> factor .)
    $end            reduce using rule 87 (term -> factor .)
    RPAREN          reduce using rule 87 (term -> factor .)
    RBRACE          reduce using rule 87 (term -> factor .)


state 12

    (12) declararVariable -> VAR . ID COLON tipoValue
    (13) declararVariable -> VAR . ID COLON tipo
    (14) declararVariable -> VAR . ID EQUAL value
    (15) declararVariable -> VAR . ID EQUAL expression

    ID              shift and go to state 32


state 13

    (66) tuplaSwap -> ID . DOT SWAP
    (67) tuplaToString -> ID . DOT TOSTRING
    (68) tuplaProductIterator -> ID . DOT PRODUCTITERATOR
    (79) arrayHead -> ID . DOT HEAD
    (80) arrayTail -> ID . DOT TAIL
    (81) arrayLength -> ID . DOT LENGTH

    DOT             shift and go to state 33


state 14

    (8) declararConstante -> VAL . ID COLON tipoValueCons
    (9) declararConstante -> VAL . ID COLON tipo
    (10) declararConstante -> VAL . ID EQUAL valueCons
    (11) declararConstante -> VAL . ID EQUAL expression

    ID              shift and go to state 34


state 15

    (63) funcionesTupla -> tuplaSwap .

    $end            reduce using rule 63 (funcionesTupla -> tuplaSwap .)
    RBRACE          reduce using rule 63 (funcionesTupla -> tuplaSwap .)


state 16

    (64) funcionesTupla -> tuplaToString .

    $end            reduce using rule 64 (funcionesTupla -> tuplaToString .)
    RBRACE          reduce using rule 64 (funcionesTupla -> tuplaToString .)


state 17

    (65) funcionesTupla -> tuplaProductIterator .

    $end            reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)
    RBRACE          reduce using rule 65 (funcionesTupla -> tuplaProductIterator .)


state 18

    (69) funcionesArray -> arrayHead .

    $end            reduce using rule 69 (funcionesArray -> arrayHead .)
    RBRACE          reduce using rule 69 (funcionesArray -> arrayHead .)


state 19

    (70) funcionesArray -> arrayTail .

    $end            reduce using rule 70 (funcionesArray -> arrayTail .)
    RBRACE          reduce using rule 70 (funcionesArray -> arrayTail .)


state 20

    (71) funcionesArray -> arrayLength .

    $end            reduce using rule 71 (funcionesArray -> arrayLength .)
    RBRACE          reduce using rule 71 (funcionesArray -> arrayLength .)


state 21

    (72) funcionesPropias -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 35


state 22

    (73) funcionesPropias -> PRINTLN . LPAREN string RPAREN
    (74) funcionesPropias -> PRINTLN . LPAREN int RPAREN
    (75) funcionesPropias -> PRINTLN . LPAREN booleano RPAREN
    (76) funcionesPropias -> PRINTLN . LPAREN double RPAREN
    (77) funcionesPropias -> PRINTLN . LPAREN ID RPAREN
    (78) funcionesPropias -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 36


state 23

    (94) factor -> int .

    TIMES           reduce using rule 94 (factor -> int .)
    DIVIDE          reduce using rule 94 (factor -> int .)
    PLUS            reduce using rule 94 (factor -> int .)
    MINUS           reduce using rule 94 (factor -> int .)
    $end            reduce using rule 94 (factor -> int .)
    GT              reduce using rule 94 (factor -> int .)
    GE              reduce using rule 94 (factor -> int .)
    LT              reduce using rule 94 (factor -> int .)
    LE              reduce using rule 94 (factor -> int .)
    EQUAL2          reduce using rule 94 (factor -> int .)
    RPAREN          reduce using rule 94 (factor -> int .)
    RBRACE          reduce using rule 94 (factor -> int .)
    LBRACE          reduce using rule 94 (factor -> int .)


state 24

    (95) factor -> double .

    TIMES           reduce using rule 95 (factor -> double .)
    DIVIDE          reduce using rule 95 (factor -> double .)
    PLUS            reduce using rule 95 (factor -> double .)
    MINUS           reduce using rule 95 (factor -> double .)
    $end            reduce using rule 95 (factor -> double .)
    GT              reduce using rule 95 (factor -> double .)
    GE              reduce using rule 95 (factor -> double .)
    LT              reduce using rule 95 (factor -> double .)
    LE              reduce using rule 95 (factor -> double .)
    EQUAL2          reduce using rule 95 (factor -> double .)
    RPAREN          reduce using rule 95 (factor -> double .)
    RBRACE          reduce using rule 95 (factor -> double .)
    LBRACE          reduce using rule 95 (factor -> double .)


state 25

    (100) int -> INT_NUMBER .

    TIMES           reduce using rule 100 (int -> INT_NUMBER .)
    DIVIDE          reduce using rule 100 (int -> INT_NUMBER .)
    PLUS            reduce using rule 100 (int -> INT_NUMBER .)
    MINUS           reduce using rule 100 (int -> INT_NUMBER .)
    $end            reduce using rule 100 (int -> INT_NUMBER .)
    GT              reduce using rule 100 (int -> INT_NUMBER .)
    GE              reduce using rule 100 (int -> INT_NUMBER .)
    LT              reduce using rule 100 (int -> INT_NUMBER .)
    LE              reduce using rule 100 (int -> INT_NUMBER .)
    EQUAL2          reduce using rule 100 (int -> INT_NUMBER .)
    RPAREN          reduce using rule 100 (int -> INT_NUMBER .)
    RBRACE          reduce using rule 100 (int -> INT_NUMBER .)
    LBRACE          reduce using rule 100 (int -> INT_NUMBER .)
    COMMA           reduce using rule 100 (int -> INT_NUMBER .)


state 26

    (99) double -> DOUBLE_NUMBER .

    TIMES           reduce using rule 99 (double -> DOUBLE_NUMBER .)
    DIVIDE          reduce using rule 99 (double -> DOUBLE_NUMBER .)
    PLUS            reduce using rule 99 (double -> DOUBLE_NUMBER .)
    MINUS           reduce using rule 99 (double -> DOUBLE_NUMBER .)
    $end            reduce using rule 99 (double -> DOUBLE_NUMBER .)
    GT              reduce using rule 99 (double -> DOUBLE_NUMBER .)
    GE              reduce using rule 99 (double -> DOUBLE_NUMBER .)
    LT              reduce using rule 99 (double -> DOUBLE_NUMBER .)
    LE              reduce using rule 99 (double -> DOUBLE_NUMBER .)
    EQUAL2          reduce using rule 99 (double -> DOUBLE_NUMBER .)
    RPAREN          reduce using rule 99 (double -> DOUBLE_NUMBER .)
    RBRACE          reduce using rule 99 (double -> DOUBLE_NUMBER .)
    LBRACE          reduce using rule 99 (double -> DOUBLE_NUMBER .)
    COMMA           reduce using rule 99 (double -> DOUBLE_NUMBER .)


state 27

    (82) expression -> expression PLUS . term
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    term                           shift and go to state 37
    factor                         shift and go to state 11
    int                            shift and go to state 23
    double                         shift and go to state 24

state 28

    (83) expression -> expression MINUS . term
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    term                           shift and go to state 38
    factor                         shift and go to state 11
    int                            shift and go to state 23
    double                         shift and go to state 24

state 29

    (85) term -> term TIMES . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    factor                         shift and go to state 39
    int                            shift and go to state 23
    double                         shift and go to state 24

state 30

    (86) term -> term DIVIDE . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    factor                         shift and go to state 40
    int                            shift and go to state 23
    double                         shift and go to state 24

state 31

    (88) sentencia -> IF factor . comparacion factor LBRACE cuerpo RBRACE
    (89) comparacion -> . GT
    (90) comparacion -> . GE
    (91) comparacion -> . LT
    (92) comparacion -> . LE
    (93) comparacion -> . EQUAL2

    GT              shift and go to state 42
    GE              shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQUAL2          shift and go to state 46

    comparacion                    shift and go to state 41

state 32

    (12) declararVariable -> VAR ID . COLON tipoValue
    (13) declararVariable -> VAR ID . COLON tipo
    (14) declararVariable -> VAR ID . EQUAL value
    (15) declararVariable -> VAR ID . EQUAL expression

    COLON           shift and go to state 47
    EQUAL           shift and go to state 48


state 33

    (66) tuplaSwap -> ID DOT . SWAP
    (67) tuplaToString -> ID DOT . TOSTRING
    (68) tuplaProductIterator -> ID DOT . PRODUCTITERATOR
    (79) arrayHead -> ID DOT . HEAD
    (80) arrayTail -> ID DOT . TAIL
    (81) arrayLength -> ID DOT . LENGTH

    SWAP            shift and go to state 49
    TOSTRING        shift and go to state 50
    PRODUCTITERATOR shift and go to state 51
    HEAD            shift and go to state 52
    TAIL            shift and go to state 53
    LENGTH          shift and go to state 54


state 34

    (8) declararConstante -> VAL ID . COLON tipoValueCons
    (9) declararConstante -> VAL ID . COLON tipo
    (10) declararConstante -> VAL ID . EQUAL valueCons
    (11) declararConstante -> VAL ID . EQUAL expression

    COLON           shift and go to state 55
    EQUAL           shift and go to state 56


state 35

    (72) funcionesPropias -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 57


state 36

    (73) funcionesPropias -> PRINTLN LPAREN . string RPAREN
    (74) funcionesPropias -> PRINTLN LPAREN . int RPAREN
    (75) funcionesPropias -> PRINTLN LPAREN . booleano RPAREN
    (76) funcionesPropias -> PRINTLN LPAREN . double RPAREN
    (77) funcionesPropias -> PRINTLN LPAREN . ID RPAREN
    (78) funcionesPropias -> PRINTLN LPAREN . expression RPAREN
    (98) string -> . STRING
    (100) int -> . INT_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (99) double -> . DOUBLE_NUMBER
    (82) expression -> . expression PLUS term
    (83) expression -> . expression MINUS term
    (84) expression -> . term
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (94) factor -> . int
    (95) factor -> . double

    ID              shift and go to state 62
    STRING          shift and go to state 64
    INT_NUMBER      shift and go to state 25
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    DOUBLE_NUMBER   shift and go to state 26

    string                         shift and go to state 58
    int                            shift and go to state 59
    booleano                       shift and go to state 60
    double                         shift and go to state 61
    expression                     shift and go to state 63
    term                           shift and go to state 9
    factor                         shift and go to state 11

state 37

    (82) expression -> expression PLUS term .
    (85) term -> term . TIMES factor
    (86) term -> term . DIVIDE factor

    PLUS            reduce using rule 82 (expression -> expression PLUS term .)
    MINUS           reduce using rule 82 (expression -> expression PLUS term .)
    $end            reduce using rule 82 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 82 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 82 (expression -> expression PLUS term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30


state 38

    (83) expression -> expression MINUS term .
    (85) term -> term . TIMES factor
    (86) term -> term . DIVIDE factor

    PLUS            reduce using rule 83 (expression -> expression MINUS term .)
    MINUS           reduce using rule 83 (expression -> expression MINUS term .)
    $end            reduce using rule 83 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 83 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 83 (expression -> expression MINUS term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30


state 39

    (85) term -> term TIMES factor .

    TIMES           reduce using rule 85 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 85 (term -> term TIMES factor .)
    PLUS            reduce using rule 85 (term -> term TIMES factor .)
    MINUS           reduce using rule 85 (term -> term TIMES factor .)
    $end            reduce using rule 85 (term -> term TIMES factor .)
    RPAREN          reduce using rule 85 (term -> term TIMES factor .)
    RBRACE          reduce using rule 85 (term -> term TIMES factor .)


state 40

    (86) term -> term DIVIDE factor .

    TIMES           reduce using rule 86 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 86 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 86 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 86 (term -> term DIVIDE factor .)
    $end            reduce using rule 86 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 86 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 86 (term -> term DIVIDE factor .)


state 41

    (88) sentencia -> IF factor comparacion . factor LBRACE cuerpo RBRACE
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    factor                         shift and go to state 67
    int                            shift and go to state 23
    double                         shift and go to state 24

state 42

    (89) comparacion -> GT .

    INT_NUMBER      reduce using rule 89 (comparacion -> GT .)
    DOUBLE_NUMBER   reduce using rule 89 (comparacion -> GT .)


state 43

    (90) comparacion -> GE .

    INT_NUMBER      reduce using rule 90 (comparacion -> GE .)
    DOUBLE_NUMBER   reduce using rule 90 (comparacion -> GE .)


state 44

    (91) comparacion -> LT .

    INT_NUMBER      reduce using rule 91 (comparacion -> LT .)
    DOUBLE_NUMBER   reduce using rule 91 (comparacion -> LT .)


state 45

    (92) comparacion -> LE .

    INT_NUMBER      reduce using rule 92 (comparacion -> LE .)
    DOUBLE_NUMBER   reduce using rule 92 (comparacion -> LE .)


state 46

    (93) comparacion -> EQUAL2 .

    INT_NUMBER      reduce using rule 93 (comparacion -> EQUAL2 .)
    DOUBLE_NUMBER   reduce using rule 93 (comparacion -> EQUAL2 .)


state 47

    (12) declararVariable -> VAR ID COLON . tipoValue
    (13) declararVariable -> VAR ID COLON . tipo
    (50) tipoValue -> . STRING_TYPE EQUAL string
    (51) tipoValue -> . BOOL EQUAL booleano
    (52) tipoValue -> . INT EQUAL int
    (53) tipoValue -> . DOUBLE EQUAL double
    (54) tipoValue -> . ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> . ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> . ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> . ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (46) tipo -> . INT
    (47) tipo -> . DOUBLE
    (48) tipo -> . BOOL
    (49) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 70
    BOOL            shift and go to state 71
    INT             shift and go to state 72
    DOUBLE          shift and go to state 73
    ARRAY           shift and go to state 74

    tipoValue                      shift and go to state 68
    tipo                           shift and go to state 69

state 48

    (14) declararVariable -> VAR ID EQUAL . value
    (15) declararVariable -> VAR ID EQUAL . expression
    (16) value -> . string
    (17) value -> . booleano
    (18) value -> . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN
    (22) value -> . ARRAY LPAREN elementosInternos RPAREN
    (82) expression -> . expression PLUS term
    (83) expression -> . expression MINUS term
    (84) expression -> . term
    (98) string -> . STRING
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    NEW             shift and go to state 79
    ARRAY           shift and go to state 80
    STRING          shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    value                          shift and go to state 75
    expression                     shift and go to state 76
    string                         shift and go to state 77
    booleano                       shift and go to state 78
    int                            shift and go to state 23
    term                           shift and go to state 9
    factor                         shift and go to state 11
    double                         shift and go to state 24

state 49

    (66) tuplaSwap -> ID DOT SWAP .

    $end            reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)
    RBRACE          reduce using rule 66 (tuplaSwap -> ID DOT SWAP .)


state 50

    (67) tuplaToString -> ID DOT TOSTRING .

    $end            reduce using rule 67 (tuplaToString -> ID DOT TOSTRING .)
    RBRACE          reduce using rule 67 (tuplaToString -> ID DOT TOSTRING .)


state 51

    (68) tuplaProductIterator -> ID DOT PRODUCTITERATOR .

    $end            reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)
    RBRACE          reduce using rule 68 (tuplaProductIterator -> ID DOT PRODUCTITERATOR .)


state 52

    (79) arrayHead -> ID DOT HEAD .

    $end            reduce using rule 79 (arrayHead -> ID DOT HEAD .)
    RBRACE          reduce using rule 79 (arrayHead -> ID DOT HEAD .)


state 53

    (80) arrayTail -> ID DOT TAIL .

    $end            reduce using rule 80 (arrayTail -> ID DOT TAIL .)
    RBRACE          reduce using rule 80 (arrayTail -> ID DOT TAIL .)


state 54

    (81) arrayLength -> ID DOT LENGTH .

    $end            reduce using rule 81 (arrayLength -> ID DOT LENGTH .)
    RBRACE          reduce using rule 81 (arrayLength -> ID DOT LENGTH .)


state 55

    (8) declararConstante -> VAL ID COLON . tipoValueCons
    (9) declararConstante -> VAL ID COLON . tipo
    (58) tipoValueCons -> . STRING_TYPE EQUAL string
    (59) tipoValueCons -> . BOOL EQUAL booleano
    (60) tipoValueCons -> . INT EQUAL int
    (61) tipoValueCons -> . DOUBLE EQUAL double
    (46) tipo -> . INT
    (47) tipo -> . DOUBLE
    (48) tipo -> . BOOL
    (49) tipo -> . STRING_TYPE

    STRING_TYPE     shift and go to state 83
    BOOL            shift and go to state 84
    INT             shift and go to state 85
    DOUBLE          shift and go to state 86

    tipoValueCons                  shift and go to state 81
    tipo                           shift and go to state 82

state 56

    (10) declararConstante -> VAL ID EQUAL . valueCons
    (11) declararConstante -> VAL ID EQUAL . expression
    (43) valueCons -> . string
    (44) valueCons -> . booleano
    (45) valueCons -> . tupla
    (82) expression -> . expression PLUS term
    (83) expression -> . expression MINUS term
    (84) expression -> . term
    (98) string -> . STRING
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (62) tupla -> . LPAREN elementosInternos2 RPAREN
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    STRING          shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    LPAREN          shift and go to state 92
    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    valueCons                      shift and go to state 87
    expression                     shift and go to state 88
    string                         shift and go to state 89
    booleano                       shift and go to state 90
    tupla                          shift and go to state 91
    term                           shift and go to state 9
    factor                         shift and go to state 11
    int                            shift and go to state 23
    double                         shift and go to state 24

state 57

    (72) funcionesPropias -> INPUT LPAREN RPAREN .

    $end            reduce using rule 72 (funcionesPropias -> INPUT LPAREN RPAREN .)
    RBRACE          reduce using rule 72 (funcionesPropias -> INPUT LPAREN RPAREN .)


state 58

    (73) funcionesPropias -> PRINTLN LPAREN string . RPAREN

    RPAREN          shift and go to state 93


state 59

    (74) funcionesPropias -> PRINTLN LPAREN int . RPAREN
    (94) factor -> int .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 94
    TIMES           reduce using rule 94 (factor -> int .)
    DIVIDE          reduce using rule 94 (factor -> int .)
    PLUS            reduce using rule 94 (factor -> int .)
    MINUS           reduce using rule 94 (factor -> int .)

  ! RPAREN          [ reduce using rule 94 (factor -> int .) ]


state 60

    (75) funcionesPropias -> PRINTLN LPAREN booleano . RPAREN

    RPAREN          shift and go to state 95


state 61

    (76) funcionesPropias -> PRINTLN LPAREN double . RPAREN
    (95) factor -> double .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 96
    TIMES           reduce using rule 95 (factor -> double .)
    DIVIDE          reduce using rule 95 (factor -> double .)
    PLUS            reduce using rule 95 (factor -> double .)
    MINUS           reduce using rule 95 (factor -> double .)

  ! RPAREN          [ reduce using rule 95 (factor -> double .) ]


state 62

    (77) funcionesPropias -> PRINTLN LPAREN ID . RPAREN

    RPAREN          shift and go to state 97


state 63

    (78) funcionesPropias -> PRINTLN LPAREN expression . RPAREN
    (82) expression -> expression . PLUS term
    (83) expression -> expression . MINUS term

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 64

    (98) string -> STRING .

    RPAREN          reduce using rule 98 (string -> STRING .)
    $end            reduce using rule 98 (string -> STRING .)
    RBRACE          reduce using rule 98 (string -> STRING .)
    COMMA           reduce using rule 98 (string -> STRING .)


state 65

    (96) booleano -> TRUE .

    RPAREN          reduce using rule 96 (booleano -> TRUE .)
    $end            reduce using rule 96 (booleano -> TRUE .)
    RBRACE          reduce using rule 96 (booleano -> TRUE .)
    COMMA           reduce using rule 96 (booleano -> TRUE .)


state 66

    (97) booleano -> FALSE .

    RPAREN          reduce using rule 97 (booleano -> FALSE .)
    $end            reduce using rule 97 (booleano -> FALSE .)
    RBRACE          reduce using rule 97 (booleano -> FALSE .)
    COMMA           reduce using rule 97 (booleano -> FALSE .)


state 67

    (88) sentencia -> IF factor comparacion factor . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 99


state 68

    (12) declararVariable -> VAR ID COLON tipoValue .

    $end            reduce using rule 12 (declararVariable -> VAR ID COLON tipoValue .)
    RBRACE          reduce using rule 12 (declararVariable -> VAR ID COLON tipoValue .)


state 69

    (13) declararVariable -> VAR ID COLON tipo .

    $end            reduce using rule 13 (declararVariable -> VAR ID COLON tipo .)
    RBRACE          reduce using rule 13 (declararVariable -> VAR ID COLON tipo .)


state 70

    (50) tipoValue -> STRING_TYPE . EQUAL string
    (49) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 100
    $end            reduce using rule 49 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 49 (tipo -> STRING_TYPE .)


state 71

    (51) tipoValue -> BOOL . EQUAL booleano
    (48) tipo -> BOOL .

    EQUAL           shift and go to state 101
    $end            reduce using rule 48 (tipo -> BOOL .)
    RBRACE          reduce using rule 48 (tipo -> BOOL .)


state 72

    (52) tipoValue -> INT . EQUAL int
    (46) tipo -> INT .

    EQUAL           shift and go to state 102
    $end            reduce using rule 46 (tipo -> INT .)
    RBRACE          reduce using rule 46 (tipo -> INT .)


state 73

    (53) tipoValue -> DOUBLE . EQUAL double
    (47) tipo -> DOUBLE .

    EQUAL           shift and go to state 103
    $end            reduce using rule 47 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 47 (tipo -> DOUBLE .)


state 74

    (54) tipoValue -> ARRAY . LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> ARRAY . LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> ARRAY . LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY . LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 104


state 75

    (14) declararVariable -> VAR ID EQUAL value .

    $end            reduce using rule 14 (declararVariable -> VAR ID EQUAL value .)
    RBRACE          reduce using rule 14 (declararVariable -> VAR ID EQUAL value .)


state 76

    (15) declararVariable -> VAR ID EQUAL expression .
    (82) expression -> expression . PLUS term
    (83) expression -> expression . MINUS term

    $end            reduce using rule 15 (declararVariable -> VAR ID EQUAL expression .)
    RBRACE          reduce using rule 15 (declararVariable -> VAR ID EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 77

    (16) value -> string .

    $end            reduce using rule 16 (value -> string .)
    RBRACE          reduce using rule 16 (value -> string .)


state 78

    (17) value -> booleano .

    $end            reduce using rule 17 (value -> booleano .)
    RBRACE          reduce using rule 17 (value -> booleano .)


state 79

    (18) value -> NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 105


state 80

    (22) value -> ARRAY . LPAREN elementosInternos RPAREN

    LPAREN          shift and go to state 106


state 81

    (8) declararConstante -> VAL ID COLON tipoValueCons .

    $end            reduce using rule 8 (declararConstante -> VAL ID COLON tipoValueCons .)
    RBRACE          reduce using rule 8 (declararConstante -> VAL ID COLON tipoValueCons .)


state 82

    (9) declararConstante -> VAL ID COLON tipo .

    $end            reduce using rule 9 (declararConstante -> VAL ID COLON tipo .)
    RBRACE          reduce using rule 9 (declararConstante -> VAL ID COLON tipo .)


state 83

    (58) tipoValueCons -> STRING_TYPE . EQUAL string
    (49) tipo -> STRING_TYPE .

    EQUAL           shift and go to state 107
    $end            reduce using rule 49 (tipo -> STRING_TYPE .)
    RBRACE          reduce using rule 49 (tipo -> STRING_TYPE .)


state 84

    (59) tipoValueCons -> BOOL . EQUAL booleano
    (48) tipo -> BOOL .

    EQUAL           shift and go to state 108
    $end            reduce using rule 48 (tipo -> BOOL .)
    RBRACE          reduce using rule 48 (tipo -> BOOL .)


state 85

    (60) tipoValueCons -> INT . EQUAL int
    (46) tipo -> INT .

    EQUAL           shift and go to state 109
    $end            reduce using rule 46 (tipo -> INT .)
    RBRACE          reduce using rule 46 (tipo -> INT .)


state 86

    (61) tipoValueCons -> DOUBLE . EQUAL double
    (47) tipo -> DOUBLE .

    EQUAL           shift and go to state 110
    $end            reduce using rule 47 (tipo -> DOUBLE .)
    RBRACE          reduce using rule 47 (tipo -> DOUBLE .)


state 87

    (10) declararConstante -> VAL ID EQUAL valueCons .

    $end            reduce using rule 10 (declararConstante -> VAL ID EQUAL valueCons .)
    RBRACE          reduce using rule 10 (declararConstante -> VAL ID EQUAL valueCons .)


state 88

    (11) declararConstante -> VAL ID EQUAL expression .
    (82) expression -> expression . PLUS term
    (83) expression -> expression . MINUS term

    $end            reduce using rule 11 (declararConstante -> VAL ID EQUAL expression .)
    RBRACE          reduce using rule 11 (declararConstante -> VAL ID EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 89

    (43) valueCons -> string .

    $end            reduce using rule 43 (valueCons -> string .)
    RBRACE          reduce using rule 43 (valueCons -> string .)


state 90

    (44) valueCons -> booleano .

    $end            reduce using rule 44 (valueCons -> booleano .)
    RBRACE          reduce using rule 44 (valueCons -> booleano .)


state 91

    (45) valueCons -> tupla .

    $end            reduce using rule 45 (valueCons -> tupla .)
    RBRACE          reduce using rule 45 (valueCons -> tupla .)


state 92

    (62) tupla -> LPAREN . elementosInternos2 RPAREN
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    elementosInternos2             shift and go to state 111
    int                            shift and go to state 112
    double                         shift and go to state 113
    booleano                       shift and go to state 114
    string                         shift and go to state 115

state 93

    (73) funcionesPropias -> PRINTLN LPAREN string RPAREN .

    $end            reduce using rule 73 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)
    RBRACE          reduce using rule 73 (funcionesPropias -> PRINTLN LPAREN string RPAREN .)


state 94

    (74) funcionesPropias -> PRINTLN LPAREN int RPAREN .

    $end            reduce using rule 74 (funcionesPropias -> PRINTLN LPAREN int RPAREN .)
    RBRACE          reduce using rule 74 (funcionesPropias -> PRINTLN LPAREN int RPAREN .)


state 95

    (75) funcionesPropias -> PRINTLN LPAREN booleano RPAREN .

    $end            reduce using rule 75 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)
    RBRACE          reduce using rule 75 (funcionesPropias -> PRINTLN LPAREN booleano RPAREN .)


state 96

    (76) funcionesPropias -> PRINTLN LPAREN double RPAREN .

    $end            reduce using rule 76 (funcionesPropias -> PRINTLN LPAREN double RPAREN .)
    RBRACE          reduce using rule 76 (funcionesPropias -> PRINTLN LPAREN double RPAREN .)


state 97

    (77) funcionesPropias -> PRINTLN LPAREN ID RPAREN .

    $end            reduce using rule 77 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 77 (funcionesPropias -> PRINTLN LPAREN ID RPAREN .)


state 98

    (78) funcionesPropias -> PRINTLN LPAREN expression RPAREN .

    $end            reduce using rule 78 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 78 (funcionesPropias -> PRINTLN LPAREN expression RPAREN .)


state 99

    (88) sentencia -> IF factor comparacion factor LBRACE . cuerpo RBRACE
    (1) cuerpo -> . expression
    (2) cuerpo -> . sentencia
    (3) cuerpo -> . declararVariable
    (4) cuerpo -> . declararConstante
    (5) cuerpo -> . funcionesTupla
    (6) cuerpo -> . funcionesArray
    (7) cuerpo -> . funcionesPropias
    (82) expression -> . expression PLUS term
    (83) expression -> . expression MINUS term
    (84) expression -> . term
    (88) sentencia -> . IF factor comparacion factor LBRACE cuerpo RBRACE
    (12) declararVariable -> . VAR ID COLON tipoValue
    (13) declararVariable -> . VAR ID COLON tipo
    (14) declararVariable -> . VAR ID EQUAL value
    (15) declararVariable -> . VAR ID EQUAL expression
    (8) declararConstante -> . VAL ID COLON tipoValueCons
    (9) declararConstante -> . VAL ID COLON tipo
    (10) declararConstante -> . VAL ID EQUAL valueCons
    (11) declararConstante -> . VAL ID EQUAL expression
    (63) funcionesTupla -> . tuplaSwap
    (64) funcionesTupla -> . tuplaToString
    (65) funcionesTupla -> . tuplaProductIterator
    (69) funcionesArray -> . arrayHead
    (70) funcionesArray -> . arrayTail
    (71) funcionesArray -> . arrayLength
    (72) funcionesPropias -> . INPUT LPAREN RPAREN
    (73) funcionesPropias -> . PRINTLN LPAREN string RPAREN
    (74) funcionesPropias -> . PRINTLN LPAREN int RPAREN
    (75) funcionesPropias -> . PRINTLN LPAREN booleano RPAREN
    (76) funcionesPropias -> . PRINTLN LPAREN double RPAREN
    (77) funcionesPropias -> . PRINTLN LPAREN ID RPAREN
    (78) funcionesPropias -> . PRINTLN LPAREN expression RPAREN
    (85) term -> . term TIMES factor
    (86) term -> . term DIVIDE factor
    (87) term -> . factor
    (66) tuplaSwap -> . ID DOT SWAP
    (67) tuplaToString -> . ID DOT TOSTRING
    (68) tuplaProductIterator -> . ID DOT PRODUCTITERATOR
    (79) arrayHead -> . ID DOT HEAD
    (80) arrayTail -> . ID DOT TAIL
    (81) arrayLength -> . ID DOT LENGTH
    (94) factor -> . int
    (95) factor -> . double
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER

    IF              shift and go to state 10
    VAR             shift and go to state 12
    VAL             shift and go to state 14
    INPUT           shift and go to state 21
    PRINTLN         shift and go to state 22
    ID              shift and go to state 13
    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26

    factor                         shift and go to state 11
    cuerpo                         shift and go to state 116
    expression                     shift and go to state 2
    sentencia                      shift and go to state 3
    declararVariable               shift and go to state 4
    declararConstante              shift and go to state 5
    funcionesTupla                 shift and go to state 6
    funcionesArray                 shift and go to state 7
    funcionesPropias               shift and go to state 8
    term                           shift and go to state 9
    tuplaSwap                      shift and go to state 15
    tuplaToString                  shift and go to state 16
    tuplaProductIterator           shift and go to state 17
    arrayHead                      shift and go to state 18
    arrayTail                      shift and go to state 19
    arrayLength                    shift and go to state 20
    int                            shift and go to state 23
    double                         shift and go to state 24

state 100

    (50) tipoValue -> STRING_TYPE EQUAL . string
    (98) string -> . STRING

    STRING          shift and go to state 64

    string                         shift and go to state 117

state 101

    (51) tipoValue -> BOOL EQUAL . booleano
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    booleano                       shift and go to state 118

state 102

    (52) tipoValue -> INT EQUAL . int
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 119

state 103

    (53) tipoValue -> DOUBLE EQUAL . double
    (99) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 26

    double                         shift and go to state 120

state 104

    (54) tipoValue -> ARRAY LBRACK . INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN
    (55) tipoValue -> ARRAY LBRACK . DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (56) tipoValue -> ARRAY LBRACK . BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN
    (57) tipoValue -> ARRAY LBRACK . STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 121
    DOUBLE          shift and go to state 122
    BOOL            shift and go to state 123
    STRING_TYPE     shift and go to state 124


state 105

    (18) value -> NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN
    (19) value -> NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 125


state 106

    (22) value -> ARRAY LPAREN . elementosInternos RPAREN
    (23) elementosInternos -> . elementosInternosInt
    (24) elementosInternos -> . elementosInternosDouble
    (25) elementosInternos -> . elementosInternosBool
    (26) elementosInternos -> . elementosInternosString
    (27) elementosInternosInt -> . int
    (28) elementosInternosInt -> . int COMMA elementosInternosInt
    (29) elementosInternosDouble -> . double
    (30) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (31) elementosInternosBool -> . booleano
    (32) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (33) elementosInternosString -> . string
    (34) elementosInternosString -> . string COMMA elementosInternosString
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    elementosInternos              shift and go to state 126
    elementosInternosInt           shift and go to state 127
    elementosInternosDouble        shift and go to state 128
    elementosInternosBool          shift and go to state 129
    elementosInternosString        shift and go to state 130
    int                            shift and go to state 131
    double                         shift and go to state 132
    booleano                       shift and go to state 133
    string                         shift and go to state 134

state 107

    (58) tipoValueCons -> STRING_TYPE EQUAL . string
    (98) string -> . STRING

    STRING          shift and go to state 64

    string                         shift and go to state 135

state 108

    (59) tipoValueCons -> BOOL EQUAL . booleano
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    booleano                       shift and go to state 136

state 109

    (60) tipoValueCons -> INT EQUAL . int
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 137

state 110

    (61) tipoValueCons -> DOUBLE EQUAL . double
    (99) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 26

    double                         shift and go to state 138

state 111

    (62) tupla -> LPAREN elementosInternos2 . RPAREN

    RPAREN          shift and go to state 139


state 112

    (35) elementosInternos2 -> int .
    (39) elementosInternos2 -> int . COMMA elementosInternos2

    RPAREN          reduce using rule 35 (elementosInternos2 -> int .)
    COMMA           shift and go to state 140


state 113

    (36) elementosInternos2 -> double .
    (40) elementosInternos2 -> double . COMMA elementosInternos2

    RPAREN          reduce using rule 36 (elementosInternos2 -> double .)
    COMMA           shift and go to state 141


state 114

    (37) elementosInternos2 -> booleano .
    (41) elementosInternos2 -> booleano . COMMA elementosInternos2

    RPAREN          reduce using rule 37 (elementosInternos2 -> booleano .)
    COMMA           shift and go to state 142


state 115

    (38) elementosInternos2 -> string .
    (42) elementosInternos2 -> string . COMMA elementosInternos2

    RPAREN          reduce using rule 38 (elementosInternos2 -> string .)
    COMMA           shift and go to state 143


state 116

    (88) sentencia -> IF factor comparacion factor LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 144


state 117

    (50) tipoValue -> STRING_TYPE EQUAL string .

    $end            reduce using rule 50 (tipoValue -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 50 (tipoValue -> STRING_TYPE EQUAL string .)


state 118

    (51) tipoValue -> BOOL EQUAL booleano .

    $end            reduce using rule 51 (tipoValue -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 51 (tipoValue -> BOOL EQUAL booleano .)


state 119

    (52) tipoValue -> INT EQUAL int .

    $end            reduce using rule 52 (tipoValue -> INT EQUAL int .)
    RBRACE          reduce using rule 52 (tipoValue -> INT EQUAL int .)


state 120

    (53) tipoValue -> DOUBLE EQUAL double .

    $end            reduce using rule 53 (tipoValue -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 53 (tipoValue -> DOUBLE EQUAL double .)


state 121

    (54) tipoValue -> ARRAY LBRACK INT . RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 145


state 122

    (55) tipoValue -> ARRAY LBRACK DOUBLE . RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 146


state 123

    (56) tipoValue -> ARRAY LBRACK BOOL . RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 147


state 124

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE . RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 148


state 125

    (18) value -> NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN
    (19) value -> NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN
    (20) value -> NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN
    (21) value -> NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    INT             shift and go to state 149
    DOUBLE          shift and go to state 150
    BOOL            shift and go to state 151
    STRING_TYPE     shift and go to state 152


state 126

    (22) value -> ARRAY LPAREN elementosInternos . RPAREN

    RPAREN          shift and go to state 153


state 127

    (23) elementosInternos -> elementosInternosInt .

    RPAREN          reduce using rule 23 (elementosInternos -> elementosInternosInt .)


state 128

    (24) elementosInternos -> elementosInternosDouble .

    RPAREN          reduce using rule 24 (elementosInternos -> elementosInternosDouble .)


state 129

    (25) elementosInternos -> elementosInternosBool .

    RPAREN          reduce using rule 25 (elementosInternos -> elementosInternosBool .)


state 130

    (26) elementosInternos -> elementosInternosString .

    RPAREN          reduce using rule 26 (elementosInternos -> elementosInternosString .)


state 131

    (27) elementosInternosInt -> int .
    (28) elementosInternosInt -> int . COMMA elementosInternosInt

    RPAREN          reduce using rule 27 (elementosInternosInt -> int .)
    COMMA           shift and go to state 154


state 132

    (29) elementosInternosDouble -> double .
    (30) elementosInternosDouble -> double . COMMA elementosInternosDouble

    RPAREN          reduce using rule 29 (elementosInternosDouble -> double .)
    COMMA           shift and go to state 155


state 133

    (31) elementosInternosBool -> booleano .
    (32) elementosInternosBool -> booleano . COMMA elementosInternosBool

    RPAREN          reduce using rule 31 (elementosInternosBool -> booleano .)
    COMMA           shift and go to state 156


state 134

    (33) elementosInternosString -> string .
    (34) elementosInternosString -> string . COMMA elementosInternosString

    RPAREN          reduce using rule 33 (elementosInternosString -> string .)
    COMMA           shift and go to state 157


state 135

    (58) tipoValueCons -> STRING_TYPE EQUAL string .

    $end            reduce using rule 58 (tipoValueCons -> STRING_TYPE EQUAL string .)
    RBRACE          reduce using rule 58 (tipoValueCons -> STRING_TYPE EQUAL string .)


state 136

    (59) tipoValueCons -> BOOL EQUAL booleano .

    $end            reduce using rule 59 (tipoValueCons -> BOOL EQUAL booleano .)
    RBRACE          reduce using rule 59 (tipoValueCons -> BOOL EQUAL booleano .)


state 137

    (60) tipoValueCons -> INT EQUAL int .

    $end            reduce using rule 60 (tipoValueCons -> INT EQUAL int .)
    RBRACE          reduce using rule 60 (tipoValueCons -> INT EQUAL int .)


state 138

    (61) tipoValueCons -> DOUBLE EQUAL double .

    $end            reduce using rule 61 (tipoValueCons -> DOUBLE EQUAL double .)
    RBRACE          reduce using rule 61 (tipoValueCons -> DOUBLE EQUAL double .)


state 139

    (62) tupla -> LPAREN elementosInternos2 RPAREN .

    $end            reduce using rule 62 (tupla -> LPAREN elementosInternos2 RPAREN .)
    RBRACE          reduce using rule 62 (tupla -> LPAREN elementosInternos2 RPAREN .)


state 140

    (39) elementosInternos2 -> int COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    int                            shift and go to state 112
    elementosInternos2             shift and go to state 158
    double                         shift and go to state 113
    booleano                       shift and go to state 114
    string                         shift and go to state 115

state 141

    (40) elementosInternos2 -> double COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    double                         shift and go to state 113
    elementosInternos2             shift and go to state 159
    int                            shift and go to state 112
    booleano                       shift and go to state 114
    string                         shift and go to state 115

state 142

    (41) elementosInternos2 -> booleano COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    booleano                       shift and go to state 114
    elementosInternos2             shift and go to state 160
    int                            shift and go to state 112
    double                         shift and go to state 113
    string                         shift and go to state 115

state 143

    (42) elementosInternos2 -> string COMMA . elementosInternos2
    (35) elementosInternos2 -> . int
    (36) elementosInternos2 -> . double
    (37) elementosInternos2 -> . booleano
    (38) elementosInternos2 -> . string
    (39) elementosInternos2 -> . int COMMA elementosInternos2
    (40) elementosInternos2 -> . double COMMA elementosInternos2
    (41) elementosInternos2 -> . booleano COMMA elementosInternos2
    (42) elementosInternos2 -> . string COMMA elementosInternos2
    (100) int -> . INT_NUMBER
    (99) double -> . DOUBLE_NUMBER
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE
    (98) string -> . STRING

    INT_NUMBER      shift and go to state 25
    DOUBLE_NUMBER   shift and go to state 26
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    STRING          shift and go to state 64

    string                         shift and go to state 115
    elementosInternos2             shift and go to state 161
    int                            shift and go to state 112
    double                         shift and go to state 113
    booleano                       shift and go to state 114

state 144

    (88) sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .

    $end            reduce using rule 88 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 88 (sentencia -> IF factor comparacion factor LBRACE cuerpo RBRACE .)


state 145

    (54) tipoValue -> ARRAY LBRACK INT RBRACK . EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 162


state 146

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK . EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 163


state 147

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK . EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 164


state 148

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK . EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    EQUAL           shift and go to state 165


state 149

    (18) value -> NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 166


state 150

    (19) value -> NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 167


state 151

    (20) value -> NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 168


state 152

    (21) value -> NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 169


state 153

    (22) value -> ARRAY LPAREN elementosInternos RPAREN .

    $end            reduce using rule 22 (value -> ARRAY LPAREN elementosInternos RPAREN .)
    RBRACE          reduce using rule 22 (value -> ARRAY LPAREN elementosInternos RPAREN .)


state 154

    (28) elementosInternosInt -> int COMMA . elementosInternosInt
    (27) elementosInternosInt -> . int
    (28) elementosInternosInt -> . int COMMA elementosInternosInt
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 131
    elementosInternosInt           shift and go to state 170

state 155

    (30) elementosInternosDouble -> double COMMA . elementosInternosDouble
    (29) elementosInternosDouble -> . double
    (30) elementosInternosDouble -> . double COMMA elementosInternosDouble
    (99) double -> . DOUBLE_NUMBER

    DOUBLE_NUMBER   shift and go to state 26

    double                         shift and go to state 132
    elementosInternosDouble        shift and go to state 171

state 156

    (32) elementosInternosBool -> booleano COMMA . elementosInternosBool
    (31) elementosInternosBool -> . booleano
    (32) elementosInternosBool -> . booleano COMMA elementosInternosBool
    (96) booleano -> . TRUE
    (97) booleano -> . FALSE

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66

    booleano                       shift and go to state 133
    elementosInternosBool          shift and go to state 172

state 157

    (34) elementosInternosString -> string COMMA . elementosInternosString
    (33) elementosInternosString -> . string
    (34) elementosInternosString -> . string COMMA elementosInternosString
    (98) string -> . STRING

    STRING          shift and go to state 64

    string                         shift and go to state 134
    elementosInternosString        shift and go to state 173

state 158

    (39) elementosInternos2 -> int COMMA elementosInternos2 .

    RPAREN          reduce using rule 39 (elementosInternos2 -> int COMMA elementosInternos2 .)


state 159

    (40) elementosInternos2 -> double COMMA elementosInternos2 .

    RPAREN          reduce using rule 40 (elementosInternos2 -> double COMMA elementosInternos2 .)


state 160

    (41) elementosInternos2 -> booleano COMMA elementosInternos2 .

    RPAREN          reduce using rule 41 (elementosInternos2 -> booleano COMMA elementosInternos2 .)


state 161

    (42) elementosInternos2 -> string COMMA elementosInternos2 .

    RPAREN          reduce using rule 42 (elementosInternos2 -> string COMMA elementosInternos2 .)


state 162

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL . NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    NEW             shift and go to state 174


state 163

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL . NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 175


state 164

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL . NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    NEW             shift and go to state 176


state 165

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL . NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    NEW             shift and go to state 177


state 166

    (18) value -> NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 178


state 167

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 179


state 168

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 180


state 169

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 181


state 170

    (28) elementosInternosInt -> int COMMA elementosInternosInt .

    RPAREN          reduce using rule 28 (elementosInternosInt -> int COMMA elementosInternosInt .)


state 171

    (30) elementosInternosDouble -> double COMMA elementosInternosDouble .

    RPAREN          reduce using rule 30 (elementosInternosDouble -> double COMMA elementosInternosDouble .)


state 172

    (32) elementosInternosBool -> booleano COMMA elementosInternosBool .

    RPAREN          reduce using rule 32 (elementosInternosBool -> booleano COMMA elementosInternosBool .)


state 173

    (34) elementosInternosString -> string COMMA elementosInternosString .

    RPAREN          reduce using rule 34 (elementosInternosString -> string COMMA elementosInternosString .)


state 174

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW . ARRAY LBRACK INT RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 182


state 175

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW . ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 183


state 176

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW . ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 184


state 177

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW . ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    ARRAY           shift and go to state 185


state 178

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 186

state 179

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 187

state 180

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 188

state 181

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 189

state 182

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY . LBRACK INT RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 190


state 183

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY . LBRACK DOUBLE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 191


state 184

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY . LBRACK BOOL RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 192


state 185

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY . LBRACK STRING_TYPE RBRACK LPAREN int RPAREN

    LBRACK          shift and go to state 193


state 186

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 194


state 187

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 195


state 188

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 196


state 189

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 197


state 190

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK . INT RBRACK LPAREN int RPAREN

    INT             shift and go to state 198


state 191

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK . DOUBLE RBRACK LPAREN int RPAREN

    DOUBLE          shift and go to state 199


state 192

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK . BOOL RBRACK LPAREN int RPAREN

    BOOL            shift and go to state 200


state 193

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK . STRING_TYPE RBRACK LPAREN int RPAREN

    STRING_TYPE     shift and go to state 201


state 194

    (18) value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 18 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 18 (value -> NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 195

    (19) value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 19 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 19 (value -> NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 196

    (20) value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 20 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 20 (value -> NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 197

    (21) value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 21 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 21 (value -> NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)


state 198

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 202


state 199

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 203


state 200

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 204


state 201

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE . RBRACK LPAREN int RPAREN

    RBRACK          shift and go to state 205


state 202

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 206


state 203

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 207


state 204

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 208


state 205

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK . LPAREN int RPAREN

    LPAREN          shift and go to state 209


state 206

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 210

state 207

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 211

state 208

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 212

state 209

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN . int RPAREN
    (100) int -> . INT_NUMBER

    INT_NUMBER      shift and go to state 25

    int                            shift and go to state 213

state 210

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 214


state 211

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 215


state 212

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 216


state 213

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int . RPAREN

    RPAREN          shift and go to state 217


state 214

    (54) tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .

    $end            reduce using rule 54 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 54 (tipoValue -> ARRAY LBRACK INT RBRACK EQUAL NEW ARRAY LBRACK INT RBRACK LPAREN int RPAREN .)


state 215

    (55) tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 55 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 55 (tipoValue -> ARRAY LBRACK DOUBLE RBRACK EQUAL NEW ARRAY LBRACK DOUBLE RBRACK LPAREN int RPAREN .)


state 216

    (56) tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .

    $end            reduce using rule 56 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 56 (tipoValue -> ARRAY LBRACK BOOL RBRACK EQUAL NEW ARRAY LBRACK BOOL RBRACK LPAREN int RPAREN .)


state 217

    (57) tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .

    $end            reduce using rule 57 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)
    RBRACE          reduce using rule 57 (tipoValue -> ARRAY LBRACK STRING_TYPE RBRACK EQUAL NEW ARRAY LBRACK STRING_TYPE RBRACK LPAREN int RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 61 resolved as shift
